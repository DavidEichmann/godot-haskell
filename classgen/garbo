[GodotClass {_gcName = "GlobalConstants", _gcBaseClass = "", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("KEY_BACKTAB",16777219),("KEY_BRACELEFT",123),("OP_MULTIPLY",8),("KEY_LAUNCH1",16777305),("KEY_F2",16777245),("TYPE_NIL",0),("PROPERTY_USAGE_SCRIPT_VARIABLE",8192),("KEY_KP_ENTER",16777222),("KEY_LAUNCHA",16777314),("OP_EQUAL",0),("TYPE_INT",2),("KEY_T",84),("KEY_MACRON",175),("TYPE_VECTOR2",5),("OK",0),("PROPERTY_USAGE_NETWORK",4),("PROPERTY_HINT_KEY_ACCEL",7),("KEY_D",68),("KEY_MODIFIER_MASK",-16777216),("KEY_KP_0",16777350),("JOY_AXIS_3",3),("KEY_CENT",162),("KEY_LAUNCHMAIL",16777302),("CORNER_TOP_RIGHT",1),("OP_MAX",25),("SPKEY",16777216),("KEY_4",52),("TYPE_STRING_ARRAY",23),("KEY_SUPER_R",16777261),("KEY_DEGREE",176),("ERR_QUERY_FAILED",21),("JOY_BUTTON_5",5),("KEY_CURRENCY",164),("PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS",21),("BUTTON_WHEEL_DOWN",5),("VALIGN_TOP",0),("KEY_OPENURL",16777301),("KEY_F10",16777253),("ERR_FILE_NOT_FOUND",7),("KEY_IACUTE",205),("KEY_F9",16777252),("JOY_SONY_X",0),("ERR_BUSY",44),("ERR_FILE_EOF",18),("KEY_BRACERIGHT",125),("KEY_THORN",222),("BUTTON_MASK_MIDDLE",4),("KEY_TAB",16777218),("KEY_YACUTE",221),("JOY_DPAD_DOWN",13),("KEY_PERIODCENTERED",183),("JOY_AXIS_8",8),("KEY_O",79),("KEY_OTILDE",213),("ERR_FILE_BAD_DRIVE",8),("KEY_END",16777230),("KEY_PLUS",43),("MARGIN_TOP",1),("KEY_GREATER",62),("KEY_KP_6",16777356),("JOY_AXIS_5",5),("KEY_B",66),("KEY_NOBREAKSPACE",160),("METHOD_FLAG_VIRTUAL",32),("JOY_R3",9),("JOY_BUTTON_8",8),("KEY_2",50),("TYPE_INT_ARRAY",21),("PROPERTY_HINT_FILE",13),("JOY_ANALOG_LX",0),("TYPE_VECTOR2_ARRAY",24),("OP_LESS_EQUAL",3),("KEY_PAUSE",16777225),("JOY_BUTTON_11",11),("PROPERTY_USAGE_NOEDITOR",5),("BUTTON_LEFT",1),("KEY_LAUNCH7",16777311),("MARGIN_LEFT",0),("KEY_F4",16777247),("METHOD_FLAG_EDITOR",2),("BUTTON_MASK_RIGHT",2),("TYPE_STRING",4),("ERR_BUG",47),("KEY_ASCIICIRCUM",94),("JOY_DS_A",1),("KEY_R",82),("JOY_DPAD_RIGHT",15),("TYPE_VECTOR3",7),("ERR_DATABASE_CANT_READ",34),("KEY_ICIRCUMFLEX",206),("JOY_SONY_CIRCLE",1),("JOY_AXIS_2",2),("KEY_E",69),("KEY_KP_1",16777351),("PROPERTY_USAGE_NO_INSTANCE_STATE",2048),("KEY_5",53),("OP_NOT",23),("KEY_MASK_KPAD",536870912),("OP_XOR",22),("KEY_META",16777239),("ERR_INVALID_PARAMETER",31),("KEY_LAUNCH0",16777304),("KEY_F3",16777246),("OP_BIT_XOR",18),("METHOD_FLAG_FROM_SCRIPT",64),("KEY_KP_ADD",16777349),("BUTTON_WHEEL_RIGHT",7),("TYPE_NODE_PATH",15),("KEY_U",85),("ERR_UNCONFIGURED",3),("JOY_XBOX_Y",3),("PROPERTY_HINT_LENGTH",5),("KEY_STOP",16777282),("ERR_UNAVAILABLE",2),("ERR_ALREADY_IN_USE",22),("JOY_DPAD_UP",12),("KEY_X",88),("KEY_QUOTEDBL",34),("KEY_REGISTERED",174),("KEY_H",72),("KEY_DIRECTION_R",16777267),("KEY_RIGHT",16777233),("JOY_ANALOG_L2",6),("JOY_BUTTON_2",2),("KEY_GUILLEMOTRIGHT",187),("PROPERTY_USAGE_RESTART_IF_CHANGED",4096),("KEY_MEDIAPLAY",16777292),("BUTTON_WHEEL_UP",4),("KEY_8",56),("ERR_PARSE_ERROR",43),("KEY_KP_MULTIPLY",16777345),("JOY_BUTTON_10",10),("KEY_EACUTE",201),("KEY_LAUNCH6",16777310),("KEY_F5",16777248),("KEY_UACUTE",218),("KEY_THREESUPERIOR",179),("TYPE_VECTOR3_ARRAY",25),("KEY_OCIRCUMFLEX",212),("KEY_LAUNCHF",16777319),("CORNER_BOTTOM_LEFT",3),("PROPERTY_HINT_DIR",14),("JOY_XBOX_B",1),("KEY_ARING",197),("KEY_S",83),("KEY_SEMICOLON",59),("KEY_BRACKETLEFT",91),("PROPERTY_HINT_FLAGS",8),("OP_AND",20),("KEY_PARENLEFT",40),("PROPERTY_USAGE_EDITOR",2),("KEY_KP_7",16777357),("JOY_AXIS_4",4),("KEY_HYPER_R",16777264),("KEY_C",67),("OP_BIT_AND",16),("JOY_R2",7),("KEY_MEDIANEXT",16777295),("KEY_BACK",16777280),("JOY_BUTTON_9",9),("KEY_MASK_SHIFT",33554432),("KEY_3",51),("KEY_SSHARP",223),("JOY_ANALOG_LY",1),("KEY_SCROLLLOCK",16777243),("PROPERTY_HINT_GLOBAL_FILE",15),("KEY_CODE_MASK",33554431),("JOY_ANALOG_R2",7),("ERR_LINK_FAILED",38),("JOY_BUTTON_15",15),("KEY_LAUNCH3",16777307),("JOY_BUTTON_MAX",16),("PROPERTY_USAGE_CHECKABLE",16),("KEY_PAGEUP",16777235),("METHOD_FLAG_CONST",8),("OP_STRING_CONCAT",13),("TYPE_ARRAY",19),("ERR_FILE_BAD_PATH",9),("KEY_LAUNCHC",16777316),("KEY_SEARCH",16777299),("KEY_IDIAERESIS",207),("KEY_BACKSLASH",92),("KEY_DIRECTION_L",16777266),("KEY_V",86),("KEY_YDIAERESIS",255),("KEY_KP_2",16777352),("JOY_AXIS_1",1),("KEY_F",70),("KEY_BASSUP",16777288),("KEY_BASSBOOST",16777287),("KEY_NTILDE",209),("ERR_METHOD_NOT_FOUND",37),("KEY_IGRAVE",204),("KEY_QUESTION",63),("KEY_6",54),("KEY_EXCLAM",33),("KEY_KP_PERIOD",16777348),("KEY_I",73),("KEY_ECIRCUMFLEX",202),("OP_ADD",6),("ERR_FILE_MISSING_DEPENDENCIES",17),("PROPERTY_HINT_LAYERS_2D_PHYSICS",10),("JOY_BUTTON_3",3),("KEY_QUOTELEFT",96),("ERR_FILE_CANT_WRITE",13),("KEY_9",57),("HALIGN_CENTER",1),("ERR_DOES_NOT_EXIST",33),("TYPE_BOOL",1),("PROPERTY_USAGE_STORE_IF_NONONE",1024),("KEY_F16",16777259),("PROPERTY_HINT_EXP_EASING",4),("KEY_DIVISION",247),("KEY_DELETE",16777224),("JOY_XBOX_X",2),("KEY_BAR",124),("HALIGN_LEFT",0),("JOY_SONY_TRIANGLE",3),("KEY_OACUTE",211),("MARGIN_RIGHT",2),("KEY_SECTION",167),("ERR_TIMEOUT",24),("BUTTON_RIGHT",2),("KEY_Y",89),("ERR_SCRIPT_FAILED",39),("KEY_ETH",208),("KEY_ALT",16777240),("JOY_R",5),("KEY_UCIRCUMFLEX",219),("OP_LESS",2),("ERR_INVALID_DATA",30),("ERR_OUT_OF_MEMORY",6),("KEY_HOMEPAGE",16777297),("OP_SUBTRACT",7),("KEY_KP_8",16777358),("JOY_ANALOG_RX",2),("KEY_L",76),("KEY_MEDIASTOP",16777293),("KEY_MULTIPLY",215),("KEY_STERLING",163),("OP_NEGATE",10),("JOY_BUTTON_6",6),("PROPERTY_HINT_COLOR_NO_ALPHA",19),("KEY_AE",198),("KEY_MINUS",45),("BUTTON_MIDDLE",3),("KEY_F13",16777256),("KEY_LAUNCH9",16777313),("KEY_EXCLAMDOWN",161),("ERR_PARAMETER_RANGE_ERROR",5),("KEY_QUESTIONDOWN",191),("TYPE_COLOR_ARRAY",26),("KEY_EQUAL",61),("OP_BIT_NEGATE",19),("JOY_L3",8),("OP_SHIFT_LEFT",14),("KEY_SPACE",32),("PROPERTY_USAGE_STORE_IF_NONZERO",512),("CORNER_TOP_LEFT",0),("KEY_HOME",16777229),("KEY_MASCULINE",186),("ERR_COMPILATION_FAILED",36),("KEY_W",87),("VALIGN_CENTER",1),("KEY_KP_3",16777353),("PROPERTY_HINT_GLOBAL_DIR",16),("JOY_AXIS_0",0),("KEY_G",71),("TYPE_DICTIONARY",18),("KEY_FAVORITES",16777298),("JOY_L",4),("KEY_DIAERESIS",168),("PROPERTY_HINT_IMAGE_COMPRESS_LOSSY",20),("KEY_ONEHALF",189),("KEY_7",55),("KEY_INSERT",16777223),("KEY_STANDBY",16777300),("OP_IN",24),("PROPERTY_HINT_ENUM",3),("KEY_BACKSPACE",16777220),("TYPE_AABB",11),("KEY_KP_DIVIDE",16777346),("JOY_BUTTON_14",14),("OP_SHIFT_RIGHT",15),("KEY_LAUNCH2",16777306),("KEY_F1",16777244),("KEY_CONTROL",16777238),("KEY_AACUTE",193),("KEY_SYSREQ",16777227),("KEY_LAUNCHB",16777315),("PROPERTY_USAGE_CATEGORY",256),("PROPERTY_USAGE_INTERNATIONALIZED",64),("TYPE_OBJECT",17),("KEY_CAPSLOCK",16777241),("KEY_UGRAVE",217),("JOY_DS_Y",2),("KEY_CEDILLA",184),("KEY_ORDFEMININE",170),("KEY_Z",90),("PROPERTY_USAGE_EDITOR_HELPER",8),("ERR_CYCLIC_LINK",40),("KEY_EGRAVE",200),("KEY_DOWN",16777234),("OP_MODULE",12),("KEY_MASK_ALT",67108864),("KEY_J",74),("KEY_SUPER_L",16777260),("HALIGN_RIGHT",2),("JOY_BUTTON_0",0),("KEY_TREBLEDOWN",16777291),("KEY_EDIAERESIS",203),("KEY_MASK_CTRL",268435456),("OP_GREATER",4),("KEY_HYPHEN",173),("KEY_YEN",165),("ERR_DATABASE_CANT_WRITE",35),("TYPE_COLOR",14),("VERTICAL",1),("KEY_VOLUMEDOWN",16777284),("KEY_F15",16777258),("KEY_UDIAERESIS",220),("KEY_REFRESH",16777283),("KEY_SLASH",47),("KEY_F12",16777255),("PROPERTY_USAGE_GROUP",128),("OP_OR",21),("KEY_COPYRIGHT",169),("KEY_LAUNCH8",16777312),("PROPERTY_USAGE_CHECKED",32),("OP_BIT_OR",17),("KEY_COMMA",44),("TYPE_BASIS",12),("KEY_NUMLOCK",16777242),("KEY_VOLUMEUP",16777286),("METHOD_FLAG_NOSCRIPT",4),("JOY_L2",6),("TYPE_REAL",3),("TYPE_TRANSFORM2D",8),("KEY_HYPER_L",16777263),("KEY_UP",16777232),("TYPE_RAW_ARRAY",20),("KEY_PERIOD",46),("KEY_ACIRCUMFLEX",194),("TYPE_RECT2",6),("KEY_KP_9",16777359),("JOY_ANALOG_RY",3),("KEY_M",77),("KEY_MEDIAPREVIOUS",16777294),("KEY_AT",64),("KEY_TREBLEUP",16777290),("JOY_BUTTON_7",7),("KEY_0",48),("KEY_UNDERSCORE",95),("PROPERTY_HINT_LAYERS_2D_RENDER",9),("KEY_ENTER",16777221),("KEY_ASTERISK",42),("KEY_UNKNOWN",33554431),("KEY_PARENRIGHT",41),("JOY_BUTTON_13",13),("PROPERTY_HINT_LAYERS_3D_PHYSICS",12),("KEY_LAUNCH5",16777309),("KEY_F6",16777249),("CORNER_BOTTOM_RIGHT",2),("ERR_FILE_CANT_OPEN",12),("KEY_LAUNCHE",16777318),("KEY_NUMBERSIGN",35),("JOY_XBOX_A",0),("KEY_KP_SUBTRACT",16777347),("KEY_SHIFT",16777237),("KEY_P",80),("ERR_CANT_ACQUIRE_RESOURCE",28),("METHOD_FLAG_NORMAL",1),("KEY_OGRAVE",210),("TYPE_RID",16),("KEY_ODIAERESIS",214),("ERR_FILE_UNRECOGNIZED",15),("KEY_DOLLAR",36),("KEY_KP_4",16777354),("JOY_AXIS_7",7),("KEY_BRACKETRIGHT",93),("KEY_MU",181),("KEY_ONEQUARTER",188),("ERR_LOCKED",23),("TYPE_REAL_ARRAY",22),("ERR_ALREADY_EXISTS",32),("ERR_HELP",46),("PROPERTY_USAGE_STORAGE",1),("JOY_START",11),("KEY_K",75),("OP_DIVIDE",9),("FAILED",1),("JOY_BUTTON_1",1),("KEY_PERCENT",37),("PROPERTY_HINT_RANGE",1),("KEY_LEFT",16777231),("KEY_F14",16777257),("METHOD_FLAGS_DEFAULT",1),("JOY_AXIS_MAX",10),("METHOD_FLAG_REVERSE",16),("KEY_GUILLEMOTLEFT",171),("TYPE_TRANSFORM",13),("JOY_DS_X",3),("OP_POSITIVE",11),("KEY_FORWARD",16777281),("KEY_AMPERSAND",38),("TYPE_MAX",27),("KEY_MENU",16777262),("JOY_SELECT",10),("VALIGN_BOTTOM",2),("ERR_UNAUTHORIZED",4),("JOY_DPAD_LEFT",14),("KEY_PARAGRAPH",182),("KEY_NOTSIGN",172),("TYPE_QUAT",10),("KEY_N",78),("ERR_FILE_CANT_READ",14),("JOY_AXIS_9",9),("KEY_AGRAVE",192),("JOY_BUTTON_4",4),("KEY_BROKENBAR",166),("ERR_FILE_NO_PERMISSION",10),("BUTTON_WHEEL_LEFT",6),("KEY_PLUSMINUS",177),("JOY_SONY_SQUARE",2),("ERR_FILE_CORRUPT",16),("KEY_F11",16777254),("OP_NOT_EQUAL",1),("KEY_OOBLIQUE",216),("HORIZONTAL",0),("KEY_ACUTE",180),("KEY_F8",16777251),("KEY_ADIAERESIS",196),("MARGIN_BOTTOM",3),("PROPERTY_HINT_NONE",0),("KEY_MASK_META",134217728),("KEY_MASK_GROUP_SWITCH",1073741824),("KEY_COLON",58),("KEY_HELP",16777265),("KEY_LAUNCHD",16777317),("KEY_ONESUPERIOR",185),("KEY_BASSDOWN",16777289),("KEY_ATILDE",195),("PROPERTY_HINT_MULTILINE_TEXT",18),("KEY_LAUNCHMEDIA",16777303),("JOY_DS_B",0),("KEY_MEDIARECORD",16777296),("KEY_Q",81),("BUTTON_MASK_LEFT",1),("KEY_CCEDILLA",199),("ERR_CANT_CREATE",20),("PROPERTY_HINT_EXP_RANGE",2),("OP_GREATER_EQUAL",5),("KEY_KP_5",16777355),("KEY_APOSTROPHE",39),("JOY_AXIS_6",6),("KEY_A",65),("KEY_THREEQUARTERS",190),("PROPERTY_USAGE_DEFAULT",7),("KEY_LESS",60),("KEY_CLEAR",16777228),("PROPERTY_HINT_RESOURCE_TYPE",17),("KEY_ESCAPE",16777217),("KEY_1",49),("KEY_PAGEDOWN",16777236),("KEY_TWOSUPERIOR",178),("PROPERTY_HINT_LAYERS_3D_RENDER",11),("PROPERTY_USAGE_DEFAULT_INTL",71),("TYPE_PLANE",9),("JOY_BUTTON_12",12),("KEY_PRINT",16777226),("ERR_FILE_ALREADY_IN_USE",11),("KEY_LAUNCH4",16777308),("KEY_F7",16777250),("KEY_ASCIITILDE",126),("KEY_MASK_CMD",268435456),("KEY_VOLUMEMUTE",16777285),("ERR_CANT_OPEN",19)], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Object", _gcBaseClass = "", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("CONNECT_DEFERRED",1),("NOTIFICATION_POSTINITIALIZE",0),("CONNECT_ONESHOT",4),("CONNECT_PERSIST",2),("NOTIFICATION_PREDELETE",1)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "script_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "free", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_notification", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "what", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_property_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_init", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_class", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_class", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_indexed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_indexed", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_property_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_method_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "notification", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "what", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "reversed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_instance_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "script", _gaType = CustomType "Reference", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_script", _gmReturnType = CustomType "Reference", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_meta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_meta", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_meta", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_meta_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_user_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arguments", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"}]},GodotMethod {_gmName = "has_user_signal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "emit_signal", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "call", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "call_deferred", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "callv", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg_array", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_method", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_signal_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_signal_connection_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_incoming_connections", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "connect", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "binds", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "disconnect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_connected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_block_signals", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_blocking_signals", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "property_list_changed_notify", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_message_translation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "can_translate_messages", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "tr", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "message", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_queued_for_deletion", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ConnectFlags", _geValues = fromList [("CONNECT_DEFERRED",1),("CONNECT_ONESHOT",4),("CONNECT_PERSIST",2)]}]},GodotClass {_gcName = "Reference", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "init_ref", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "reference", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unreference", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Resource", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "resource_local_to_scene", _gcType = PrimitiveType BoolType, _gcGetter = "is_local_to_scene", _gcSetter = "set_local_to_scene", _gcIndex = -1},GodotProperty {_gpName = "resource_path", _gcType = CoreType "String", _gcGetter = "get_path", _gcSetter = "set_path", _gcIndex = -1},GodotProperty {_gpName = "resource_name", _gcType = CoreType "String", _gcGetter = "get_name", _gcSetter = "set_name", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_setup_local_to_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "take_over_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_local_to_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_local_to_scene", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_local_scene", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "setup_local_to_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "duplicate", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subresources", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]}], _gcEnums = []},GodotClass {_gcName = "Script", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "source_code", _gcType = CoreType "String", _gcGetter = "get_source_code", _gcSetter = "set_source_code", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "can_instance", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "instance_has", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_object", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_source_code", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_source_code", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_source_code", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "source", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reload", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "keep_state", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_base_script", _gmReturnType = CustomType "Script", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_instance_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_script_signal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_tool", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "WeakRef", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_ref", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Image", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("FORMAT_RGBAF",11),("FORMAT_PVRTC2A",26),("FORMAT_ETC2_RGB8",34),("FORMAT_RGF",9),("FORMAT_DXT3",18),("COMPRESS_SOURCE_GENERIC",0),("FORMAT_ETC2_R11S",31),("FORMAT_PVRTC4A",28),("FORMAT_RGBA4444",6),("FORMAT_ETC2_RG11S",33),("FORMAT_RGBF",10),("FORMAT_MAX",37),("COMPRESS_SOURCE_NORMAL",2),("COMPRESS_ETC",3),("FORMAT_RGTC_R",20),("COMPRESS_S3TC",0),("COMPRESS_PVRTC4",2),("FORMAT_ETC2_RG11",32),("FORMAT_ETC",29),("FORMAT_RGBA5551",7),("COMPRESS_ETC2",4),("FORMAT_ETC2_R11",30),("FORMAT_LA8",1),("FORMAT_DXT5",19),("ALPHA_NONE",0),("ALPHA_BIT",1),("FORMAT_ETC2_RGB8A1",36),("FORMAT_RGTC_RG",21),("FORMAT_BPTC_RGBF",23),("COMPRESS_SOURCE_SRGB",1),("FORMAT_RGBA8",5),("INTERPOLATE_NEAREST",0),("FORMAT_RGBAH",15),("FORMAT_RGBE9995",16),("FORMAT_BPTC_RGBFU",24),("ALPHA_BLEND",2),("FORMAT_PVRTC2",25),("FORMAT_DXT1",17),("FORMAT_ETC2_RGBA8",35),("FORMAT_BPTC_RGBA",22),("COMPRESS_PVRTC2",1),("FORMAT_RF",8),("FORMAT_L8",0),("FORMAT_RGB8",4),("FORMAT_RGBH",14),("FORMAT_PVRTC4",27),("FORMAT_RH",12),("FORMAT_R8",2),("INTERPOLATE_BILINEAR",1),("INTERPOLATE_CUBIC",2),("FORMAT_RG8",3),("FORMAT_RGH",13)], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "Dictionary", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_mipmaps", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_format", _gmReturnType = EnumType "enum.Image::Format", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_data", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "convert", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mipmap_offset", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mipmap", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "resize_to_po2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "square", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "resize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "interpolation", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "shrink_x2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "expand_x2_hq2x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "crop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "flip_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "flip_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "generate_mipmaps", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_mipmaps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_mipmaps", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "create_from_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_mipmaps", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_empty", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "load", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "save_png", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "detect_alpha", _gmReturnType = EnumType "enum.Image::AlphaMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_invisible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "compress", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "source", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lossy_quality", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "decompress", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_compressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "fix_alpha_edges", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "premultiply_alpha", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "srgb_to_linear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "normalmap_to_xy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "blit_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blit_rect_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend_rect_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "fill", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_used_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rect", _gmReturnType = CustomType "Image", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "copy_from", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unlock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pixel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pixel", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "load_png_from_buffer", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "buffer", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "load_jpg_from_buffer", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "buffer", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "AlphaMode", _geValues = fromList [("ALPHA_NONE",0),("ALPHA_BIT",1),("ALPHA_BLEND",2)]},GodotEnum {_geName = CustomType "CompressSource", _geValues = fromList [("COMPRESS_SOURCE_GENERIC",0),("COMPRESS_SOURCE_NORMAL",2),("COMPRESS_SOURCE_SRGB",1)]},GodotEnum {_geName = CustomType "Interpolation", _geValues = fromList [("INTERPOLATE_NEAREST",0),("INTERPOLATE_BILINEAR",1),("INTERPOLATE_CUBIC",2)]},GodotEnum {_geName = CustomType "CompressMode", _geValues = fromList [("COMPRESS_ETC",3),("COMPRESS_S3TC",0),("COMPRESS_PVRTC4",2),("COMPRESS_ETC2",4),("COMPRESS_PVRTC2",1)]},GodotEnum {_geName = CustomType "Format", _geValues = fromList [("FORMAT_RGBAF",11),("FORMAT_PVRTC2A",26),("FORMAT_ETC2_RGB8",34),("FORMAT_RGF",9),("FORMAT_DXT3",18),("FORMAT_ETC2_R11S",31),("FORMAT_PVRTC4A",28),("FORMAT_RGBA4444",6),("FORMAT_ETC2_RG11S",33),("FORMAT_RGBF",10),("FORMAT_MAX",37),("FORMAT_RGTC_R",20),("FORMAT_ETC2_RG11",32),("FORMAT_ETC",29),("FORMAT_RGBA5551",7),("FORMAT_ETC2_R11",30),("FORMAT_LA8",1),("FORMAT_DXT5",19),("FORMAT_ETC2_RGB8A1",36),("FORMAT_RGTC_RG",21),("FORMAT_BPTC_RGBF",23),("FORMAT_RGBA8",5),("FORMAT_RGBAH",15),("FORMAT_RGBE9995",16),("FORMAT_BPTC_RGBFU",24),("FORMAT_PVRTC2",25),("FORMAT_DXT1",17),("FORMAT_ETC2_RGBA8",35),("FORMAT_BPTC_RGBA",22),("FORMAT_RF",8),("FORMAT_L8",0),("FORMAT_RGB8",4),("FORMAT_RGBH",14),("FORMAT_PVRTC4",27),("FORMAT_RH",12),("FORMAT_R8",2),("FORMAT_RG8",3),("FORMAT_RGH",13)]}]},GodotClass {_gcName = "InputEvent", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "device", _gcType = PrimitiveType IntType, _gcGetter = "get_device", _gcSetter = "set_device", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_device", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_device", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_action", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_released", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_echo", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "as_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "action_match", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shortcut_match", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_type", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "xformed_by", _gmReturnType = CustomType "InputEvent", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]}], _gcEnums = []},GodotClass {_gcName = "InputEventWithModifiers", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "alt", _gcType = PrimitiveType BoolType, _gcGetter = "get_alt", _gcSetter = "set_alt", _gcIndex = -1},GodotProperty {_gpName = "shift", _gcType = PrimitiveType BoolType, _gcGetter = "get_shift", _gcSetter = "set_shift", _gcIndex = -1},GodotProperty {_gpName = "control", _gcType = PrimitiveType BoolType, _gcGetter = "get_control", _gcSetter = "set_control", _gcIndex = -1},GodotProperty {_gpName = "meta", _gcType = PrimitiveType BoolType, _gcGetter = "get_metakey", _gcSetter = "set_metakey", _gcIndex = -1},GodotProperty {_gpName = "command", _gcType = PrimitiveType BoolType, _gcGetter = "get_command", _gcSetter = "set_command", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_alt", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_alt", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shift", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shift", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_control", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_control", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_metakey", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_metakey", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_command", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_command", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventKey", _gcBaseClass = "InputEventWithModifiers", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1},GodotProperty {_gpName = "scancode", _gcType = PrimitiveType IntType, _gcGetter = "get_scancode", _gcSetter = "set_scancode", _gcIndex = -1},GodotProperty {_gpName = "unicode", _gcType = PrimitiveType IntType, _gcGetter = "get_unicode", _gcSetter = "set_unicode", _gcIndex = -1},GodotProperty {_gpName = "echo", _gcType = PrimitiveType IntType, _gcGetter = "is_echo", _gcSetter = "set_echo", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_scancode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scancode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scancode", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_unicode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unicode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unicode", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_echo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "echo", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scancode_with_modifiers", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventMouse", _gcBaseClass = "InputEventWithModifiers", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "button_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_button_mask", _gcSetter = "set_button_mask", _gcIndex = -1},GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1},GodotProperty {_gpName = "global_position", _gcType = CoreType "Vector2", _gcGetter = "get_global_position", _gcSetter = "set_global_position", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_button_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "global_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventMouseButton", _gcBaseClass = "InputEventMouse", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "factor", _gcType = PrimitiveType FloatType, _gcGetter = "get_factor", _gcSetter = "set_factor", _gcIndex = -1},GodotProperty {_gpName = "button_index", _gcType = PrimitiveType IntType, _gcGetter = "get_button_index", _gcSetter = "set_button_index", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1},GodotProperty {_gpName = "doubleclick", _gcType = PrimitiveType BoolType, _gcGetter = "is_doubleclick", _gcSetter = "set_doubleclick", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_factor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "factor", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_factor", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_button_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_doubleclick", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "doubleclick", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_doubleclick", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventMouseMotion", _gcBaseClass = "InputEventMouse", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "relative", _gcType = CoreType "Vector2", _gcGetter = "get_relative", _gcSetter = "set_relative", _gcIndex = -1},GodotProperty {_gpName = "speed", _gcType = CoreType "Vector2", _gcGetter = "get_speed", _gcSetter = "set_speed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_relative", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "relative", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_relative", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_speed", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventJoypadButton", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "button_index", _gcType = PrimitiveType IntType, _gcGetter = "get_button_index", _gcSetter = "set_button_index", _gcIndex = -1},GodotProperty {_gpName = "pressure", _gcType = PrimitiveType FloatType, _gcGetter = "get_pressure", _gcSetter = "set_pressure", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_button_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pressure", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressure", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pressure", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "InputEventJoypadMotion", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "axis", _gcType = PrimitiveType IntType, _gcGetter = "get_axis", _gcSetter = "set_axis", _gcIndex = -1},GodotProperty {_gpName = "axis_value", _gcType = PrimitiveType FloatType, _gcGetter = "get_axis_value", _gcSetter = "set_axis_value", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_axis", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_axis", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_axis_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis_value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_axis_value", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventScreenDrag", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "index", _gcType = PrimitiveType IntType, _gcGetter = "get_index", _gcSetter = "set_index", _gcIndex = -1},GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1},GodotProperty {_gpName = "relative", _gcType = CoreType "Vector2", _gcGetter = "get_relative", _gcSetter = "set_relative", _gcIndex = -1},GodotProperty {_gpName = "speed", _gcType = CoreType "Vector2", _gcGetter = "get_speed", _gcSetter = "set_speed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_relative", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "relative", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_relative", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_speed", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventScreenTouch", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "index", _gcType = PrimitiveType IntType, _gcGetter = "get_index", _gcSetter = "set_index", _gcIndex = -1},GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "InputEventAction", _gcBaseClass = "InputEvent", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "action", _gcType = CoreType "String", _gcGetter = "get_action", _gcSetter = "set_action", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "InputEventGesture", _gcBaseClass = "InputEventWithModifiers", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventMagnifyGesture", _gcBaseClass = "InputEventGesture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "factor", _gcType = PrimitiveType FloatType, _gcGetter = "get_factor", _gcSetter = "set_factor", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_factor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "factor", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_factor", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InputEventPanGesture", _gcBaseClass = "InputEventGesture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "delta", _gcType = CoreType "Vector2", _gcGetter = "get_delta", _gcSetter = "set_delta", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_delta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_delta", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "FuncRef", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "call_func", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_instance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_function", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "StreamPeer", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "big_endian", _gcType = PrimitiveType BoolType, _gcGetter = "is_big_endian_enabled", _gcSetter = "set_big_endian", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "put_data", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_partial_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_partial_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_available_bytes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_big_endian", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_big_endian_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "put_8", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_u8", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_16", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_u16", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_32", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_u32", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_64", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_u64", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_float", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_double", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_utf8_string", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "put_var", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_8", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_u8", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_16", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_u16", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_32", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_u32", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_64", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_u64", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_float", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_double", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_utf8_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_var", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "StreamPeerBuffer", _gcBaseClass = "StreamPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data_array", _gcType = CoreType "PoolByteArray", _gcGetter = "get_data_array", _gcSetter = "set_data_array", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "resize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_data_array", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_data_array", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "duplicate", _gmReturnType = CustomType "StreamPeerBuffer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "StreamPeerTCP", _gcBaseClass = "StreamPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("STATUS_CONNECTED",2),("STATUS_CONNECTING",1),("STATUS_ERROR",3),("STATUS_NONE",0)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "connect_to_host", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "host", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_connected_to_host", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_status", _gmReturnType = EnumType "enum.StreamPeerTCP::Status", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connected_host", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connected_port", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "disconnect_from_host", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_no_delay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Status", _geValues = fromList [("STATUS_CONNECTED",2),("STATUS_CONNECTING",1),("STATUS_ERROR",3),("STATUS_NONE",0)]}]},GodotClass {_gcName = "TCP_Server", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "listen", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bind_address", _gaType = CoreType "String", _gaDefaultValue = Just "*"}]},GodotMethod {_gmName = "is_connection_available", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "take_connection", _gmReturnType = CustomType "StreamPeerTCP", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PacketPeer", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "allow_object_decoding", _gcType = PrimitiveType BoolType, _gcGetter = "is_object_decoding_allowed", _gcSetter = "set_allow_object_decoding", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_var", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "put_var", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "var", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_packet", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "put_packet", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "buffer", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_packet_error", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_available_packet_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_allow_object_decoding", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_object_decoding_allowed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PacketPeerUDP", _gcBaseClass = "PacketPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "listen", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bind_address", _gaType = CoreType "String", _gaDefaultValue = Just "*"},GodotArgument {_gaName = "recv_buf_size", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "65536"}]},GodotMethod {_gmName = "close", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "wait", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_listening", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_packet_ip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_packet_port", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dest_address", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "host", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "StreamPeerSSL", _gcBaseClass = "StreamPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("STATUS_CONNECTED",1),("STATUS_ERROR_NO_CERTIFICATE",2),("STATUS_DISCONNECTED",0),("STATUS_ERROR_HOSTNAME_MISMATCH",3)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "accept_stream", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "StreamPeer", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "connect_to_stream", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "StreamPeer", _gaDefaultValue = Nothing},GodotArgument {_gaName = "validate_certs", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "for_hostname", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_status", _gmReturnType = EnumType "enum.StreamPeerSSL::Status", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "disconnect_from_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Status", _geValues = fromList [("STATUS_CONNECTED",1),("STATUS_ERROR_NO_CERTIFICATE",2),("STATUS_DISCONNECTED",0),("STATUS_ERROR_HOSTNAME_MISMATCH",3)]}]},GodotClass {_gcName = "IP", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("RESOLVER_INVALID_ID",-1),("TYPE_NONE",0),("RESOLVER_STATUS_WAITING",1),("TYPE_IPV4",1),("RESOLVER_STATUS_ERROR",3),("RESOLVER_STATUS_DONE",2),("RESOLVER_STATUS_NONE",0),("TYPE_IPV6",2),("RESOLVER_MAX_QUERIES",32),("TYPE_ANY",3)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "resolve_hostname", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "host", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ip_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "3"}]},GodotMethod {_gmName = "resolve_hostname_queue_item", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "host", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ip_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "3"}]},GodotMethod {_gmName = "get_resolve_item_status", _gmReturnType = EnumType "enum.IP::ResolverStatus", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resolve_item_address", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase_resolve_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_local_addresses", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_cache", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hostname", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcEnums = [GodotEnum {_geName = CustomType "ResolverStatus", _geValues = fromList [("RESOLVER_STATUS_WAITING",1),("RESOLVER_STATUS_ERROR",3),("RESOLVER_STATUS_DONE",2),("RESOLVER_STATUS_NONE",0)]},GodotEnum {_geName = CustomType "Type", _geValues = fromList [("TYPE_NONE",0),("TYPE_IPV4",1),("TYPE_IPV6",2),("TYPE_ANY",3)]}]},GodotClass {_gcName = "PacketPeerStream", _gcBaseClass = "PacketPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "input_buffer_max_size", _gcType = PrimitiveType IntType, _gcGetter = "get_input_buffer_max_size", _gcSetter = "set_input_buffer_max_size", _gcIndex = -1},GodotProperty {_gpName = "output_buffer_max_size", _gcType = PrimitiveType IntType, _gcGetter = "get_output_buffer_max_size", _gcSetter = "set_output_buffer_max_size", _gcIndex = -1},GodotProperty {_gpName = "stream_peer", _gcType = CustomType "StreamPeer", _gcGetter = "get_stream_peer", _gcSetter = "set_stream_peer", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_stream_peer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer", _gaType = CustomType "StreamPeer", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream_peer", _gmReturnType = CustomType "StreamPeer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_input_buffer_max_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_size_bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_output_buffer_max_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_size_bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_input_buffer_max_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_output_buffer_max_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "NetworkedMultiplayerPeer", _gcBaseClass = "PacketPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("CONNECTION_DISCONNECTED",0),("TRANSFER_MODE_UNRELIABLE",0),("CONNECTION_CONNECTED",2),("TARGET_PEER_SERVER",1),("TARGET_PEER_BROADCAST",0),("CONNECTION_CONNECTING",1),("TRANSFER_MODE_RELIABLE",2),("TRANSFER_MODE_UNRELIABLE_ORDERED",1)], _gcProperties = [GodotProperty {_gpName = "refuse_new_connections", _gcType = PrimitiveType BoolType, _gcGetter = "is_refusing_new_connections", _gcSetter = "set_refuse_new_connections", _gcIndex = -1},GodotProperty {_gpName = "transfer_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_transfer_mode", _gcSetter = "set_transfer_mode", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "connection_failed", _gsArguments = []},GodotSignal {_gsName = "connection_succeeded", _gsArguments = []},GodotSignal {_gsName = "peer_disconnected", _gsArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "peer_connected", _gsArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "server_disconnected", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_transfer_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transfer_mode", _gmReturnType = EnumType "enum.NetworkedMultiplayerPeer::TransferMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_target_peer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_packet_peer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "poll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connection_status", _gmReturnType = EnumType "enum.NetworkedMultiplayerPeer::ConnectionStatus", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_unique_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_refuse_new_connections", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_refusing_new_connections", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ConnectionStatus", _geValues = fromList [("CONNECTION_DISCONNECTED",0),("CONNECTION_CONNECTED",2),("CONNECTION_CONNECTING",1)]},GodotEnum {_geName = CustomType "TransferMode", _geValues = fromList [("TRANSFER_MODE_UNRELIABLE",0),("TRANSFER_MODE_RELIABLE",2),("TRANSFER_MODE_UNRELIABLE_ORDERED",1)]}]},GodotClass {_gcName = "MainLoop", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_WM_ABOUT",91),("NOTIFICATION_WM_GO_BACK_REQUEST",7),("NOTIFICATION_WM_QUIT_REQUEST",6),("NOTIFICATION_WM_FOCUS_IN",4),("NOTIFICATION_WM_MOUSE_EXIT",3),("NOTIFICATION_TRANSLATION_CHANGED",90),("NOTIFICATION_WM_FOCUS_OUT",5),("NOTIFICATION_OS_MEMORY_WARNING",9),("NOTIFICATION_WM_UNFOCUS_REQUEST",8),("NOTIFICATION_WM_MOUSE_ENTER",2)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_input_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ev", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_input_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_initialize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_iteration", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_idle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_drop_files", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "files", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_finalize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "input_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ev", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "input_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "init", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "iteration", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "idle", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "finish", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Translation", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "messages", _gcType = CoreType "PoolStringArray", _gcGetter = "_get_messages", _gcSetter = "_set_messages", _gcIndex = -1},GodotProperty {_gpName = "locale", _gcType = CoreType "String", _gcGetter = "get_locale", _gcSetter = "set_locale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_locale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "locale", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_locale", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_message", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src_message", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "xlated_message", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_message", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src_message", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase_message", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "src_message", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_message_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_message_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_messages", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_messages", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PHashTranslation", _gcBaseClass = "Translation", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "generate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CustomType "Translation", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "UndoRedo", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MERGE_DISABLE",0),("MERGE_ALL",2),("MERGE_ENDS",1)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "merge_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "commit_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_do_method", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_undo_method", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_do_property", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_undo_property", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_do_reference", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_undo_reference", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_history", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_action_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_version", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "redo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "undo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "MergeMode", _geValues = fromList [("MERGE_DISABLE",0),("MERGE_ALL",2),("MERGE_ENDS",1)]}]},GodotClass {_gcName = "HTTPClient", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("STATUS_CONNECTED",5),("RESPONSE_CREATED",201),("RESPONSE_SWITCHING_PROTOCOLS",101),("RESPONSE_PRECONDITION_FAILED",412),("RESPONSE_USE_PROXY",305),("RESPONSE_SEE_OTHER",303),("RESPONSE_FAILED_DEPENDENCY",424),("RESPONSE_GONE",410),("RESPONSE_FORBIDDEN",403),("RESPONSE_INSUFFICIENT_STORAGE",507),("RESPONSE_NOT_MODIFIED",304),("RESPONSE_CONFLICT",409),("RESPONSE_REQUEST_URI_TOO_LONG",414),("STATUS_RESOLVING",1),("STATUS_CONNECTION_ERROR",8),("RESPONSE_ALREADY_REPORTED",208),("RESPONSE_TEMPORARY_REDIRECT",307),("STATUS_CANT_CONNECT",4),("STATUS_CONNECTING",3),("RESPONSE_BAD_REQUEST",400),("RESPONSE_UNSUPPORTED_MEDIA_TYPE",415),("RESPONSE_SWITCH_PROXY",306),("STATUS_CANT_RESOLVE",2),("RESPONSE_NOT_IMPLEMENTED",501),("RESPONSE_REQUEST_ENTITY_TOO_LARGE",413),("METHOD_OPTIONS",5),("RESPONSE_NON_AUTHORITATIVE_INFORMATION",203),("RESPONSE_OK",200),("RESPONSE_NO_CONTENT",204),("RESPONSE_NETWORK_AUTH_REQUIRED",511),("RESPONSE_PERMANENT_REDIRECT",308),("RESPONSE_PRECONDITION_REQUIRED",428),("RESPONSE_LENGTH_REQUIRED",411),("RESPONSE_UNAVAILABLE_FOR_LEGAL_REASONS",451),("RESPONSE_INTERNAL_SERVER_ERROR",500),("RESPONSE_REQUEST_TIMEOUT",408),("METHOD_TRACE",6),("RESPONSE_LOOP_DETECTED",508),("RESPONSE_MISDIRECTED_REQUEST",421),("METHOD_DELETE",4),("RESPONSE_TOO_MANY_REQUESTS",429),("RESPONSE_NOT_EXTENDED",510),("METHOD_PUT",3),("RESPONSE_MOVED_PERMANENTLY",301),("RESPONSE_NOT_ACCEPTABLE",406),("RESPONSE_SERVICE_UNAVAILABLE",503),("RESPONSE_BAD_GATEWAY",502),("METHOD_MAX",9),("RESPONSE_RESET_CONTENT",205),("RESPONSE_VARIANT_ALSO_NEGOTIATES",506),("RESPONSE_PROCESSING",102),("RESPONSE_UPGRADE_REQUIRED",426),("RESPONSE_EXPECTATION_FAILED",417),("RESPONSE_UNPROCESSABLE_ENTITY",422),("RESPONSE_REQUEST_HEADER_FIELDS_TOO_LARGE",431),("STATUS_REQUESTING",6),("RESPONSE_IM_A_TEAPOT",418),("RESPONSE_FOUND",302),("STATUS_DISCONNECTED",0),("RESPONSE_HTTP_VERSION_NOT_SUPPORTED",505),("RESPONSE_CONTINUE",100),("RESPONSE_ACCEPTED",202),("RESPONSE_IM_USED",226),("RESPONSE_REQUESTED_RANGE_NOT_SATISFIABLE",416),("STATUS_SSL_HANDSHAKE_ERROR",9),("METHOD_HEAD",1),("RESPONSE_UNAUTHORIZED",401),("RESPONSE_NOT_FOUND",404),("RESPONSE_PAYMENT_REQUIRED",402),("METHOD_POST",2),("RESPONSE_GATEWAY_TIMEOUT",504),("RESPONSE_MULTIPLE_CHOICES",300),("STATUS_BODY",7),("RESPONSE_METHOD_NOT_ALLOWED",405),("RESPONSE_MULTI_STATUS",207),("RESPONSE_LOCKED",423),("METHOD_CONNECT",7),("METHOD_PATCH",8),("METHOD_GET",0),("RESPONSE_PROXY_AUTHENTICATION_REQUIRED",407),("RESPONSE_PARTIAL_CONTENT",206)], _gcProperties = [GodotProperty {_gpName = "blocking_mode_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_blocking_mode_enabled", _gcSetter = "set_blocking_mode", _gcIndex = -1},GodotProperty {_gpName = "connection", _gcType = CustomType "StreamPeer", _gcGetter = "get_connection", _gcSetter = "set_connection", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "connect_to_host", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "host", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "use_ssl", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "verify_host", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "set_connection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "connection", _gaType = CustomType "StreamPeer", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection", _gmReturnType = CustomType "StreamPeer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "request_raw", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "url", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "headers", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "request", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "url", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "headers", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "close", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_response", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_response_chunked", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_response_code", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_response_headers", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_response_headers_as_dictionary", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_response_body_length", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "read_response_body_chunk", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_read_chunk_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_blocking_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_blocking_mode_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_status", _gmReturnType = EnumType "enum.HTTPClient::Status", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "poll", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "query_string_from_dict", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fields", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Status", _geValues = fromList [("STATUS_CONNECTED",5),("STATUS_RESOLVING",1),("STATUS_CONNECTION_ERROR",8),("STATUS_CANT_CONNECT",4),("STATUS_CONNECTING",3),("STATUS_CANT_RESOLVE",2),("STATUS_REQUESTING",6),("STATUS_DISCONNECTED",0),("STATUS_SSL_HANDSHAKE_ERROR",9),("STATUS_BODY",7)]},GodotEnum {_geName = CustomType "Method", _geValues = fromList [("METHOD_OPTIONS",5),("METHOD_TRACE",6),("METHOD_DELETE",4),("METHOD_PUT",3),("METHOD_MAX",9),("METHOD_HEAD",1),("METHOD_POST",2),("METHOD_CONNECT",7),("METHOD_PATCH",8),("METHOD_GET",0)]},GodotEnum {_geName = CustomType "ResponseCode", _geValues = fromList [("RESPONSE_CREATED",201),("RESPONSE_SWITCHING_PROTOCOLS",101),("RESPONSE_PRECONDITION_FAILED",412),("RESPONSE_USE_PROXY",305),("RESPONSE_SEE_OTHER",303),("RESPONSE_FAILED_DEPENDENCY",424),("RESPONSE_GONE",410),("RESPONSE_FORBIDDEN",403),("RESPONSE_INSUFFICIENT_STORAGE",507),("RESPONSE_NOT_MODIFIED",304),("RESPONSE_CONFLICT",409),("RESPONSE_REQUEST_URI_TOO_LONG",414),("RESPONSE_ALREADY_REPORTED",208),("RESPONSE_TEMPORARY_REDIRECT",307),("RESPONSE_BAD_REQUEST",400),("RESPONSE_UNSUPPORTED_MEDIA_TYPE",415),("RESPONSE_SWITCH_PROXY",306),("RESPONSE_NOT_IMPLEMENTED",501),("RESPONSE_REQUEST_ENTITY_TOO_LARGE",413),("RESPONSE_NON_AUTHORITATIVE_INFORMATION",203),("RESPONSE_OK",200),("RESPONSE_NO_CONTENT",204),("RESPONSE_NETWORK_AUTH_REQUIRED",511),("RESPONSE_PERMANENT_REDIRECT",308),("RESPONSE_PRECONDITION_REQUIRED",428),("RESPONSE_LENGTH_REQUIRED",411),("RESPONSE_UNAVAILABLE_FOR_LEGAL_REASONS",451),("RESPONSE_INTERNAL_SERVER_ERROR",500),("RESPONSE_REQUEST_TIMEOUT",408),("RESPONSE_LOOP_DETECTED",508),("RESPONSE_MISDIRECTED_REQUEST",421),("RESPONSE_TOO_MANY_REQUESTS",429),("RESPONSE_NOT_EXTENDED",510),("RESPONSE_MOVED_PERMANENTLY",301),("RESPONSE_NOT_ACCEPTABLE",406),("RESPONSE_SERVICE_UNAVAILABLE",503),("RESPONSE_BAD_GATEWAY",502),("RESPONSE_RESET_CONTENT",205),("RESPONSE_VARIANT_ALSO_NEGOTIATES",506),("RESPONSE_PROCESSING",102),("RESPONSE_UPGRADE_REQUIRED",426),("RESPONSE_EXPECTATION_FAILED",417),("RESPONSE_UNPROCESSABLE_ENTITY",422),("RESPONSE_REQUEST_HEADER_FIELDS_TOO_LARGE",431),("RESPONSE_IM_A_TEAPOT",418),("RESPONSE_FOUND",302),("RESPONSE_HTTP_VERSION_NOT_SUPPORTED",505),("RESPONSE_CONTINUE",100),("RESPONSE_ACCEPTED",202),("RESPONSE_IM_USED",226),("RESPONSE_REQUESTED_RANGE_NOT_SATISFIABLE",416),("RESPONSE_UNAUTHORIZED",401),("RESPONSE_NOT_FOUND",404),("RESPONSE_PAYMENT_REQUIRED",402),("RESPONSE_GATEWAY_TIMEOUT",504),("RESPONSE_MULTIPLE_CHOICES",300),("RESPONSE_METHOD_NOT_ALLOWED",405),("RESPONSE_MULTI_STATUS",207),("RESPONSE_LOCKED",423),("RESPONSE_PROXY_AUTHENTICATION_REQUIRED",407),("RESPONSE_PARTIAL_CONTENT",206)]}]},GodotClass {_gcName = "TriangleMesh", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ResourceInteractiveLoader", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_resource", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "poll", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "wait", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_stage", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_stage_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "_File", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("COMPRESSION_DEFLATE",1),("READ",1),("WRITE",2),("WRITE_READ",7),("READ_WRITE",3),("COMPRESSION_FASTLZ",0),("COMPRESSION_GZIP",3),("COMPRESSION_ZSTD",2)], _gcProperties = [GodotProperty {_gpName = "endian_swap", _gcType = PrimitiveType BoolType, _gcGetter = "get_endian_swap", _gcSetter = "set_endian_swap", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "open_encrypted", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "open_encrypted_with_pass", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "pass", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "open_compressed", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "compression_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "open", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "close", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_open", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "seek_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "get_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_len", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "eof_reached", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_8", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_16", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_32", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_64", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_float", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_double", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_real", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_buffer", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "len", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_line", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_as_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_md5", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sha256", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_endian_swap", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_endian_swap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_error", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_var", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_csv_line", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delim", _gaType = CoreType "String", _gaDefaultValue = Just ","}]},GodotMethod {_gmName = "store_8", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_16", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_32", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_64", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_float", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_double", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_real", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_buffer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "buffer", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_string", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "string", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_var", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "store_pascal_string", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "string", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pascal_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "file_exists", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_modified_time", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "CompressionMode", _geValues = fromList [("COMPRESSION_DEFLATE",1),("COMPRESSION_FASTLZ",0),("COMPRESSION_GZIP",3),("COMPRESSION_ZSTD",2)]},GodotEnum {_geName = CustomType "ModeFlags", _geValues = fromList [("READ",1),("WRITE",2),("WRITE_READ",7),("READ_WRITE",3)]}]},GodotClass {_gcName = "_Directory", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "open", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "list_dir_begin", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skip_navigational", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "skip_hidden", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_next", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "current_is_dir", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "list_dir_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_drive_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_drive", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_drive", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "change_dir", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "todir", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_dir", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "make_dir_recursive", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "file_exists", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "dir_exists", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_space_left", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "copy", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "_Thread", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("PRIORITY_NORMAL",1),("PRIORITY_LOW",0),("PRIORITY_HIGH",2)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "start", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "priority", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "get_id", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "wait_to_finish", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Priority", _geValues = fromList [("PRIORITY_NORMAL",1),("PRIORITY_LOW",0),("PRIORITY_HIGH",2)]}]},GodotClass {_gcName = "_Mutex", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "try_lock", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unlock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "_Semaphore", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "wait", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "post", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "XMLParser", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("NODE_UNKNOWN",6),("NODE_ELEMENT",1),("NODE_CDATA",5),("NODE_COMMENT",4),("NODE_TEXT",3),("NODE_NONE",0),("NODE_ELEMENT_END",2)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "read", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_type", _gmReturnType = EnumType "enum.XMLParser::NodeType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_data", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_offset", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_attribute_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_attribute_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attribute_value", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_attribute", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_named_attribute_value", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_named_attribute_value_safe", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_empty", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_line", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "skip_section", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "seek", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "open", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "open_buffer", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "buffer", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "NodeType", _geValues = fromList [("NODE_UNKNOWN",6),("NODE_ELEMENT",1),("NODE_CDATA",5),("NODE_COMMENT",4),("NODE_TEXT",3),("NODE_NONE",0),("NODE_ELEMENT_END",2)]}]},GodotClass {_gcName = "ConfigFile", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "default", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "has_section", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_section_key", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sections", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_section_keys", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase_section", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "section", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "load", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "save", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "PCKPacker", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "pck_start", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pck_name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "alignment", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_file", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pck_path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "source_path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "flush", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "verbose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "PackedDataContainer", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "__data__", _gcType = CoreType "PoolByteArray", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_iter_init", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_iter_get", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_iter_next", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pack", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PackedDataContainerRef", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_iter_init", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_iter_get", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_iter_next", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_dictionary", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AStar", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_estimate_cost", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_compute_cost", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_available_point_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "weight_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "get_point_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_weight_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_weight_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "weight_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_point", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_points", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_point_connections", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "connect_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bidirectional", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "disconnect_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "are_points_connected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_closest_point", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_position_in_segment", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_path", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_id_path", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EncodedObjectAsID", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_object_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_object_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "JSONParseResult", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "error", _gcType = CoreType "Object", _gcGetter = "get_error", _gcSetter = "set_error", _gcIndex = -1},GodotProperty {_gpName = "error_string", _gcType = CoreType "String", _gcGetter = "get_error_string", _gcSetter = "set_error_string", _gcIndex = -1},GodotProperty {_gpName = "error_line", _gcType = PrimitiveType IntType, _gcGetter = "get_error_line", _gcSetter = "set_error_line", _gcIndex = -1},GodotProperty {_gpName = "result", _gcType = CoreType "Variant", _gcGetter = "get_result", _gcSetter = "set_result", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_error", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_error_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_error_line", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_result", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_error", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "error", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_error_string", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "error_string", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_error_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "error_line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_result", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "result", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "IP_Unix", _gcBaseClass = "IP", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "_Geometry", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "build_box_planes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "build_cylinder_planes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "sides", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2"}]},GodotMethod {_gmName = "build_capsule_planes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "sides", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lats", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2"}]},GodotMethod {_gmName = "segment_intersects_circle", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segment_from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "segment_to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "circle_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "circle_radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "segment_intersects_segment_2d", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_points_between_segments_2d", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "q1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "p2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "q2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_points_between_segments", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p1", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "p2", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "q1", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "q2", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_to_segment_2d", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_to_segment", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s1", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s2", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_to_segment_uncapped_2d", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_to_segment_uncapped", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s1", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "s2", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv84_normal_bit", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "ray_intersects_triangle", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dir", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "a", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "b", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "c", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "segment_intersects_triangle", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "a", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "b", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "c", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "segment_intersects_sphere", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sphere_position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sphere_radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "segment_intersects_cylinder", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "segment_intersects_convex", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "planes", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "point_is_inside_triangle", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "c", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "triangulate_polygon", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "convex_hull_2d", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clip_polygon", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "plane", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "make_atlas", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sizes", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "_ResourceLoader", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "load_interactive", _gmReturnType = CustomType "ResourceInteractiveLoader", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type_hint", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "load", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type_hint", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "p_no_cache", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_recognized_extensions_for_type", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_abort_on_missing_resources", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "abort", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dependencies", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "_ResourceSaver", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("FLAG_RELATIVE_PATHS",1),("FLAG_OMIT_EDITOR_PROPERTIES",8),("FLAG_SAVE_BIG_ENDIAN",16),("FLAG_CHANGE_PATH",4),("FLAG_COMPRESS",32),("FLAG_BUNDLE_RESOURCES",2)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "save", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "get_recognized_extensions", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "SaverFlags", _geValues = fromList [("FLAG_RELATIVE_PATHS",1),("FLAG_OMIT_EDITOR_PROPERTIES",8),("FLAG_SAVE_BIG_ENDIAN",16),("FLAG_CHANGE_PATH",4),("FLAG_COMPRESS",32),("FLAG_BUNDLE_RESOURCES",2)]}]},GodotClass {_gcName = "_OS", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("POWERSTATE_NO_BATTERY",2),("SCREEN_ORIENTATION_SENSOR_PORTRAIT",5),("SCREEN_ORIENTATION_SENSOR",6),("DAY_THURSDAY",4),("POWERSTATE_UNKNOWN",0),("MONTH_MARCH",3),("DAY_FRIDAY",5),("SYSTEM_DIR_DOWNLOADS",3),("MONTH_NOVEMBER",11),("MONTH_JULY",7),("SYSTEM_DIR_PICTURES",6),("MONTH_DECEMBER",12),("DAY_TUESDAY",2),("SYSTEM_DIR_DESKTOP",0),("DAY_MONDAY",1),("SYSTEM_DIR_MUSIC",5),("SYSTEM_DIR_RINGTONES",7),("MONTH_AUGUST",8),("SYSTEM_DIR_DOCUMENTS",2),("SYSTEM_DIR_MOVIES",4),("SYSTEM_DIR_DCIM",1),("POWERSTATE_CHARGED",4),("MONTH_APRIL",4),("POWERSTATE_ON_BATTERY",1),("DAY_SUNDAY",0),("MONTH_MAY",5),("SCREEN_ORIENTATION_REVERSE_PORTRAIT",3),("MONTH_JANUARY",1),("MONTH_OCTOBER",10),("SCREEN_ORIENTATION_PORTRAIT",1),("SCREEN_ORIENTATION_SENSOR_LANDSCAPE",4),("MONTH_SEPTEMBER",9),("POWERSTATE_CHARGING",3),("MONTH_FEBRUARY",2),("MONTH_JUNE",6),("SCREEN_ORIENTATION_REVERSE_LANDSCAPE",2),("DAY_SATURDAY",6),("SCREEN_ORIENTATION_LANDSCAPE",0),("DAY_WEDNESDAY",3)], _gcProperties = [GodotProperty {_gpName = "clipboard", _gcType = CoreType "String", _gcGetter = "get_clipboard", _gcSetter = "set_clipboard", _gcIndex = -1},GodotProperty {_gpName = "current_screen", _gcType = PrimitiveType IntType, _gcGetter = "get_current_screen", _gcSetter = "set_current_screen", _gcIndex = -1},GodotProperty {_gpName = "exit_code", _gcType = PrimitiveType IntType, _gcGetter = "get_exit_code", _gcSetter = "set_exit_code", _gcIndex = -1},GodotProperty {_gpName = "vsync_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_vsync_enabled", _gcSetter = "set_use_vsync", _gcIndex = -1},GodotProperty {_gpName = "low_processor_usage_mode", _gcType = PrimitiveType BoolType, _gcGetter = "is_in_low_processor_usage_mode", _gcSetter = "set_low_processor_usage_mode", _gcIndex = -1},GodotProperty {_gpName = "keep_screen_on", _gcType = PrimitiveType BoolType, _gcGetter = "is_keep_screen_on", _gcSetter = "set_keep_screen_on", _gcIndex = -1},GodotProperty {_gpName = "screen_orientation", _gcType = PrimitiveType IntType, _gcGetter = "get_screen_orientation", _gcSetter = "set_screen_orientation", _gcIndex = -1},GodotProperty {_gpName = "window_borderless", _gcType = PrimitiveType BoolType, _gcGetter = "get_borderless_window", _gcSetter = "set_borderless_window", _gcIndex = -1},GodotProperty {_gpName = "window_fullscreen", _gcType = PrimitiveType BoolType, _gcGetter = "is_window_fullscreen", _gcSetter = "set_window_fullscreen", _gcIndex = -1},GodotProperty {_gpName = "window_maximized", _gcType = PrimitiveType BoolType, _gcGetter = "is_window_maximized", _gcSetter = "set_window_maximized", _gcIndex = -1},GodotProperty {_gpName = "window_minimized", _gcType = PrimitiveType BoolType, _gcGetter = "is_window_minimized", _gcSetter = "set_window_minimized", _gcIndex = -1},GodotProperty {_gpName = "window_resizable", _gcType = PrimitiveType BoolType, _gcGetter = "is_window_resizable", _gcSetter = "set_window_resizable", _gcIndex = -1},GodotProperty {_gpName = "window_position", _gcType = CoreType "Vector2", _gcGetter = "get_window_position", _gcSetter = "set_window_position", _gcIndex = -1},GodotProperty {_gpName = "window_size", _gcType = CoreType "Vector2", _gcGetter = "get_window_size", _gcSetter = "set_window_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_clipboard", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "clipboard", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clipboard", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_screen_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_screen", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_screen", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_screen_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_screen_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_screen_dpi", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_window_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_window_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_window_fullscreen", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_window_fullscreen", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_resizable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_window_resizable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_minimized", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_window_minimized", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_maximized", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_window_maximized", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "request_attention", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_real_window_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "center_window", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_borderless_window", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "borderless", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_borderless_window", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ime_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_screen_orientation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "orientation", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_screen_orientation", _gmReturnType = EnumType "enum._OS::ScreenOrientation", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_keep_screen_on", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_keep_screen_on", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_touchscreen_ui_hint", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_low_processor_usage_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_in_low_processor_usage_mode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_processor_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_executable_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "execute", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arguments", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blocking", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "output", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"}]},GodotMethod {_gmName = "kill", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pid", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shell_open", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uri", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_process_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_environment", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "environment", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_environment", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "environment", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_cmdline_args", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_datetime", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "utc", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_date", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "utc", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_time", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "utc", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_time_zone_info", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_unix_time", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_datetime_from_unix_time", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unix_time_val", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unix_time_from_datetime", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "datetime", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_system_time_secs", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "icon", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exit_code", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exit_code", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "delay_usec", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "usec", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "delay_msec", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "msec", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ticks_msec", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_splash_tick_msec", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_locale", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_latin_keyboard_variant", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_model_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "can_draw", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_userfs_persistent", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_stdout_verbose", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "can_use_threads", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_debug_build", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "dump_memory_to_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "dump_resources_to_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_virtual_keyboard", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "show_virtual_keyboard", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "existing_text", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "hide_virtual_keyboard", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_virtual_keyboard_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "print_resources_in_use", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "short", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "print_all_resources", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tofile", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_static_memory_usage", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_static_memory_peak_usage", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_dynamic_memory_usage", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_user_data_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_system_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dir", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unique_id", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_ok_left_and_cancel_right", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "print_all_textures_by_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "print_resources_by_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "types", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "native_video_play", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "volume", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "audio_track", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "subtitle_track", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "native_video_is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "native_video_stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "native_video_pause", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "native_video_unpause", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scancode_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_scancode_unicode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_scancode_from_string", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "string", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_use_file_access_save_and_swap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "alert", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Just "Alert!"}]},GodotMethod {_gmName = "set_thread_name", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_use_vsync", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_vsync_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_feature", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tag_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_power_state", _gmReturnType = EnumType "enum._OS::PowerState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_power_seconds_left", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_power_percent_left", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SystemDir", _geValues = fromList [("SYSTEM_DIR_DOWNLOADS",3),("SYSTEM_DIR_PICTURES",6),("SYSTEM_DIR_DESKTOP",0),("SYSTEM_DIR_MUSIC",5),("SYSTEM_DIR_RINGTONES",7),("SYSTEM_DIR_DOCUMENTS",2),("SYSTEM_DIR_MOVIES",4),("SYSTEM_DIR_DCIM",1)]},GodotEnum {_geName = CustomType "ScreenOrientation", _geValues = fromList [("SCREEN_ORIENTATION_SENSOR_PORTRAIT",5),("SCREEN_ORIENTATION_SENSOR",6),("SCREEN_ORIENTATION_REVERSE_PORTRAIT",3),("SCREEN_ORIENTATION_PORTRAIT",1),("SCREEN_ORIENTATION_SENSOR_LANDSCAPE",4),("SCREEN_ORIENTATION_REVERSE_LANDSCAPE",2),("SCREEN_ORIENTATION_LANDSCAPE",0)]},GodotEnum {_geName = CustomType "PowerState", _geValues = fromList [("POWERSTATE_NO_BATTERY",2),("POWERSTATE_UNKNOWN",0),("POWERSTATE_CHARGED",4),("POWERSTATE_ON_BATTERY",1),("POWERSTATE_CHARGING",3)]},GodotEnum {_geName = CustomType "Month", _geValues = fromList [("MONTH_MARCH",3),("MONTH_NOVEMBER",11),("MONTH_JULY",7),("MONTH_DECEMBER",12),("MONTH_AUGUST",8),("MONTH_APRIL",4),("MONTH_MAY",5),("MONTH_JANUARY",1),("MONTH_OCTOBER",10),("MONTH_SEPTEMBER",9),("MONTH_FEBRUARY",2),("MONTH_JUNE",6)]},GodotEnum {_geName = CustomType "Weekday", _geValues = fromList [("DAY_THURSDAY",4),("DAY_FRIDAY",5),("DAY_TUESDAY",2),("DAY_MONDAY",1),("DAY_SUNDAY",0),("DAY_SATURDAY",6),("DAY_WEDNESDAY",3)]}]},GodotClass {_gcName = "_Engine", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "editor_hint", _gcType = PrimitiveType BoolType, _gcGetter = "is_editor_hint", _gcSetter = "set_editor_hint", _gcIndex = -1},GodotProperty {_gpName = "iterations_per_second", _gcType = PrimitiveType IntType, _gcGetter = "get_iterations_per_second", _gcSetter = "set_iterations_per_second", _gcIndex = -1},GodotProperty {_gpName = "target_fps", _gcType = PrimitiveType IntType, _gcGetter = "get_target_fps", _gcSetter = "set_target_fps", _gcIndex = -1},GodotProperty {_gpName = "time_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_time_scale", _gcSetter = "set_time_scale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_iterations_per_second", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "iterations_per_second", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_iterations_per_second", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_target_fps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target_fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_target_fps", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_time_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_time_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_frames_drawn", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_frames_per_second", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_main_loop", _gmReturnType = CustomType "MainLoop", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_version_info", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_in_physics_frame", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_singleton", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_singleton", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_editor_hint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editor_hint", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "_ClassDB", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_class_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inheriters_from_class", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_parent_class", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_exists", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_parent_class", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "inherits", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "can_instance", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_has_signal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_get_signal", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_get_signal_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "no_inheritance", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "class_get_property_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "no_inheritance", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "class_get_property", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_set_property", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_has_method", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "no_inheritance", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "class_get_method_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "no_inheritance", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "class_get_integer_constant_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "no_inheritance", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "class_has_integer_constant", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_get_integer_constant", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "class_get_category", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_class_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "_Marshalls", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "variant_to_base64", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "variant", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "base64_to_variant", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base64_str", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "raw_to_base64", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "array", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "base64_to_raw", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base64_str", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "utf8_to_base64", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "utf8_str", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "base64_to_utf8", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base64_str", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "_JSON", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "print", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "indent", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "sort_keys", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "parse", _gmReturnType = CustomType "JSONParseResult", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "json", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ProjectSettings", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "has_setting", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_setting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_setting", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_order", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_order", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_initial_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_property_info", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hint", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "localize_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "globalize_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "save", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "load_resource_pack", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pack", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "property_can_revert", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "property_get_revert", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "save_custom", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "InputMap", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "has_action", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_actions", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "action_add_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "action_has_event", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "action_erase_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "event_is_action", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing},GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "load_from_globals", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "TranslationServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_locale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "locale", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_locale", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_locale_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "locale", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "translate", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "message", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_translation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "translation", _gaType = CustomType "Translation", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_translation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "translation", _gaType = CustomType "Translation", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Performance", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("PHYSICS_2D_ISLAND_COUNT",23),("OBJECT_RESOURCE_COUNT",9),("RENDER_VERTEX_MEM_USED",19),("PHYSICS_3D_ISLAND_COUNT",26),("PHYSICS_2D_COLLISION_PAIRS",22),("MEMORY_STATIC_MAX",5),("TIME_PHYSICS_PROCESS",2),("RENDER_TEXTURE_MEM_USED",18),("MEMORY_DYNAMIC_MAX",6),("MEMORY_DYNAMIC",4),("RENDER_MATERIAL_CHANGES_IN_FRAME",13),("OBJECT_NODE_COUNT",10),("RENDER_OBJECTS_IN_FRAME",11),("RENDER_DRAW_CALLS_IN_FRAME",16),("TIME_PROCESS",1),("MEMORY_MESSAGE_BUFFER_MAX",7),("PHYSICS_3D_COLLISION_PAIRS",25),("RENDER_SHADER_CHANGES_IN_FRAME",14),("MONITOR_MAX",27),("TIME_FPS",0),("PHYSICS_2D_ACTIVE_OBJECTS",21),("RENDER_SURFACE_CHANGES_IN_FRAME",15),("RENDER_VIDEO_MEM_USED",17),("MEMORY_STATIC",3),("RENDER_VERTICES_IN_FRAME",12),("OBJECT_COUNT",8),("PHYSICS_3D_ACTIVE_OBJECTS",24),("RENDER_USAGE_VIDEO_MEM_TOTAL",20)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_monitor", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "monitor", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Monitor", _geValues = fromList [("PHYSICS_2D_ISLAND_COUNT",23),("OBJECT_RESOURCE_COUNT",9),("RENDER_VERTEX_MEM_USED",19),("PHYSICS_3D_ISLAND_COUNT",26),("PHYSICS_2D_COLLISION_PAIRS",22),("MEMORY_STATIC_MAX",5),("TIME_PHYSICS_PROCESS",2),("RENDER_TEXTURE_MEM_USED",18),("MEMORY_DYNAMIC_MAX",6),("MEMORY_DYNAMIC",4),("RENDER_MATERIAL_CHANGES_IN_FRAME",13),("OBJECT_NODE_COUNT",10),("RENDER_OBJECTS_IN_FRAME",11),("RENDER_DRAW_CALLS_IN_FRAME",16),("TIME_PROCESS",1),("MEMORY_MESSAGE_BUFFER_MAX",7),("PHYSICS_3D_COLLISION_PAIRS",25),("RENDER_SHADER_CHANGES_IN_FRAME",14),("MONITOR_MAX",27),("TIME_FPS",0),("PHYSICS_2D_ACTIVE_OBJECTS",21),("RENDER_SURFACE_CHANGES_IN_FRAME",15),("RENDER_VIDEO_MEM_USED",17),("MEMORY_STATIC",3),("RENDER_VERTICES_IN_FRAME",12),("OBJECT_COUNT",8),("PHYSICS_3D_ACTIVE_OBJECTS",24),("RENDER_USAGE_VIDEO_MEM_TOTAL",20)]}]},GodotClass {_gcName = "VisualServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("ARRAY_COMPRESS_WEIGHTS",65536),("ARRAY_FLAG_USE_16_BIT_BONES",524288),("VIEWPORT_UPDATE_ALWAYS",3),("ARRAY_FORMAT_INDEX",256),("INFO_SURFACE_CHANGES_IN_FRAME",4),("VIEWPORT_DEBUG_DRAW_OVERDRAW",2),("VIEWPORT_RENDER_INFO_MATERIAL_CHANGES_IN_FRAME",2),("ARRAY_COMPRESS_TANGENT",2048),("INSTANCE_MULTIMESH",2),("VIEWPORT_CLEAR_ALWAYS",0),("SHADER_SPATIAL",0),("SHADOW_CASTING_SETTING_SHADOWS_ONLY",3),("ARRAY_COMPRESS_NORMAL",1024),("ARRAY_FORMAT_COLOR",8),("VIEWPORT_CLEAR_NEVER",1),("INSTANCE_GEOMETRY_MASK",30),("VIEWPORT_USAGE_2D",0),("INSTANCE_LIGHTMAP_CAPTURE",8),("MULTIMESH_COLOR_FLOAT",2),("LIGHT_DIRECTIONAL_SHADOW_PARALLEL_2_SPLITS",1),("INSTANCE_IMMEDIATE",3),("CANVAS_OCCLUDER_POLYGON_CULL_CLOCKWISE",1),("ARRAY_FORMAT_TEX_UV",16),("CANVAS_OCCLUDER_POLYGON_CULL_DISABLED",0),("ARRAY_COMPRESS_VERTEX",512),("SCENARIO_DEBUG_DISABLED",0),("ENV_DOF_BLUR_QUALITY_HIGH",2),("LIGHT_DIRECTIONAL_SHADOW_ORTHOGONAL",0),("ARRAY_FORMAT_VERTEX",1),("SHADER_MAX",3),("VIEWPORT_DEBUG_DRAW_DISABLED",0),("CANVAS_ITEM_Z_MIN",-4096),("VIEWPORT_MSAA_8X",3),("INFO_MATERIAL_CHANGES_IN_FRAME",2),("MAX_GLOW_LEVELS",7),("LIGHT_OMNI_SHADOW_DETAIL_HORIZONTAL",1),("VIEWPORT_RENDER_INFO_SURFACE_CHANGES_IN_FRAME",4),("ARRAY_COMPRESS_TEX_UV",8192),("ARRAY_COMPRESS_BONES",32768),("REFLECTION_PROBE_UPDATE_ALWAYS",1),("VIEWPORT_MSAA_DISABLED",0),("CUBEMAP_RIGHT",1),("ARRAY_MAX",9),("LIGHT_PARAM_SHADOW_SPLIT_2_OFFSET",10),("ENV_TONE_MAPPER_FILMIC",2),("PARTICLES_DRAW_ORDER_LIFETIME",1),("NINE_PATCH_STRETCH",0),("INFO_USAGE_VIDEO_MEM_TOTAL",6),("ARRAY_NORMAL",1),("MULTIMESH_COLOR_NONE",0),("ARRAY_FORMAT_TEX_UV2",32),("ENV_SSAO_QUALITY_LOW",0),("INSTANCE_MESH",1),("MATERIAL_RENDER_PRIORITY_MAX",127),("LIGHT_PARAM_SHADOW_MAX_DISTANCE",8),("VIEWPORT_MSAA_2X",1),("PARTICLES_DRAW_ORDER_INDEX",0),("ENV_DOF_BLUR_QUALITY_LOW",0),("INFO_SHADER_CHANGES_IN_FRAME",3),("GLOW_BLEND_MODE_ADDITIVE",0),("ENV_BG_CANVAS",4),("LIGHT_OMNI_SHADOW_DUAL_PARABOLOID",0),("ARRAY_INDEX",8),("LIGHT_PARAM_ENERGY",0),("ARRAY_COLOR",3),("LIGHT_OMNI_SHADOW_CUBE",1),("PRIMITIVE_TRIANGLE_STRIP",5),("VIEWPORT_RENDER_INFO_MAX",6),("PRIMITIVE_TRIANGLES",4),("TEXTURE_FLAGS_DEFAULT",7),("VIEWPORT_USAGE_3D_NO_EFFECTS",3),("ARRAY_TEX_UV",4),("VIEWPORT_CLEAR_ONLY_NEXT_FRAME",2),("CANVAS_LIGHT_FILTER_PCF7",3),("BLEND_SHAPE_MODE_NORMALIZED",0),("ENV_BG_COLOR_SKY",3),("PRIMITIVE_LINE_LOOP",3),("LIGHT_PARAM_SPECULAR",2),("CANVAS_LIGHT_MODE_SUB",1),("VIEWPORT_USAGE_3D",2),("GLOW_BLEND_MODE_SOFTLIGHT",2),("PRIMITIVE_TRIANGLE_FAN",6),("VIEWPORT_DEBUG_DRAW_UNSHADED",1),("MATERIAL_RENDER_PRIORITY_MIN",-128),("LIGHT_OMNI_SHADOW_DETAIL_VERTICAL",0),("INSTANCE_FLAG_MAX",1),("MULTIMESH_TRANSFORM_3D",1),("SCENARIO_DEBUG_OVERDRAW",2),("ARRAY_FORMAT_NORMAL",2),("ARRAY_TEX_UV2",5),("ENV_DOF_BLUR_QUALITY_MEDIUM",1),("ENV_BG_SKY",2),("FEATURE_SHADERS",0),("CUBEMAP_TOP",3),("PARTICLES_DRAW_ORDER_VIEW_DEPTH",2),("CUBEMAP_BACK",5),("LIGHT_SPOT",2),("LIGHT_DIRECTIONAL_SHADOW_PARALLEL_4_SPLITS",2),("INSTANCE_PARTICLES",4),("TEXTURE_FLAG_REPEAT",2),("LIGHT_PARAM_SPOT_ATTENUATION",6),("REFLECTION_PROBE_UPDATE_ONCE",0),("ARRAY_COMPRESS_DEFAULT",97792),("CANVAS_OCCLUDER_POLYGON_CULL_COUNTER_CLOCKWISE",2),("CANVAS_ITEM_Z_MAX",4096),("ENV_TONE_MAPPER_LINEAR",0),("LIGHT_PARAM_SHADOW_SPLIT_3_OFFSET",11),("VIEWPORT_RENDER_INFO_VERTICES_IN_FRAME",1),("LIGHT_OMNI",1),("ENV_BG_MAX",6),("INSTANCE_REFLECTION_PROBE",6),("INFO_TEXTURE_MEM_USED",8),("INSTANCE_NONE",0),("SHADER_CANVAS_ITEM",1),("ENV_SSAO_QUALITY_MEDIUM",1),("CANVAS_LIGHT_FILTER_PCF3",1),("ARRAY_FORMAT_BONES",64),("LIGHT_PARAM_SPOT_ANGLE",5),("ARRAY_WEIGHTS_SIZE",4),("SHADOW_CASTING_SETTING_DOUBLE_SIDED",2),("ENV_SSAO_QUALITY_HIGH",2),("INFO_VERTICES_IN_FRAME",1),("INFO_VIDEO_MEM_USED",7),("GLOW_BLEND_MODE_REPLACE",3),("NINE_PATCH_TILE_FIT",2),("VIEWPORT_UPDATE_ONCE",1),("ARRAY_COMPRESS_COLOR",4096),("GLOW_BLEND_MODE_SCREEN",1),("MAX_CURSORS",8),("TEXTURE_FLAG_CONVERT_TO_LINEAR",16),("PRIMITIVE_MAX",7),("ENV_TONE_MAPPER_REINHARDT",1),("LIGHT_PARAM_CONTACT_SHADOW_SIZE",7),("INSTANCE_MAX",9),("ENV_SSAO_BLUR_3x3",3),("ARRAY_WEIGHTS",7),("LIGHT_PARAM_MAX",15),("CUBEMAP_BOTTOM",2),("ARRAY_TANGENT",2),("SCENARIO_DEBUG_SHADELESS",3),("INFO_OBJECTS_IN_FRAME",0),("INSTANCE_GI_PROBE",7),("LIGHT_PARAM_SHADOW_NORMAL_BIAS",12),("VIEWPORT_USAGE_2D_NO_SAMPLING",1),("ENV_SSAO_BLUR_2x2",2),("VIEWPORT_UPDATE_DISABLED",0),("SHADOW_CASTING_SETTING_OFF",0),("VIEWPORT_MSAA_16X",4),("CANVAS_LIGHT_FILTER_PCF9",4),("ENV_SSAO_BLUR_DISABLED",0),("TEXTURE_FLAG_ANISOTROPIC_FILTER",8),("FEATURE_MULTITHREADED",1),("ENV_SSAO_BLUR_1x1",1),("INFO_DRAW_CALLS_IN_FRAME",5),("ENV_BG_COLOR",1),("ENV_TONE_MAPPER_ACES",3),("LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_STABLE",0),("LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_OPTIMIZED",1),("ARRAY_COMPRESS_TEX_UV2",16384),("MULTIMESH_COLOR_8BIT",1),("MULTIMESH_TRANSFORM_2D",0),("VIEWPORT_UPDATE_WHEN_VISIBLE",2),("INSTANCE_LIGHT",5),("TEXTURE_FLAG_MIPMAPS",1),("PRIMITIVE_LINE_STRIP",2),("TEXTURE_FLAG_FILTER",4),("ENV_BG_KEEP",5),("CANVAS_LIGHT_FILTER_NONE",0),("CUBEMAP_FRONT",4),("TEXTURE_FLAG_USED_FOR_STREAMING",4096),("INFO_VERTEX_MEM_USED",9),("TEXTURE_FLAG_MIRRORED_REPEAT",32),("PRIMITIVE_LINES",1),("VIEWPORT_RENDER_INFO_OBJECTS_IN_FRAME",0),("ENV_BG_CLEAR_COLOR",0),("SHADOW_CASTING_SETTING_ON",1),("SCENARIO_DEBUG_WIREFRAME",1),("CANVAS_LIGHT_MODE_ADD",0),("LIGHT_PARAM_SHADOW_BIAS_SPLIT_SCALE",14),("VIEWPORT_RENDER_INFO_DRAW_CALLS_IN_FRAME",5),("ARRAY_BONES",6),("LIGHT_PARAM_ATTENUATION",4),("VIEWPORT_DEBUG_DRAW_WIREFRAME",3),("CANVAS_LIGHT_MODE_MIX",2),("NINE_PATCH_TILE",1),("VIEWPORT_RENDER_INFO_SHADER_CHANGES_IN_FRAME",3),("CANVAS_LIGHT_MODE_MASK",3),("LIGHT_PARAM_RANGE",3),("BLEND_SHAPE_MODE_RELATIVE",1),("VIEWPORT_MSAA_4X",2),("LIGHT_PARAM_SHADOW_SPLIT_1_OFFSET",9),("TEXTURE_FLAG_CUBEMAP",2048),("CANVAS_LIGHT_FILTER_PCF13",5),("NO_INDEX_ARRAY",-1),("ARRAY_VERTEX",0),("ARRAY_FLAG_USE_2D_VERTICES",262144),("CANVAS_LIGHT_FILTER_PCF5",2),("LIGHT_DIRECTIONAL",0),("ARRAY_COMPRESS_INDEX",131072),("INSTANCE_FLAG_USE_BAKED_LIGHT",0),("CUBEMAP_LEFT",0),("LIGHT_PARAM_SHADOW_BIAS",13),("ARRAY_FORMAT_WEIGHTS",128),("SHADER_PARTICLES",2),("ARRAY_FORMAT_TANGENT",4),("PRIMITIVE_POINTS",0)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "frame_drawn_in_thread", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "force_sync", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "force_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "swap_buffers", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "sync", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "swap_buffers", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "texture_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "texture_create_from_image", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "7"}]},GodotMethod {_gmName = "texture_allocate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "7"}]},GodotMethod {_gmName = "texture_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "cube_side", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "texture_get_data", _gmReturnType = CustomType "Image", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "cube_side", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "texture_set_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_format", _gmReturnType = EnumType "enum.Image::Format", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_texid", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_set_size_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_set_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_get_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_set_shrink_all_x2_on_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shrink", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "texture_debug_usage", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "textures_keep_original", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "sky_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "sky_set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sky", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "cube_map", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "radiance_size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shader_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "shader_set_code", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "code", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shader_get_code", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shader_get_param_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shader_set_default_texture_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shader_get_default_texture_param", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "material_set_shader", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader_material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shader", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_get_shader", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader_material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "parameter", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_get_param", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "parameter", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_set_render_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "priority", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_set_line_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "material_set_next_pass", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "next_material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "mesh_add_surface_from_arrays", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "primtive", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arrays", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend_shapes", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "compress_format", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "97792"}]},GodotMethod {_gmName = "mesh_set_blend_shape_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_get_blend_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_set_blend_shape_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_get_blend_shape_mode", _gmReturnType = EnumType "enum.VisualServer::BlendShapeMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_material", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_array_len", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_array_index_len", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_array", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_index_array", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_arrays", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_blend_shape_arrays", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_format", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_primitive_type", _gmReturnType = EnumType "enum.VisualServer::PrimitiveType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_surface_get_skeleton_aabb", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_remove_surface", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_get_surface_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_set_custom_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_get_custom_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mesh_clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_allocate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "instances", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform_format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color_format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_get_instance_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_set_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_set_transform_2d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_get_mesh", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_get_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_get_transform_2d", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_instance_get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_set_visible_instances", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "visible", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "multimesh_get_visible_instances", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "immediate_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "primitive", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "immediate_vertex", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "vertex", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_vertex_2d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "vertex", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_normal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tangent", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tex_uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_uv2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tex_uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "immediate_get_material", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "immediate", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skeleton_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "skeleton_allocate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bones", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "is_2d_skeleton", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "skeleton_get_bone_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skeleton_bone_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bone", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skeleton_bone_get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bone", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skeleton_bone_set_transform_2d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bone", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skeleton_bone_get_transform_2d", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bone", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "directional_light_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "omni_light_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "spot_light_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "light_set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_shadow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_shadow_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_projector", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_negative", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_set_reverse_cull_face_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_omni_set_shadow_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_omni_set_shadow_detail", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "detail", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_directional_set_shadow_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_directional_set_blend_splits", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "light_directional_set_shadow_depth_range_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "range_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "reflection_probe_set_update_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_intensity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_interior_ambient", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_interior_ambient_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_interior_ambient_probe_contribution", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "contrib", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_origin_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_as_interior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_enable_box_projection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_enable_shadows", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reflection_probe_set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layers", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "gi_probe_set_bounds", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bounds", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_bounds", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "range", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_cell_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "probe", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_to_cell_xform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_to_cell_xform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_dynamic_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_dynamic_data", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_dynamic_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "range", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_dynamic_range", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_normal_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_normal_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_propagation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "propagation", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_get_propagation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_interior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_is_interior", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_set_compress", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gi_probe_is_compressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "lightmap_capture_set_bounds", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bounds", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_get_bounds", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_set_octree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "octree", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_set_octree_cell_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "xform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_get_octree_cell_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_set_octree_cell_subdiv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "subdiv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_get_octree_cell_subdiv", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_get_octree", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lightmap_capture_get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "particles_set_emitting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "emitting", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_get_emitting", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_lifetime", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "lifetime", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_one_shot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "one_shot", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_pre_process_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_explosiveness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_randomness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_custom_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_speed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_use_local_coordinates", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_process_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_fixed_fps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_fractional_delta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_restart", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_draw_order", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "order", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_draw_passes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "count", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_draw_pass_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "pass", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_get_current_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "particles_set_emission_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "camera_set_perspective", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "fovy_degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_near", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_far", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_set_orthogonal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_near", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_far", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layers", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_set_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "camera_set_use_vertical_aspect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "viewport_set_use_arvr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_arvr", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_parent_viewport", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "parent_viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_attach_to_screen", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Just "(0, 0, 0, 0)"},GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "viewport_detach", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_update_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "update_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_vflip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_clear_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "clear_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_get_texture", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_hide_scenario", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "hidden", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_hide_canvas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "hidden", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_disable_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_disable_3d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_attach_camera", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "camera", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_scenario", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_attach_canvas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_remove_canvas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_canvas_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_transparent_background", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_global_canvas_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_canvas_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_shadow_atlas_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_shadow_atlas_quadrant_subdivision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "quadrant", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "subdivision", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_msaa", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "msaa", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_hdr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_usage", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "usage", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_get_render_info", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "info", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "viewport_set_debug_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "draw", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "environment_set_background", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bg", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_sky", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sky", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_sky_custom_fov", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_bg_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_canvas_max_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_ambient_light", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "sky_contibution", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "environment_set_dof_blur_near", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transition", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "far_amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "quality", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_dof_blur_far", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transition", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "far_amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "quality", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_glow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "level_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "strength", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bloom_threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "hdr_bleed_threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "hdr_bleed_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bicubic_upscale", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_tonemap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tone_mapper", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "exposure", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "white", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "auto_exposure", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_luminance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_luminance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "auto_exp_speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "auto_exp_grey", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_adjustment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "brightness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "contrast", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "saturation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ramp", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_ssr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_steps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "fade_in", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "fade_out", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "depth_tolerance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "roughness", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_ssao", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius2", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "intensity2", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "light_affect", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "quality", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "blur", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bilateral_sharpness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_fog", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sun_color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sun_amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_fog_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "depth_begin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "depth_curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transmit", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transmit_curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "environment_set_fog_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height_curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "scenario_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "scenario_set_debug", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "debug_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "scenario_set_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "environment", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "scenario_set_reflection_atlas_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "p_size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "subdiv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "scenario_set_fallback_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "environment", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_create2", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "instance_set_base", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "base", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_scenario", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_layer_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_attach_object_instance_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_blend_shape_weight", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "weight", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_surface_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_use_lightmap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "lightmap_instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "lightmap", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_custom_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_attach_skeleton", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_exterior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_set_extra_visibility_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_geometry_set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_geometry_set_cast_shadows_setting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shadow_casting_setting", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_geometry_set_material_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_geometry_set_draw_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "min", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance_geometry_set_as_instance_lod", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "as_lod_of_instance", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instances_cull_aabb", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "instances_cull_ray", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "instances_cull_convex", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "convex", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scenario", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "canvas_set_item_mirroring", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mirroring", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_set_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "canvas_item_set_parent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "parent", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_light_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_clip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "clip", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_distance_field_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_custom_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_custom_rect", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Just "(0, 0, 0, 0)"}]},GodotMethod {_gmName = "canvas_item_set_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_self_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_draw_behind_parent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_add_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "canvas_item_add_polyline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "canvas_item_add_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_add_circle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "pos", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_add_texture_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_texture_rect_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"},GodotArgument {_gaName = "clip_uv", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "canvas_item_add_nine_patch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "source", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "topleft", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bottomright", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "x_axis_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "y_axis_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "draw_center", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_primitive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "canvas_item_add_triangle_array", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "indices", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"},GodotArgument {_gaName = "count", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_multimesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "canvas_item_add_particles", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "particles", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "normal_map", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "h_frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "v_frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_add_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_add_clip_ignore", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ignore", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_sort_children_by_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_z_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_z_as_relative_to_parent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_copy_to_backbuffer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_draw_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_item_set_use_parent_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "canvas_light_attach_to_canvas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_texture_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_z_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_layer_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_item_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_item_shadow_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_buffer_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_gradient_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "filter", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_set_shadow_smooth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "smooth", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_occluder_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "canvas_light_occluder_attach_to_canvas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "canvas", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_occluder_set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_occluder_set_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "polygon", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_occluder_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_light_occluder_set_light_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_occluder_polygon_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "canvas_occluder_polygon_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder_polygon", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "closed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_occluder_polygon_set_shape_as_lines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder_polygon", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "canvas_occluder_polygon_set_cull_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "occluder_polygon", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "black_bars_set_margins", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "left", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "top", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "right", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bottom", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "black_bars_set_images", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "left", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "top", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "right", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bottom", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "free_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "request_frame_drawn_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "where", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_changed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "init", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "finish", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_render_info", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "info", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_test_cube", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_test_texture", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_white_texture", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_sphere_mesh", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "latitudes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "longitudes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_boot_image", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_default_clear_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_feature", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "feature", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_os_feature", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "feature", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_debug_generate_wireframes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "generate", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "ReflectionProbeUpdateMode", _geValues = fromList [("REFLECTION_PROBE_UPDATE_ALWAYS",1),("REFLECTION_PROBE_UPDATE_ONCE",0)]},GodotEnum {_geName = CustomType "LightDirectionalShadowDepthRangeMode", _geValues = fromList [("LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_STABLE",0),("LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_OPTIMIZED",1)]},GodotEnum {_geName = CustomType "BlendShapeMode", _geValues = fromList [("BLEND_SHAPE_MODE_NORMALIZED",0),("BLEND_SHAPE_MODE_RELATIVE",1)]},GodotEnum {_geName = CustomType "PrimitiveType", _geValues = fromList [("PRIMITIVE_TRIANGLE_STRIP",5),("PRIMITIVE_TRIANGLES",4),("PRIMITIVE_LINE_LOOP",3),("PRIMITIVE_TRIANGLE_FAN",6),("PRIMITIVE_MAX",7),("PRIMITIVE_LINE_STRIP",2),("PRIMITIVE_LINES",1),("PRIMITIVE_POINTS",0)]},GodotEnum {_geName = CustomType "EnvironmentSSAOQuality", _geValues = fromList [("ENV_SSAO_QUALITY_LOW",0),("ENV_SSAO_QUALITY_MEDIUM",1),("ENV_SSAO_QUALITY_HIGH",2)]},GodotEnum {_geName = CustomType "EnvironmentDOFBlurQuality", _geValues = fromList [("ENV_DOF_BLUR_QUALITY_HIGH",2),("ENV_DOF_BLUR_QUALITY_LOW",0),("ENV_DOF_BLUR_QUALITY_MEDIUM",1)]},GodotEnum {_geName = CustomType "RenderInfo", _geValues = fromList [("INFO_SURFACE_CHANGES_IN_FRAME",4),("INFO_MATERIAL_CHANGES_IN_FRAME",2),("INFO_USAGE_VIDEO_MEM_TOTAL",6),("INFO_SHADER_CHANGES_IN_FRAME",3),("INFO_TEXTURE_MEM_USED",8),("INFO_VERTICES_IN_FRAME",1),("INFO_VIDEO_MEM_USED",7),("INFO_OBJECTS_IN_FRAME",0),("INFO_DRAW_CALLS_IN_FRAME",5),("INFO_VERTEX_MEM_USED",9)]},GodotEnum {_geName = CustomType "NinePatchAxisMode", _geValues = fromList [("NINE_PATCH_STRETCH",0),("NINE_PATCH_TILE_FIT",2),("NINE_PATCH_TILE",1)]},GodotEnum {_geName = CustomType "ViewportRenderInfo", _geValues = fromList [("VIEWPORT_RENDER_INFO_MATERIAL_CHANGES_IN_FRAME",2),("VIEWPORT_RENDER_INFO_SURFACE_CHANGES_IN_FRAME",4),("VIEWPORT_RENDER_INFO_MAX",6),("VIEWPORT_RENDER_INFO_VERTICES_IN_FRAME",1),("VIEWPORT_RENDER_INFO_OBJECTS_IN_FRAME",0),("VIEWPORT_RENDER_INFO_DRAW_CALLS_IN_FRAME",5),("VIEWPORT_RENDER_INFO_SHADER_CHANGES_IN_FRAME",3)]},GodotEnum {_geName = CustomType "ViewportClearMode", _geValues = fromList [("VIEWPORT_CLEAR_ALWAYS",0),("VIEWPORT_CLEAR_NEVER",1),("VIEWPORT_CLEAR_ONLY_NEXT_FRAME",2)]},GodotEnum {_geName = CustomType "LightOmniShadowDetail", _geValues = fromList [("LIGHT_OMNI_SHADOW_DETAIL_HORIZONTAL",1),("LIGHT_OMNI_SHADOW_DETAIL_VERTICAL",0)]},GodotEnum {_geName = CustomType "ShaderMode", _geValues = fromList [("SHADER_SPATIAL",0),("SHADER_MAX",3),("SHADER_CANVAS_ITEM",1),("SHADER_PARTICLES",2)]},GodotEnum {_geName = CustomType "MultimeshTransformFormat", _geValues = fromList [("MULTIMESH_TRANSFORM_3D",1),("MULTIMESH_TRANSFORM_2D",0)]},GodotEnum {_geName = CustomType "ShadowCastingSetting", _geValues = fromList [("SHADOW_CASTING_SETTING_SHADOWS_ONLY",3),("SHADOW_CASTING_SETTING_DOUBLE_SIDED",2),("SHADOW_CASTING_SETTING_OFF",0),("SHADOW_CASTING_SETTING_ON",1)]},GodotEnum {_geName = CustomType "ViewportDebugDraw", _geValues = fromList [("VIEWPORT_DEBUG_DRAW_OVERDRAW",2),("VIEWPORT_DEBUG_DRAW_DISABLED",0),("VIEWPORT_DEBUG_DRAW_UNSHADED",1),("VIEWPORT_DEBUG_DRAW_WIREFRAME",3)]},GodotEnum {_geName = CustomType "ViewportUsage", _geValues = fromList [("VIEWPORT_USAGE_2D",0),("VIEWPORT_USAGE_3D_NO_EFFECTS",3),("VIEWPORT_USAGE_3D",2),("VIEWPORT_USAGE_2D_NO_SAMPLING",1)]},GodotEnum {_geName = CustomType "EnvironmentBG", _geValues = fromList [("ENV_BG_CANVAS",4),("ENV_BG_COLOR_SKY",3),("ENV_BG_SKY",2),("ENV_BG_MAX",6),("ENV_BG_COLOR",1),("ENV_BG_KEEP",5),("ENV_BG_CLEAR_COLOR",0)]},GodotEnum {_geName = CustomType "LightOmniShadowMode", _geValues = fromList [("LIGHT_OMNI_SHADOW_DUAL_PARABOLOID",0),("LIGHT_OMNI_SHADOW_CUBE",1)]},GodotEnum {_geName = CustomType "TextureFlags", _geValues = fromList [("TEXTURE_FLAGS_DEFAULT",7),("TEXTURE_FLAG_REPEAT",2),("TEXTURE_FLAG_CONVERT_TO_LINEAR",16),("TEXTURE_FLAG_ANISOTROPIC_FILTER",8),("TEXTURE_FLAG_MIPMAPS",1),("TEXTURE_FLAG_FILTER",4),("TEXTURE_FLAG_USED_FOR_STREAMING",4096),("TEXTURE_FLAG_MIRRORED_REPEAT",32),("TEXTURE_FLAG_CUBEMAP",2048)]},GodotEnum {_geName = CustomType "Features", _geValues = fromList [("FEATURE_SHADERS",0),("FEATURE_MULTITHREADED",1)]},GodotEnum {_geName = CustomType "InstanceType", _geValues = fromList [("INSTANCE_MULTIMESH",2),("INSTANCE_GEOMETRY_MASK",30),("INSTANCE_LIGHTMAP_CAPTURE",8),("INSTANCE_IMMEDIATE",3),("INSTANCE_MESH",1),("INSTANCE_PARTICLES",4),("INSTANCE_REFLECTION_PROBE",6),("INSTANCE_NONE",0),("INSTANCE_MAX",9),("INSTANCE_GI_PROBE",7),("INSTANCE_LIGHT",5)]},GodotEnum {_geName = CustomType "EnvironmentSSAOBlur", _geValues = fromList [("ENV_SSAO_BLUR_3x3",3),("ENV_SSAO_BLUR_2x2",2),("ENV_SSAO_BLUR_DISABLED",0),("ENV_SSAO_BLUR_1x1",1)]},GodotEnum {_geName = CustomType "EnvironmentToneMapper", _geValues = fromList [("ENV_TONE_MAPPER_FILMIC",2),("ENV_TONE_MAPPER_LINEAR",0),("ENV_TONE_MAPPER_REINHARDT",1),("ENV_TONE_MAPPER_ACES",3)]},GodotEnum {_geName = CustomType "EnvironmentGlowBlendMode", _geValues = fromList [("GLOW_BLEND_MODE_ADDITIVE",0),("GLOW_BLEND_MODE_SOFTLIGHT",2),("GLOW_BLEND_MODE_REPLACE",3),("GLOW_BLEND_MODE_SCREEN",1)]},GodotEnum {_geName = CustomType "MultimeshColorFormat", _geValues = fromList [("MULTIMESH_COLOR_FLOAT",2),("MULTIMESH_COLOR_NONE",0),("MULTIMESH_COLOR_8BIT",1)]},GodotEnum {_geName = CustomType "CanvasLightShadowFilter", _geValues = fromList [("CANVAS_LIGHT_FILTER_PCF7",3),("CANVAS_LIGHT_FILTER_PCF3",1),("CANVAS_LIGHT_FILTER_PCF9",4),("CANVAS_LIGHT_FILTER_NONE",0),("CANVAS_LIGHT_FILTER_PCF13",5),("CANVAS_LIGHT_FILTER_PCF5",2)]},GodotEnum {_geName = CustomType "ScenarioDebugMode", _geValues = fromList [("SCENARIO_DEBUG_DISABLED",0),("SCENARIO_DEBUG_OVERDRAW",2),("SCENARIO_DEBUG_SHADELESS",3),("SCENARIO_DEBUG_WIREFRAME",1)]},GodotEnum {_geName = CustomType "ViewportUpdateMode", _geValues = fromList [("VIEWPORT_UPDATE_ALWAYS",3),("VIEWPORT_UPDATE_ONCE",1),("VIEWPORT_UPDATE_DISABLED",0),("VIEWPORT_UPDATE_WHEN_VISIBLE",2)]},GodotEnum {_geName = CustomType "ArrayFormat", _geValues = fromList [("ARRAY_COMPRESS_WEIGHTS",65536),("ARRAY_FLAG_USE_16_BIT_BONES",524288),("ARRAY_FORMAT_INDEX",256),("ARRAY_COMPRESS_TANGENT",2048),("ARRAY_COMPRESS_NORMAL",1024),("ARRAY_FORMAT_COLOR",8),("ARRAY_FORMAT_TEX_UV",16),("ARRAY_COMPRESS_VERTEX",512),("ARRAY_FORMAT_VERTEX",1),("ARRAY_COMPRESS_TEX_UV",8192),("ARRAY_COMPRESS_BONES",32768),("ARRAY_FORMAT_TEX_UV2",32),("ARRAY_FORMAT_NORMAL",2),("ARRAY_COMPRESS_DEFAULT",97792),("ARRAY_FORMAT_BONES",64),("ARRAY_COMPRESS_COLOR",4096),("ARRAY_COMPRESS_TEX_UV2",16384),("ARRAY_FLAG_USE_2D_VERTICES",262144),("ARRAY_COMPRESS_INDEX",131072),("ARRAY_FORMAT_WEIGHTS",128),("ARRAY_FORMAT_TANGENT",4)]},GodotEnum {_geName = CustomType "ParticlesDrawOrder", _geValues = fromList [("PARTICLES_DRAW_ORDER_LIFETIME",1),("PARTICLES_DRAW_ORDER_INDEX",0),("PARTICLES_DRAW_ORDER_VIEW_DEPTH",2)]},GodotEnum {_geName = CustomType "CanvasLightMode", _geValues = fromList [("CANVAS_LIGHT_MODE_SUB",1),("CANVAS_LIGHT_MODE_ADD",0),("CANVAS_LIGHT_MODE_MIX",2),("CANVAS_LIGHT_MODE_MASK",3)]},GodotEnum {_geName = CustomType "LightDirectionalShadowMode", _geValues = fromList [("LIGHT_DIRECTIONAL_SHADOW_PARALLEL_2_SPLITS",1),("LIGHT_DIRECTIONAL_SHADOW_ORTHOGONAL",0),("LIGHT_DIRECTIONAL_SHADOW_PARALLEL_4_SPLITS",2)]},GodotEnum {_geName = CustomType "LightParam", _geValues = fromList [("LIGHT_PARAM_SHADOW_SPLIT_2_OFFSET",10),("LIGHT_PARAM_SHADOW_MAX_DISTANCE",8),("LIGHT_PARAM_ENERGY",0),("LIGHT_PARAM_SPECULAR",2),("LIGHT_PARAM_SPOT_ATTENUATION",6),("LIGHT_PARAM_SHADOW_SPLIT_3_OFFSET",11),("LIGHT_PARAM_SPOT_ANGLE",5),("LIGHT_PARAM_CONTACT_SHADOW_SIZE",7),("LIGHT_PARAM_MAX",15),("LIGHT_PARAM_SHADOW_NORMAL_BIAS",12),("LIGHT_PARAM_SHADOW_BIAS_SPLIT_SCALE",14),("LIGHT_PARAM_ATTENUATION",4),("LIGHT_PARAM_RANGE",3),("LIGHT_PARAM_SHADOW_SPLIT_1_OFFSET",9),("LIGHT_PARAM_SHADOW_BIAS",13)]},GodotEnum {_geName = CustomType "ArrayType", _geValues = fromList [("ARRAY_MAX",9),("ARRAY_NORMAL",1),("ARRAY_INDEX",8),("ARRAY_COLOR",3),("ARRAY_TEX_UV",4),("ARRAY_TEX_UV2",5),("ARRAY_WEIGHTS",7),("ARRAY_TANGENT",2),("ARRAY_BONES",6),("ARRAY_VERTEX",0)]},GodotEnum {_geName = CustomType "CanvasOccluderPolygonCullMode", _geValues = fromList [("CANVAS_OCCLUDER_POLYGON_CULL_CLOCKWISE",1),("CANVAS_OCCLUDER_POLYGON_CULL_DISABLED",0),("CANVAS_OCCLUDER_POLYGON_CULL_COUNTER_CLOCKWISE",2)]},GodotEnum {_geName = CustomType "InstanceFlags", _geValues = fromList [("INSTANCE_FLAG_MAX",1),("INSTANCE_FLAG_USE_BAKED_LIGHT",0)]},GodotEnum {_geName = CustomType "ViewportMSAA", _geValues = fromList [("VIEWPORT_MSAA_8X",3),("VIEWPORT_MSAA_DISABLED",0),("VIEWPORT_MSAA_2X",1),("VIEWPORT_MSAA_16X",4),("VIEWPORT_MSAA_4X",2)]},GodotEnum {_geName = CustomType "LightType", _geValues = fromList [("LIGHT_SPOT",2),("LIGHT_OMNI",1),("LIGHT_DIRECTIONAL",0)]},GodotEnum {_geName = CustomType "CubeMapSide", _geValues = fromList [("CUBEMAP_RIGHT",1),("CUBEMAP_TOP",3),("CUBEMAP_BACK",5),("CUBEMAP_BOTTOM",2),("CUBEMAP_FRONT",4),("CUBEMAP_LEFT",0)]}]},GodotClass {_gcName = "InputDefault", _gcBaseClass = "Input", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Input", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("CURSOR_MOVE",13),("CURSOR_ARROW",0),("CURSOR_IBEAM",1),("CURSOR_HSPLIT",15),("CURSOR_DRAG",6),("CURSOR_BUSY",5),("MOUSE_MODE_CONFINED",3),("CURSOR_CROSS",3),("CURSOR_WAIT",4),("CURSOR_BDIAGSIZE",11),("CURSOR_HELP",16),("MOUSE_MODE_VISIBLE",0),("CURSOR_CAN_DROP",7),("MOUSE_MODE_CAPTURED",2),("CURSOR_POINTING_HAND",2),("CURSOR_FDIAGSIZE",12),("CURSOR_HSIZE",10),("MOUSE_MODE_HIDDEN",1),("CURSOR_FORBIDDEN",8),("CURSOR_VSIZE",9),("CURSOR_VSPLIT",14)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "joy_connection_changed", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "connected", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "is_key_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scancode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_mouse_button_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_joy_button_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_just_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_action_just_released", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_joy_mapping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mapping", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "update_existing", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "remove_joy_mapping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "guid", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joy_connection_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "connected", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "guid", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_joy_known", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_axis", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_guid", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connected_joypads", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_joy_vibration_strength", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_vibration_duration", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_button_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_button_index_from_string", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_axis_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joy_axis_index_from_string", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "start_joy_vibration", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "weak_magnitude", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "strong_magnitude", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "stop_joy_vibration", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "device", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_accelerometer", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_magnetometer", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_gyroscope", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_last_mouse_speed", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_mouse_button_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mouse_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mouse_mode", _gmReturnType = EnumType "enum.Input::MouseMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "warp_mouse_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "action_press", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "action_release", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_mouse_cursor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Resource", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "hotspot", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "parse_input_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "MouseMode", _geValues = fromList [("MOUSE_MODE_CONFINED",3),("MOUSE_MODE_VISIBLE",0),("MOUSE_MODE_CAPTURED",2),("MOUSE_MODE_HIDDEN",1)]},GodotEnum {_geName = CustomType "CursorShape", _geValues = fromList [("CURSOR_MOVE",13),("CURSOR_ARROW",0),("CURSOR_IBEAM",1),("CURSOR_HSPLIT",15),("CURSOR_DRAG",6),("CURSOR_BUSY",5),("CURSOR_CROSS",3),("CURSOR_WAIT",4),("CURSOR_BDIAGSIZE",11),("CURSOR_HELP",16),("CURSOR_CAN_DROP",7),("CURSOR_POINTING_HAND",2),("CURSOR_FDIAGSIZE",12),("CURSOR_HSIZE",10),("CURSOR_FORBIDDEN",8),("CURSOR_VSIZE",9),("CURSOR_VSPLIT",14)]}]},GodotClass {_gcName = "AudioServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("SPEAKER_SURROUND_71",3),("SPEAKER_MODE_STEREO",0),("SPEAKER_SURROUND_51",2)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "bus_layout_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_bus_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "move_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_volume_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "volume_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_volume_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_send", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "send", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_send", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_solo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_bus_solo", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_mute", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_bus_mute", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_bypass_effects", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_bus_bypassing_effects", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_bus_effect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect", _gaType = CustomType "AudioEffect", _gaDefaultValue = Nothing},GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "remove_bus_effect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_effect_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_effect", _gmReturnType = CustomType "AudioEffect", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "swap_bus_effects", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "by_effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bus_effect_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_bus_effect_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "effect_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_peak_volume_left_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus_peak_volume_right_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unlock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_speaker_mode", _gmReturnType = EnumType "enum.AudioServer::SpeakerMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_mix_rate", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bus_layout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus_layout", _gaType = CustomType "AudioBusLayout", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generate_bus_layout", _gmReturnType = CustomType "AudioBusLayout", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SpeakerMode", _geValues = fromList [("SPEAKER_SURROUND_71",3),("SPEAKER_MODE_STEREO",0),("SPEAKER_SURROUND_51",2)]}]},GodotClass {_gcName = "ARVRServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("RESET_BUT_KEEP_TILT",1),("RESET_FULL_ROTATION",0),("TRACKER_CONTROLLER",1),("TRACKER_UNKNOWN",128),("TRACKER_ANY_KNOWN",127),("DONT_RESET_ROTATION",2),("TRACKER_BASESTATION",2),("TRACKER_ANCHOR",4),("TRACKER_ANY",255)], _gcProperties = [GodotProperty {_gpName = "world_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_world_scale", _gcSetter = "set_world_scale", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "tracker_removed", _gsArguments = [GodotArgument {_gaName = "tracker_name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tracker_added", _gsArguments = [GodotArgument {_gaName = "tracker_name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "interface_removed", _gsArguments = [GodotArgument {_gaName = "interface_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "interface_added", _gsArguments = [GodotArgument {_gaName = "interface_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "get_world_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_world_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_reference_frame", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "center_on_hmd", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rotation_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "keep_height", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_interface_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_interface", _gmReturnType = CustomType "ARVRInterface", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_interfaces", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_interface", _gmReturnType = CustomType "ARVRInterface", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tracker_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tracker", _gmReturnType = CustomType "ARVRPositionalTracker", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_primary_interface", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "interface", _gaType = CustomType "ARVRInterface", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "RotationMode", _geValues = fromList [("RESET_BUT_KEEP_TILT",1),("RESET_FULL_ROTATION",0),("DONT_RESET_ROTATION",2)]},GodotEnum {_geName = CustomType "TrackerType", _geValues = fromList [("TRACKER_CONTROLLER",1),("TRACKER_UNKNOWN",128),("TRACKER_ANY_KNOWN",127),("TRACKER_BASESTATION",2),("TRACKER_ANCHOR",4),("TRACKER_ANY",255)]}]},GodotClass {_gcName = "PhysicsServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS",7),("JOINT_SLIDER",2),("G6DOF_JOINT_FLAG_ENABLE_MOTOR",2),("HINGE_JOINT_LIMIT_SOFTNESS",4),("G6DOF_JOINT_LINEAR_RESTITUTION",3),("CONE_TWIST_JOINT_SWING_SPAN",0),("AREA_SPACE_OVERRIDE_REPLACE",3),("SLIDER_JOINT_LINEAR_MOTION_RESTITUTION",6),("G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT",13),("SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION",9),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_DAMP_RATIO",6),("HINGE_JOINT_MOTOR_MAX_IMPULSE",7),("G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT",1),("G6DOF_JOINT_ANGULAR_UPPER_LIMIT",6),("BODY_PARAM_BOUNCE",0),("BODY_AXIS_ANGULAR_Y",16),("SLIDER_JOINT_ANGULAR_LIMIT_LOWER",12),("BODY_MODE_CHARACTER",4),("SHAPE_RAY",1),("BODY_STATE_LINEAR_VELOCITY",1),("HINGE_JOINT_BIAS",0),("AREA_PARAM_LINEAR_DAMP",5),("BODY_PARAM_ANGULAR_DAMP",5),("SPACE_PARAM_BODY_TIME_TO_SLEEP",5),("SLIDER_JOINT_LINEAR_MOTION_SOFTNESS",5),("BODY_MODE_SOFT",3),("BODY_PARAM_LINEAR_DAMP",4),("AREA_PARAM_GRAVITY_DISTANCE_SCALE",3),("BODY_STATE_ANGULAR_VELOCITY",2),("AREA_BODY_REMOVED",1),("BODY_STATE_SLEEPING",3),("G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS",7),("INFO_ISLAND_COUNT",2),("SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION",14),("AREA_SPACE_OVERRIDE_DISABLED",0),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION",20),("AREA_PARAM_GRAVITY_IS_POINT",2),("G6DOF_JOINT_LINEAR_UPPER_LIMIT",1),("AREA_PARAM_GRAVITY_POINT_ATTENUATION",4),("G6DOF_JOINT_ANGULAR_FORCE_LIMIT",10),("SLIDER_JOINT_LINEAR_LIMIT_DAMPING",4),("BODY_STATE_TRANSFORM",0),("BODY_AXIS_LINEAR_Z",4),("SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION",17),("BODY_PARAM_MASS",2),("BODY_MODE_STATIC",0),("G6DOF_JOINT_ANGULAR_RESTITUTION",9),("HINGE_JOINT_LIMIT_UPPER",1),("BODY_PARAM_GRAVITY_SCALE",3),("HINGE_JOINT_MOTOR_TARGET_VELOCITY",6),("SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS",8),("PIN_JOINT_IMPULSE_CLAMP",2),("SHAPE_PLANE",0),("SLIDER_JOINT_ANGULAR_LIMIT_UPPER",11),("AREA_PARAM_GRAVITY",0),("G6DOF_JOINT_ANGULAR_LOWER_LIMIT",5),("HINGE_JOINT_LIMIT_RELAXATION",5),("SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS",13),("INFO_COLLISION_PAIRS",1),("SLIDER_JOINT_LINEAR_LIMIT_UPPER",0),("PIN_JOINT_DAMPING",1),("HINGE_JOINT_FLAG_USE_LIMIT",0),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS",19),("BODY_AXIS_ANGULAR_Z",32),("SLIDER_JOINT_ANGULAR_LIMIT_DAMPING",15),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING",21),("INFO_ACTIVE_OBJECTS",0),("CONE_TWIST_JOINT_RELAXATION",4),("SPACE_PARAM_CONTACT_RECYCLE_RADIUS",0),("JOINT_HINGE",1),("JOINT_CONE_TWIST",3),("SPACE_PARAM_CONTACT_MAX_SEPARATION",1),("SLIDER_JOINT_MAX",22),("G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS",2),("AREA_BODY_ADDED",0),("G6DOF_JOINT_ANGULAR_DAMPING",8),("SLIDER_JOINT_ANGULAR_MOTION_DAMPING",18),("SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION",3),("AREA_SPACE_OVERRIDE_COMBINE_REPLACE",2),("SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS",16),("JOINT_6DOF",4),("CONE_TWIST_JOINT_BIAS",2),("SHAPE_CONVEX_POLYGON",5),("G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY",12),("AREA_PARAM_PRIORITY",7),("AREA_SPACE_OVERRIDE_REPLACE_COMBINE",4),("BODY_MODE_RIGID",2),("HINGE_JOINT_LIMIT_LOWER",2),("SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION",2),("BODY_PARAM_FRICTION",1),("SHAPE_CAPSULE",4),("AREA_PARAM_ANGULAR_DAMP",6),("HINGE_JOINT_FLAG_ENABLE_MOTOR",1),("SHAPE_BOX",3),("CONE_TWIST_JOINT_TWIST_SPAN",1),("BODY_MODE_KINEMATIC",1),("SHAPE_CONCAVE_POLYGON",6),("G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT",0),("HINGE_JOINT_LIMIT_BIAS",3),("G6DOF_JOINT_ANGULAR_ERP",11),("BODY_AXIS_LINEAR_Y",2),("SLIDER_JOINT_LINEAR_LIMIT_LOWER",1),("SLIDER_JOINT_LINEAR_MOTION_DAMPING",7),("G6DOF_JOINT_LINEAR_DAMPING",4),("PIN_JOINT_BIAS",0),("AREA_PARAM_GRAVITY_VECTOR",1),("SHAPE_CUSTOM",8),("BODY_STATE_CAN_SLEEP",4),("SHAPE_HEIGHTMAP",7),("BODY_PARAM_MAX",6),("SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING",10),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD",4),("CONE_TWIST_JOINT_SOFTNESS",3),("BODY_AXIS_ANGULAR_X",8),("JOINT_PIN",0),("SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS",2),("G6DOF_JOINT_LINEAR_LOWER_LIMIT",0),("BODY_AXIS_LINEAR_X",1),("SHAPE_SPHERE",2),("AREA_SPACE_OVERRIDE_COMBINE",1),("SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD",3)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_get_type", _gmReturnType = EnumType "enum.PhysicsServer::ShapeType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_get_data", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "space_set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_get_direct_state", _gmReturnType = CustomType "PhysicsDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "area_set_space", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_space_override_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_space_override_mode", _gmReturnType = EnumType "enum.PhysicsServer::AreaSpaceOverrideMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Just "1, 0, 0, 0, 1, 0, 0, 0, 1 - 0, 0, 0"}]},GodotMethod {_gmName = "area_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_shape_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_param", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_attach_object_instance_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_object_instance_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_monitor_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_ray_pickable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_is_ray_pickable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2"},GodotArgument {_gaName = "init_sleeping", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "body_set_space", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_mode", _gmReturnType = EnumType "enum.PhysicsServer::BodyMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Just "1, 0, 0, 0, 1, 0, 0, 0, 1 - 0, 0, 0"}]},GodotMethod {_gmName = "body_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_shape_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_attach_object_instance_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_object_instance_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_enable_continuous_collision_detection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_is_continuous_collision_detection_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_kinematic_safe_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_kinematic_safe_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "state", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_state", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "state", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_apply_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "impulse", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_apply_torque_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "impulse", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_axis_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis_velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_axis_lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lock", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_is_axis_locked", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_add_collision_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "excepted_body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_remove_collision_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "excepted_body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_max_contacts_reported", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_max_contacts_reported", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_omit_force_integration", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_is_omitting_force_integration", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_force_integration_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "body_set_ray_pickable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_is_ray_pickable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_direct_state", _gmReturnType = CustomType "PhysicsDirectBodyState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_create_pin", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body_A", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_A", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_B", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_B", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_set_local_a", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_A", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_get_local_a", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_set_local_b", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_B", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_get_local_b", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_create_hinge", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body_A", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "hinge_A", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_B", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "hinge_B", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "hinge_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "hinge_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "hinge_joint_set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "hinge_joint_get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_create_slider", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body_A", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_A", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_B", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_B", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "slider_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "slider_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_create_cone_twist", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body_A", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_A", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_B", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_B", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cone_twist_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cone_twist_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_get_type", _gmReturnType = EnumType "enum.PhysicsServer::JointType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_set_solver_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "priority", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_get_solver_priority", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_create_generic_6dof", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body_A", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_A", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_B", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_ref_B", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generic_6dof_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generic_6dof_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generic_6dof_joint_set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generic_6dof_joint_get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "free_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_process_info", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "process_info", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "BodyAxis", _geValues = fromList [("BODY_AXIS_ANGULAR_Y",16),("BODY_AXIS_LINEAR_Z",4),("BODY_AXIS_ANGULAR_Z",32),("BODY_AXIS_LINEAR_Y",2),("BODY_AXIS_ANGULAR_X",8),("BODY_AXIS_LINEAR_X",1)]},GodotEnum {_geName = CustomType "ProcessInfo", _geValues = fromList [("INFO_ISLAND_COUNT",2),("INFO_COLLISION_PAIRS",1),("INFO_ACTIVE_OBJECTS",0)]},GodotEnum {_geName = CustomType "AreaBodyStatus", _geValues = fromList [("AREA_BODY_REMOVED",1),("AREA_BODY_ADDED",0)]},GodotEnum {_geName = CustomType "BodyMode", _geValues = fromList [("BODY_MODE_CHARACTER",4),("BODY_MODE_SOFT",3),("BODY_MODE_STATIC",0),("BODY_MODE_RIGID",2),("BODY_MODE_KINEMATIC",1)]},GodotEnum {_geName = CustomType "ShapeType", _geValues = fromList [("SHAPE_RAY",1),("SHAPE_PLANE",0),("SHAPE_CONVEX_POLYGON",5),("SHAPE_CAPSULE",4),("SHAPE_BOX",3),("SHAPE_CONCAVE_POLYGON",6),("SHAPE_CUSTOM",8),("SHAPE_HEIGHTMAP",7),("SHAPE_SPHERE",2)]},GodotEnum {_geName = CustomType "PinJointParam", _geValues = fromList [("PIN_JOINT_IMPULSE_CLAMP",2),("PIN_JOINT_DAMPING",1),("PIN_JOINT_BIAS",0)]},GodotEnum {_geName = CustomType "SpaceParameter", _geValues = fromList [("SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS",7),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_DAMP_RATIO",6),("SPACE_PARAM_BODY_TIME_TO_SLEEP",5),("SPACE_PARAM_CONTACT_RECYCLE_RADIUS",0),("SPACE_PARAM_CONTACT_MAX_SEPARATION",1),("SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION",2),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD",4),("SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD",3)]},GodotEnum {_geName = CustomType "ConeTwistJointParam", _geValues = fromList [("CONE_TWIST_JOINT_SWING_SPAN",0),("CONE_TWIST_JOINT_RELAXATION",4),("CONE_TWIST_JOINT_BIAS",2),("CONE_TWIST_JOINT_TWIST_SPAN",1),("CONE_TWIST_JOINT_SOFTNESS",3)]},GodotEnum {_geName = CustomType "JointType", _geValues = fromList [("JOINT_SLIDER",2),("JOINT_HINGE",1),("JOINT_CONE_TWIST",3),("JOINT_6DOF",4),("JOINT_PIN",0)]},GodotEnum {_geName = CustomType "BodyState", _geValues = fromList [("BODY_STATE_LINEAR_VELOCITY",1),("BODY_STATE_ANGULAR_VELOCITY",2),("BODY_STATE_SLEEPING",3),("BODY_STATE_TRANSFORM",0),("BODY_STATE_CAN_SLEEP",4)]},GodotEnum {_geName = CustomType "BodyParameter", _geValues = fromList [("BODY_PARAM_BOUNCE",0),("BODY_PARAM_ANGULAR_DAMP",5),("BODY_PARAM_LINEAR_DAMP",4),("BODY_PARAM_MASS",2),("BODY_PARAM_GRAVITY_SCALE",3),("BODY_PARAM_FRICTION",1),("BODY_PARAM_MAX",6)]},GodotEnum {_geName = CustomType "G6DOFJointAxisParam", _geValues = fromList [("G6DOF_JOINT_LINEAR_RESTITUTION",3),("G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT",13),("G6DOF_JOINT_ANGULAR_UPPER_LIMIT",6),("G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS",7),("G6DOF_JOINT_LINEAR_UPPER_LIMIT",1),("G6DOF_JOINT_ANGULAR_FORCE_LIMIT",10),("G6DOF_JOINT_ANGULAR_RESTITUTION",9),("G6DOF_JOINT_ANGULAR_LOWER_LIMIT",5),("G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS",2),("G6DOF_JOINT_ANGULAR_DAMPING",8),("G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY",12),("G6DOF_JOINT_ANGULAR_ERP",11),("G6DOF_JOINT_LINEAR_DAMPING",4),("G6DOF_JOINT_LINEAR_LOWER_LIMIT",0)]},GodotEnum {_geName = CustomType "SliderJointParam", _geValues = fromList [("SLIDER_JOINT_LINEAR_MOTION_RESTITUTION",6),("SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION",9),("SLIDER_JOINT_ANGULAR_LIMIT_LOWER",12),("SLIDER_JOINT_LINEAR_MOTION_SOFTNESS",5),("SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION",14),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION",20),("SLIDER_JOINT_LINEAR_LIMIT_DAMPING",4),("SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION",17),("SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS",8),("SLIDER_JOINT_ANGULAR_LIMIT_UPPER",11),("SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS",13),("SLIDER_JOINT_LINEAR_LIMIT_UPPER",0),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS",19),("SLIDER_JOINT_ANGULAR_LIMIT_DAMPING",15),("SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING",21),("SLIDER_JOINT_MAX",22),("SLIDER_JOINT_ANGULAR_MOTION_DAMPING",18),("SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION",3),("SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS",16),("SLIDER_JOINT_LINEAR_LIMIT_LOWER",1),("SLIDER_JOINT_LINEAR_MOTION_DAMPING",7),("SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING",10),("SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS",2)]},GodotEnum {_geName = CustomType "HingeJointParam", _geValues = fromList [("HINGE_JOINT_LIMIT_SOFTNESS",4),("HINGE_JOINT_MOTOR_MAX_IMPULSE",7),("HINGE_JOINT_BIAS",0),("HINGE_JOINT_LIMIT_UPPER",1),("HINGE_JOINT_MOTOR_TARGET_VELOCITY",6),("HINGE_JOINT_LIMIT_RELAXATION",5),("HINGE_JOINT_LIMIT_LOWER",2),("HINGE_JOINT_LIMIT_BIAS",3)]},GodotEnum {_geName = CustomType "G6DOFJointAxisFlag", _geValues = fromList [("G6DOF_JOINT_FLAG_ENABLE_MOTOR",2),("G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT",1),("G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT",0)]},GodotEnum {_geName = CustomType "HingeJointFlag", _geValues = fromList [("HINGE_JOINT_FLAG_USE_LIMIT",0),("HINGE_JOINT_FLAG_ENABLE_MOTOR",1)]},GodotEnum {_geName = CustomType "AreaSpaceOverrideMode", _geValues = fromList [("AREA_SPACE_OVERRIDE_REPLACE",3),("AREA_SPACE_OVERRIDE_DISABLED",0),("AREA_SPACE_OVERRIDE_COMBINE_REPLACE",2),("AREA_SPACE_OVERRIDE_REPLACE_COMBINE",4),("AREA_SPACE_OVERRIDE_COMBINE",1)]},GodotEnum {_geName = CustomType "AreaParameter", _geValues = fromList [("AREA_PARAM_LINEAR_DAMP",5),("AREA_PARAM_GRAVITY_DISTANCE_SCALE",3),("AREA_PARAM_GRAVITY_IS_POINT",2),("AREA_PARAM_GRAVITY_POINT_ATTENUATION",4),("AREA_PARAM_GRAVITY",0),("AREA_PARAM_PRIORITY",7),("AREA_PARAM_ANGULAR_DAMP",6),("AREA_PARAM_GRAVITY_VECTOR",1)]}]},GodotClass {_gcName = "Physics2DServer", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS",6),("AREA_SPACE_OVERRIDE_REPLACE",3),("CCD_MODE_DISABLED",0),("JOINT_PARAM_MAX_FORCE",2),("CCD_MODE_CAST_RAY",1),("JOINT_GROOVE",1),("BODY_PARAM_BOUNCE",0),("BODY_MODE_CHARACTER",3),("SHAPE_RAY",1),("CCD_MODE_CAST_SHAPE",2),("BODY_STATE_LINEAR_VELOCITY",1),("AREA_PARAM_LINEAR_DAMP",5),("BODY_PARAM_ANGULAR_DAMP",6),("SPACE_PARAM_BODY_TIME_TO_SLEEP",5),("BODY_PARAM_LINEAR_DAMP",5),("AREA_PARAM_GRAVITY_DISTANCE_SCALE",3),("BODY_STATE_ANGULAR_VELOCITY",2),("AREA_BODY_REMOVED",1),("BODY_STATE_SLEEPING",3),("INFO_ISLAND_COUNT",2),("AREA_SPACE_OVERRIDE_DISABLED",0),("AREA_PARAM_GRAVITY_IS_POINT",2),("AREA_PARAM_GRAVITY_POINT_ATTENUATION",4),("BODY_STATE_TRANSFORM",0),("BODY_PARAM_INERTIA",3),("BODY_PARAM_MASS",2),("BODY_MODE_STATIC",0),("JOINT_PARAM_MAX_BIAS",1),("SHAPE_SEGMENT",2),("BODY_PARAM_GRAVITY_SCALE",4),("JOINT_DAMPED_SPRING",2),("AREA_PARAM_GRAVITY",0),("INFO_COLLISION_PAIRS",1),("SHAPE_RECTANGLE",4),("INFO_ACTIVE_OBJECTS",0),("DAMPED_STRING_DAMPING",2),("SPACE_PARAM_CONTACT_RECYCLE_RADIUS",0),("SPACE_PARAM_CONTACT_MAX_SEPARATION",1),("DAMPED_STRING_REST_LENGTH",0),("AREA_BODY_ADDED",0),("AREA_SPACE_OVERRIDE_COMBINE_REPLACE",2),("SHAPE_CIRCLE",3),("SHAPE_CONVEX_POLYGON",6),("AREA_PARAM_PRIORITY",7),("AREA_SPACE_OVERRIDE_REPLACE_COMBINE",4),("BODY_MODE_RIGID",2),("SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION",2),("BODY_PARAM_FRICTION",1),("SHAPE_CAPSULE",5),("AREA_PARAM_ANGULAR_DAMP",6),("BODY_MODE_KINEMATIC",1),("SHAPE_CONCAVE_POLYGON",7),("AREA_PARAM_GRAVITY_VECTOR",1),("JOINT_PARAM_BIAS",0),("SHAPE_CUSTOM",8),("BODY_STATE_CAN_SLEEP",4),("BODY_PARAM_MAX",7),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD",4),("SHAPE_LINE",0),("JOINT_PIN",0),("AREA_SPACE_OVERRIDE_COMBINE",1),("DAMPED_STRING_STIFFNESS",1),("SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD",3)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "line_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "ray_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "segment_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "circle_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "rectangle_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "capsule_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "convex_polygon_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "concave_polygon_shape_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "shape_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_get_type", _gmReturnType = EnumType "enum.Physics2DServer::ShapeType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_get_data", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "space_set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "space_get_direct_state", _gmReturnType = CustomType "Physics2DDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "area_set_space", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_space_override_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_space_override_mode", _gmReturnType = EnumType "enum.Physics2DServer::AreaSpaceOverrideMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Just "((1, 0), (0, 1), (0, 0))"}]},GodotMethod {_gmName = "area_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_shape_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_shape_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_shape_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_param", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_attach_object_instance_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_get_object_instance_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "area_set_monitor_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "body_set_space", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "space", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_mode", _gmReturnType = EnumType "enum.Physics2DServer::BodyMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Just "((1, 0), (0, 1), (0, 0))"}]},GodotMethod {_gmName = "body_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_shape_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_shape_metadata", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "metadata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_shape_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_shape_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_shape_as_one_way_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_attach_object_instance_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_object_instance_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_continuous_collision_detection_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_continuous_collision_detection_mode", _gmReturnType = EnumType "enum.Physics2DServer::CCDMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "state", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_state", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "state", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_apply_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "impulse", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_add_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "force", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_axis_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "axis_velocity", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_add_collision_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "excepted_body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_remove_collision_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "excepted_body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_max_contacts_reported", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_get_max_contacts_reported", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_omit_force_integration", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_is_omitting_force_integration", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "body_set_force_integration_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "body_test_motion", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.08"},GodotArgument {_gaName = "result", _gaType = CustomType "Physics2DTestMotionResult", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "body_get_direct_state", _gmReturnType = CustomType "Physics2DDirectBodyState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "pin_joint_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anchor", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_a", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_b", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "groove_joint_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "groove1_a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "groove2_a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "anchor_b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_a", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"},GodotArgument {_gaName = "body_b", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "damped_spring_joint_create", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anchor_a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "anchor_b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_a", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "body_b", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "damped_string_joint_set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "damped_string_joint_get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "joint_get_type", _gmReturnType = EnumType "enum.Physics2DServer::JointType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joint", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "free_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_process_info", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "process_info", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "ProcessInfo", _geValues = fromList [("INFO_ISLAND_COUNT",2),("INFO_COLLISION_PAIRS",1),("INFO_ACTIVE_OBJECTS",0)]},GodotEnum {_geName = CustomType "AreaBodyStatus", _geValues = fromList [("AREA_BODY_REMOVED",1),("AREA_BODY_ADDED",0)]},GodotEnum {_geName = CustomType "DampedStringParam", _geValues = fromList [("DAMPED_STRING_DAMPING",2),("DAMPED_STRING_REST_LENGTH",0),("DAMPED_STRING_STIFFNESS",1)]},GodotEnum {_geName = CustomType "BodyMode", _geValues = fromList [("BODY_MODE_CHARACTER",3),("BODY_MODE_STATIC",0),("BODY_MODE_RIGID",2),("BODY_MODE_KINEMATIC",1)]},GodotEnum {_geName = CustomType "ShapeType", _geValues = fromList [("SHAPE_RAY",1),("SHAPE_SEGMENT",2),("SHAPE_RECTANGLE",4),("SHAPE_CIRCLE",3),("SHAPE_CONVEX_POLYGON",6),("SHAPE_CAPSULE",5),("SHAPE_CONCAVE_POLYGON",7),("SHAPE_CUSTOM",8),("SHAPE_LINE",0)]},GodotEnum {_geName = CustomType "JointParam", _geValues = fromList [("JOINT_PARAM_MAX_FORCE",2),("JOINT_PARAM_MAX_BIAS",1),("JOINT_PARAM_BIAS",0)]},GodotEnum {_geName = CustomType "SpaceParameter", _geValues = fromList [("SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS",6),("SPACE_PARAM_BODY_TIME_TO_SLEEP",5),("SPACE_PARAM_CONTACT_RECYCLE_RADIUS",0),("SPACE_PARAM_CONTACT_MAX_SEPARATION",1),("SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION",2),("SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD",4),("SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD",3)]},GodotEnum {_geName = CustomType "JointType", _geValues = fromList [("JOINT_GROOVE",1),("JOINT_DAMPED_SPRING",2),("JOINT_PIN",0)]},GodotEnum {_geName = CustomType "CCDMode", _geValues = fromList [("CCD_MODE_DISABLED",0),("CCD_MODE_CAST_RAY",1),("CCD_MODE_CAST_SHAPE",2)]},GodotEnum {_geName = CustomType "BodyState", _geValues = fromList [("BODY_STATE_LINEAR_VELOCITY",1),("BODY_STATE_ANGULAR_VELOCITY",2),("BODY_STATE_SLEEPING",3),("BODY_STATE_TRANSFORM",0),("BODY_STATE_CAN_SLEEP",4)]},GodotEnum {_geName = CustomType "BodyParameter", _geValues = fromList [("BODY_PARAM_BOUNCE",0),("BODY_PARAM_ANGULAR_DAMP",6),("BODY_PARAM_LINEAR_DAMP",5),("BODY_PARAM_INERTIA",3),("BODY_PARAM_MASS",2),("BODY_PARAM_GRAVITY_SCALE",4),("BODY_PARAM_FRICTION",1),("BODY_PARAM_MAX",7)]},GodotEnum {_geName = CustomType "AreaSpaceOverrideMode", _geValues = fromList [("AREA_SPACE_OVERRIDE_REPLACE",3),("AREA_SPACE_OVERRIDE_DISABLED",0),("AREA_SPACE_OVERRIDE_COMBINE_REPLACE",2),("AREA_SPACE_OVERRIDE_REPLACE_COMBINE",4),("AREA_SPACE_OVERRIDE_COMBINE",1)]},GodotEnum {_geName = CustomType "AreaParameter", _geValues = fromList [("AREA_PARAM_LINEAR_DAMP",5),("AREA_PARAM_GRAVITY_DISTANCE_SCALE",3),("AREA_PARAM_GRAVITY_IS_POINT",2),("AREA_PARAM_GRAVITY_POINT_ATTENUATION",4),("AREA_PARAM_GRAVITY",0),("AREA_PARAM_PRIORITY",7),("AREA_PARAM_ANGULAR_DAMP",6),("AREA_PARAM_GRAVITY_VECTOR",1)]}]},GodotClass {_gcName = "ARVRInterface", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("ARVR_STEREO",2),("ARVR_INSUFFICIENT_FEATURES",2),("ARVR_NOT_TRACKING",4),("EYE_MONO",0),("EYE_LEFT",1),("ARVR_EXCESSIVE_MOTION",1),("ARVR_NORMAL_TRACKING",0),("EYE_RIGHT",2),("ARVR_NONE",0),("ARVR_EXTERNAL",8),("ARVR_UNKNOWN_TRACKING",3),("ARVR_AR",4),("ARVR_MONO",1)], _gcProperties = [GodotProperty {_gpName = "interface_is_primary", _gcType = PrimitiveType BoolType, _gcGetter = "is_primary", _gcSetter = "set_is_primary", _gcIndex = -1},GodotProperty {_gpName = "interface_is_initialized", _gcType = PrimitiveType BoolType, _gcGetter = "is_initialized", _gcSetter = "set_is_initialized", _gcIndex = -1},GodotProperty {_gpName = "ar_is_anchor_detection_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_anchor_detection_is_enabled", _gcSetter = "set_anchor_detection_is_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_capabilities", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_primary", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_is_primary", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_initialized", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_is_initialized", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "initialized", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "initialize", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "uninitialize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tracking_status", _gmReturnType = EnumType "enum.ARVRInterface::Tracking_status", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_render_targetsize", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_stereo", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_anchor_detection_is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_anchor_detection_is_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Tracking_status", _geValues = fromList [("ARVR_INSUFFICIENT_FEATURES",2),("ARVR_NOT_TRACKING",4),("ARVR_EXCESSIVE_MOTION",1),("ARVR_NORMAL_TRACKING",0),("ARVR_UNKNOWN_TRACKING",3)]},GodotEnum {_geName = CustomType "Eyes", _geValues = fromList [("EYE_MONO",0),("EYE_LEFT",1),("EYE_RIGHT",2)]},GodotEnum {_geName = CustomType "Capabilities", _geValues = fromList [("ARVR_STEREO",2),("ARVR_NONE",0),("ARVR_EXTERNAL",8),("ARVR_AR",4),("ARVR_MONO",1)]}]},GodotClass {_gcName = "ARVRPositionalTracker", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("TRACKER_LEFT_HAND",1),("TRACKER_RIGHT_HAND",2),("TRACKER_HAND_UNKNOWN",0)], _gcProperties = [GodotProperty {_gpName = "rumble", _gcType = PrimitiveType FloatType, _gcGetter = "get_rumble", _gcSetter = "set_rumble", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_type", _gmReturnType = EnumType "enum.ARVRServer::TrackerType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_joy_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tracks_orientation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_orientation", _gmReturnType = CoreType "Basis", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tracks_position", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_hand", _gmReturnType = EnumType "enum.ARVRPositionalTracker::TrackerHand", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "adjust_by_reference_frame", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_joy_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "joy_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_orientation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "orientation", _gaType = CoreType "Basis", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_rw_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rw_position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rumble", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rumble", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rumble", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "TrackerHand", _geValues = fromList [("TRACKER_LEFT_HAND",1),("TRACKER_RIGHT_HAND",2),("TRACKER_HAND_UNKNOWN",0)]}]},GodotClass {_gcName = "AudioStream", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioStreamPlayback", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioStreamRandomPitch", _gcBaseClass = "AudioStream", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "audio_stream", _gcType = CustomType "AudioStream", _gcGetter = "get_audio_stream", _gcSetter = "set_audio_stream", _gcIndex = -1},GodotProperty {_gpName = "random_pitch", _gcType = PrimitiveType FloatType, _gcGetter = "get_random_pitch", _gcSetter = "set_random_pitch", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_audio_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "AudioStream", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_audio_stream", _gmReturnType = CustomType "AudioStream", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_random_pitch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_random_pitch", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffect", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectEQ", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_band_gain_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "band_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "volume_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_band_gain_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "band_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_band_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectFilter", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("FILTER_24DB",3),("FILTER_12DB",1),("FILTER_18DB",2),("FILTER_6DB",0)], _gcProperties = [GodotProperty {_gpName = "cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_cutoff", _gcSetter = "set_cutoff", _gcIndex = -1},GodotProperty {_gpName = "resonance", _gcType = PrimitiveType FloatType, _gcGetter = "get_resonance", _gcSetter = "set_resonance", _gcIndex = -1},GodotProperty {_gpName = "gain", _gcType = PrimitiveType FloatType, _gcGetter = "get_gain", _gcSetter = "set_gain", _gcIndex = -1},GodotProperty {_gpName = "db", _gcType = PrimitiveType IntType, _gcGetter = "get_db", _gcSetter = "set_db", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_cutoff", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "freq", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cutoff", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_resonance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resonance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gain", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gain", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_db", _gmReturnType = EnumType "enum.AudioEffectFilter::FilterDB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "FilterDB", _geValues = fromList [("FILTER_24DB",3),("FILTER_12DB",1),("FILTER_18DB",2),("FILTER_6DB",0)]}]},GodotClass {_gcName = "AudioBusLayout", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectAmplify", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "volume_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_volume_db", _gcSetter = "set_volume_db", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_volume_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "volume", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_volume_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectReverb", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "predelay_msec", _gcType = PrimitiveType FloatType, _gcGetter = "get_predelay_msec", _gcSetter = "set_predelay_msec", _gcIndex = -1},GodotProperty {_gpName = "predelay_feedback", _gcType = PrimitiveType FloatType, _gcGetter = "get_predelay_feedback", _gcSetter = "set_predelay_feedback", _gcIndex = -1},GodotProperty {_gpName = "room_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_room_size", _gcSetter = "set_room_size", _gcIndex = -1},GodotProperty {_gpName = "damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_damping", _gcSetter = "set_damping", _gcIndex = -1},GodotProperty {_gpName = "spread", _gcType = PrimitiveType FloatType, _gcGetter = "get_spread", _gcSetter = "set_spread", _gcIndex = -1},GodotProperty {_gpName = "hipass", _gcType = PrimitiveType FloatType, _gcGetter = "get_hpf", _gcSetter = "set_hpf", _gcIndex = -1},GodotProperty {_gpName = "dry", _gcType = PrimitiveType FloatType, _gcGetter = "get_dry", _gcSetter = "set_dry", _gcIndex = -1},GodotProperty {_gpName = "wet", _gcType = PrimitiveType FloatType, _gcGetter = "get_wet", _gcSetter = "set_wet", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_predelay_msec", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "msec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_predelay_msec", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_predelay_feedback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "feedback", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_predelay_feedback", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_room_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_room_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_damping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_damping", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_spread", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_spread", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dry", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dry", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_wet", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_wet", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hpf", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_hpf", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectLowPassFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectHighPassFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectBandPassFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectNotchFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectBandLimitFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectLowShelfFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectHighShelfFilter", _gcBaseClass = "AudioEffectFilter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectEQ6", _gcBaseClass = "AudioEffectEQ", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectEQ10", _gcBaseClass = "AudioEffectEQ", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectEQ21", _gcBaseClass = "AudioEffectEQ", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioEffectDistortion", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("MODE_CLIP",0),("MODE_LOFI",2),("MODE_OVERDRIVE",3),("MODE_WAVESHAPE",4),("MODE_ATAN",1)], _gcProperties = [GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "pre_gain", _gcType = PrimitiveType FloatType, _gcGetter = "get_pre_gain", _gcSetter = "set_pre_gain", _gcIndex = -1},GodotProperty {_gpName = "keep_hf_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_keep_hf_hz", _gcSetter = "set_keep_hf_hz", _gcIndex = -1},GodotProperty {_gpName = "drive", _gcType = PrimitiveType FloatType, _gcGetter = "get_drive", _gcSetter = "set_drive", _gcIndex = -1},GodotProperty {_gpName = "post_gain", _gcType = PrimitiveType FloatType, _gcGetter = "get_post_gain", _gcSetter = "set_post_gain", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.AudioEffectDistortion::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pre_gain", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pre_gain", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pre_gain", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_keep_hf_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "keep_hf_hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_keep_hf_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_drive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "drive", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_drive", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_post_gain", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "post_gain", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_post_gain", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_CLIP",0),("MODE_LOFI",2),("MODE_OVERDRIVE",3),("MODE_WAVESHAPE",4),("MODE_ATAN",1)]}]},GodotClass {_gcName = "AudioEffectStereoEnhance", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "pan_pullout", _gcType = PrimitiveType FloatType, _gcGetter = "get_pan_pullout", _gcSetter = "set_pan_pullout", _gcIndex = -1},GodotProperty {_gpName = "time_pullout_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_time_pullout", _gcSetter = "set_time_pullout", _gcIndex = -1},GodotProperty {_gpName = "surround", _gcType = PrimitiveType FloatType, _gcGetter = "get_surround", _gcSetter = "set_surround", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_pan_pullout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pan_pullout", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_time_pullout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_time_pullout", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_surround", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_surround", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectPanner", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_pan", _gcSetter = "set_pan", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_pan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cpanume", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pan", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectChorus", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "voice_count", _gcType = PrimitiveType IntType, _gcGetter = "get_voice_count", _gcSetter = "set_voice_count", _gcIndex = -1},GodotProperty {_gpName = "dry", _gcType = PrimitiveType FloatType, _gcGetter = "get_dry", _gcSetter = "set_dry", _gcIndex = -1},GodotProperty {_gpName = "wet", _gcType = PrimitiveType FloatType, _gcGetter = "get_wet", _gcSetter = "set_wet", _gcIndex = -1},GodotProperty {_gpName = "voice/1/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_delay_ms", _gcSetter = "set_voice_delay_ms", _gcIndex = 0},GodotProperty {_gpName = "voice/1/rate_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_rate_hz", _gcSetter = "set_voice_rate_hz", _gcIndex = 0},GodotProperty {_gpName = "voice/1/depth_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_depth_ms", _gcSetter = "set_voice_depth_ms", _gcIndex = 0},GodotProperty {_gpName = "voice/1/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_level_db", _gcSetter = "set_voice_level_db", _gcIndex = 0},GodotProperty {_gpName = "voice/1/cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_cutoff_hz", _gcSetter = "set_voice_cutoff_hz", _gcIndex = 0},GodotProperty {_gpName = "voice/1/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_pan", _gcSetter = "set_voice_pan", _gcIndex = 0},GodotProperty {_gpName = "voice/2/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_delay_ms", _gcSetter = "set_voice_delay_ms", _gcIndex = 1},GodotProperty {_gpName = "voice/2/rate_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_rate_hz", _gcSetter = "set_voice_rate_hz", _gcIndex = 1},GodotProperty {_gpName = "voice/2/depth_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_depth_ms", _gcSetter = "set_voice_depth_ms", _gcIndex = 1},GodotProperty {_gpName = "voice/2/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_level_db", _gcSetter = "set_voice_level_db", _gcIndex = 1},GodotProperty {_gpName = "voice/2/cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_cutoff_hz", _gcSetter = "set_voice_cutoff_hz", _gcIndex = 1},GodotProperty {_gpName = "voice/2/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_pan", _gcSetter = "set_voice_pan", _gcIndex = 1},GodotProperty {_gpName = "voice/3/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_delay_ms", _gcSetter = "set_voice_delay_ms", _gcIndex = 2},GodotProperty {_gpName = "voice/3/rate_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_rate_hz", _gcSetter = "set_voice_rate_hz", _gcIndex = 2},GodotProperty {_gpName = "voice/3/depth_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_depth_ms", _gcSetter = "set_voice_depth_ms", _gcIndex = 2},GodotProperty {_gpName = "voice/3/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_level_db", _gcSetter = "set_voice_level_db", _gcIndex = 2},GodotProperty {_gpName = "voice/3/cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_cutoff_hz", _gcSetter = "set_voice_cutoff_hz", _gcIndex = 2},GodotProperty {_gpName = "voice/3/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_pan", _gcSetter = "set_voice_pan", _gcIndex = 2},GodotProperty {_gpName = "voice/4/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_delay_ms", _gcSetter = "set_voice_delay_ms", _gcIndex = 3},GodotProperty {_gpName = "voice/4/rate_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_rate_hz", _gcSetter = "set_voice_rate_hz", _gcIndex = 3},GodotProperty {_gpName = "voice/4/depth_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_depth_ms", _gcSetter = "set_voice_depth_ms", _gcIndex = 3},GodotProperty {_gpName = "voice/4/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_level_db", _gcSetter = "set_voice_level_db", _gcIndex = 3},GodotProperty {_gpName = "voice/4/cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_cutoff_hz", _gcSetter = "set_voice_cutoff_hz", _gcIndex = 3},GodotProperty {_gpName = "voice/4/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_voice_pan", _gcSetter = "set_voice_pan", _gcIndex = 3}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_voice_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voices", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_voice_delay_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay_ms", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_delay_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_voice_rate_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rate_hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_rate_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_voice_depth_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "depth_ms", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_depth_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_voice_level_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "level_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_level_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_voice_cutoff_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "cutoff_hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_cutoff_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_voice_pan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "pan", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_voice_pan", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "voice_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_wet", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_wet", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dry", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dry", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectDelay", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "dry", _gcType = PrimitiveType FloatType, _gcGetter = "get_dry", _gcSetter = "set_dry", _gcIndex = -1},GodotProperty {_gpName = "tap1/active", _gcType = PrimitiveType BoolType, _gcGetter = "is_tap1_active", _gcSetter = "set_tap1_active", _gcIndex = -1},GodotProperty {_gpName = "tap1/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap1_delay_ms", _gcSetter = "set_tap1_delay_ms", _gcIndex = -1},GodotProperty {_gpName = "tap1/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap1_level_db", _gcSetter = "set_tap1_level_db", _gcIndex = -1},GodotProperty {_gpName = "tap1/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap1_pan", _gcSetter = "set_tap1_pan", _gcIndex = -1},GodotProperty {_gpName = "tap2/active", _gcType = PrimitiveType BoolType, _gcGetter = "is_tap2_active", _gcSetter = "set_tap2_active", _gcIndex = -1},GodotProperty {_gpName = "tap2/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap2_delay_ms", _gcSetter = "set_tap2_delay_ms", _gcIndex = -1},GodotProperty {_gpName = "tap2/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap2_level_db", _gcSetter = "set_tap2_level_db", _gcIndex = -1},GodotProperty {_gpName = "tap2/pan", _gcType = PrimitiveType FloatType, _gcGetter = "get_tap2_pan", _gcSetter = "set_tap2_pan", _gcIndex = -1},GodotProperty {_gpName = "feedback/active", _gcType = PrimitiveType BoolType, _gcGetter = "is_feedback_active", _gcSetter = "set_feedback_active", _gcIndex = -1},GodotProperty {_gpName = "feedback/delay_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_feedback_delay_ms", _gcSetter = "set_feedback_delay_ms", _gcIndex = -1},GodotProperty {_gpName = "feedback/level_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_feedback_level_db", _gcSetter = "set_feedback_level_db", _gcIndex = -1},GodotProperty {_gpName = "feedback/lowpass", _gcType = PrimitiveType FloatType, _gcGetter = "get_feedback_lowpass", _gcSetter = "set_feedback_lowpass", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_dry", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dry", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap1_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_tap1_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap1_delay_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap1_delay_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap1_level_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap1_level_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap1_pan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap1_pan", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap2_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_tap2_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap2_delay_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap2_delay_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap2_level_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap2_level_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tap2_pan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tap2_pan", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_feedback_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_feedback_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_feedback_delay_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_feedback_delay_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_feedback_level_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_feedback_level_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_feedback_lowpass", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_feedback_lowpass", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectCompressor", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "threshold", _gcType = PrimitiveType FloatType, _gcGetter = "get_threshold", _gcSetter = "set_threshold", _gcIndex = -1},GodotProperty {_gpName = "ratio", _gcType = PrimitiveType FloatType, _gcGetter = "get_ratio", _gcSetter = "set_ratio", _gcIndex = -1},GodotProperty {_gpName = "gain", _gcType = PrimitiveType FloatType, _gcGetter = "get_gain", _gcSetter = "set_gain", _gcIndex = -1},GodotProperty {_gpName = "attack_us", _gcType = PrimitiveType FloatType, _gcGetter = "get_attack_us", _gcSetter = "set_attack_us", _gcIndex = -1},GodotProperty {_gpName = "release_ms", _gcType = PrimitiveType FloatType, _gcGetter = "get_release_ms", _gcSetter = "set_release_ms", _gcIndex = -1},GodotProperty {_gpName = "mix", _gcType = PrimitiveType FloatType, _gcGetter = "get_mix", _gcSetter = "set_mix", _gcIndex = -1},GodotProperty {_gpName = "sidechain", _gcType = PrimitiveType FloatType, _gcGetter = "get_sidechain", _gcSetter = "set_sidechain", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_threshold", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_threshold", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gain", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gain", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gain", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attack_us", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "attack_us", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attack_us", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_release_ms", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "release_ms", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_release_ms", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mix", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mix", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mix", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sidechain", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sidechain", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sidechain", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectLimiter", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "ceiling_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_ceiling_db", _gcSetter = "set_ceiling_db", _gcIndex = -1},GodotProperty {_gpName = "threshold_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_threshold_db", _gcSetter = "set_threshold_db", _gcIndex = -1},GodotProperty {_gpName = "soft_clip_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_soft_clip_db", _gcSetter = "set_soft_clip_db", _gcIndex = -1},GodotProperty {_gpName = "soft_clip_ratio", _gcType = PrimitiveType FloatType, _gcGetter = "get_soft_clip_ratio", _gcSetter = "set_soft_clip_ratio", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_ceiling_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ceiling", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ceiling_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_threshold_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_threshold_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_soft_clip_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "soft_clip", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_soft_clip_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_soft_clip_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "soft_clip", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_soft_clip_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectPitchShift", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "pitch_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_pitch_scale", _gcSetter = "set_pitch_scale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_pitch_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rate", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pitch_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioEffectPhaser", _gcBaseClass = "AudioEffect", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "range_min_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_range_min_hz", _gcSetter = "set_range_min_hz", _gcIndex = -1},GodotProperty {_gpName = "range_max_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_range_max_hz", _gcSetter = "set_range_max_hz", _gcIndex = -1},GodotProperty {_gpName = "rate_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_rate_hz", _gcSetter = "set_rate_hz", _gcIndex = -1},GodotProperty {_gpName = "feedback", _gcType = PrimitiveType FloatType, _gcGetter = "get_feedback", _gcSetter = "set_feedback", _gcIndex = -1},GodotProperty {_gpName = "depth", _gcType = PrimitiveType FloatType, _gcGetter = "get_depth", _gcSetter = "set_depth", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_range_min_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_range_min_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_range_max_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_range_max_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rate_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hz", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rate_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_feedback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fbk", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_feedback", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "depth", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Physics2DDirectBodyState", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "step", _gcType = PrimitiveType FloatType, _gcGetter = "get_step", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "inverse_mass", _gcType = PrimitiveType FloatType, _gcGetter = "get_inverse_mass", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "inverse_inertia", _gcType = PrimitiveType FloatType, _gcGetter = "get_inverse_inertia", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_total_angular_damp", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_total_linear_damp", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_gravity", _gcType = CoreType "Vector2", _gcGetter = "get_total_gravity", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "angular_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_velocity", _gcSetter = "set_angular_velocity", _gcIndex = -1},GodotProperty {_gpName = "linear_velocity", _gcType = CoreType "Vector2", _gcGetter = "get_linear_velocity", _gcSetter = "set_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "sleeping", _gcType = PrimitiveType BoolType, _gcGetter = "is_sleeping", _gcSetter = "set_sleep_state", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform2D", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_total_gravity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inverse_mass", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inverse_inertia", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "velocity", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "velocity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_velocity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sleep_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_sleeping", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_contact_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_contact_local_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_local_normal", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_local_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_object", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_shape_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_velocity_at_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_step", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "integrate_forces", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_space_state", _gmReturnType = CustomType "Physics2DDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Physics2DDirectSpaceState", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "intersect_point", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_results", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"},GodotArgument {_gaName = "exclude", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2147483647"}]},GodotMethod {_gmName = "intersect_ray", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "exclude", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2147483647"}]},GodotMethod {_gmName = "intersect_shape", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Physics2DShapeQueryParameters", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_results", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"}]},GodotMethod {_gmName = "cast_motion", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Physics2DShapeQueryParameters", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "collide_shape", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Physics2DShapeQueryParameters", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_results", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"}]},GodotMethod {_gmName = "get_rest_info", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Physics2DShapeQueryParameters", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Physics2DShapeQueryResult", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_result_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_result_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Physics2DTestMotionResult", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "motion", _gcType = CoreType "Vector2", _gcGetter = "get_motion", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "motion_remainder", _gcType = CoreType "Vector2", _gcGetter = "get_motion_remainder", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collision_point", _gcType = CoreType "Vector2", _gcGetter = "get_collision_point", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collision_normal", _gcType = CoreType "Vector2", _gcGetter = "get_collision_normal", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_velocity", _gcType = CoreType "Vector2", _gcGetter = "get_collider_velocity", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_id", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_id", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_rid", _gcType = CoreType "RID", _gcGetter = "get_collider_rid", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider", _gcType = CoreType "Object", _gcGetter = "get_collider", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_shape", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_shape", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_motion", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_motion_remainder", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_point", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_normal", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Physics2DShapeQueryParameters", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "exclude", _gcType = CoreType "Array", _gcGetter = "get_exclude", _gcSetter = "set_exclude", _gcIndex = -1},GodotProperty {_gpName = "margin", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = -1},GodotProperty {_gpName = "motion", _gcType = CoreType "Vector2", _gcGetter = "get_motion", _gcSetter = "set_motion", _gcIndex = -1},GodotProperty {_gpName = "shape_rid", _gcType = CoreType "RID", _gcGetter = "get_shape_rid", _gcSetter = "set_shape_rid", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform2D", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_shape_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_motion", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_motion", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exclude", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exclude", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PhysicsShapeQueryParameters", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1},GodotProperty {_gpName = "exclude", _gcType = CoreType "Array", _gcGetter = "get_exclude", _gcSetter = "set_exclude", _gcIndex = -1},GodotProperty {_gpName = "margin", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = -1},GodotProperty {_gpName = "shape_rid", _gcType = CoreType "RID", _gcGetter = "get_shape_rid", _gcSetter = "set_shape_rid", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_shape_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exclude", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exclude", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PhysicsDirectBodyState", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "step", _gcType = PrimitiveType FloatType, _gcGetter = "get_step", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "inverse_mass", _gcType = PrimitiveType FloatType, _gcGetter = "get_inverse_mass", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_total_angular_damp", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_total_linear_damp", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "inverse_inertia", _gcType = CoreType "Vector3", _gcGetter = "get_inverse_inertia", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "total_gravity", _gcType = CoreType "Vector3", _gcGetter = "get_total_gravity", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "center_of_mass", _gcType = CoreType "Vector3", _gcGetter = "get_center_of_mass", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "principal_inertia_axes", _gcType = CoreType "Basis", _gcGetter = "get_principal_inertia_axes", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "angular_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_angular_velocity", _gcSetter = "set_angular_velocity", _gcIndex = -1},GodotProperty {_gpName = "linear_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_linear_velocity", _gcSetter = "set_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "sleeping", _gcType = PrimitiveType BoolType, _gcGetter = "is_sleeping", _gcSetter = "set_sleep_state", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform2D", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_total_gravity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_center_of_mass", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_principal_inertia_axes", _gmReturnType = CoreType "Basis", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inverse_mass", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inverse_inertia", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "force", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "j", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_torqe_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "j", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_torque_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "j", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_sleep_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_sleeping", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_contact_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_contact_local_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_local_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_local_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_object", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_contact_collider_velocity_at_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contact_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_step", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "integrate_forces", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_space_state", _gmReturnType = CustomType "PhysicsDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PhysicsDirectSpaceState", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "intersect_ray", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "exclude", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "2147483647"}]},GodotMethod {_gmName = "intersect_shape", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "PhysicsShapeQueryParameters", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_results", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"}]},GodotMethod {_gmName = "cast_motion", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "PhysicsShapeQueryParameters", _gaDefaultValue = Nothing},GodotArgument {_gaName = "motion", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "collide_shape", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "PhysicsShapeQueryParameters", _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_results", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"}]},GodotMethod {_gmName = "get_rest_info", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "PhysicsShapeQueryParameters", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "PhysicsShapeQueryResult", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_result_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_result_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_result_object_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Node", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("DUPLICATE_GROUPS",2),("DUPLICATE_SCRIPTS",4),("NOTIFICATION_PAUSED",14),("NOTIFICATION_MOVED_IN_PARENT",12),("NOTIFICATION_UNPARENTED",19),("RPC_MODE_SLAVE",4),("PAUSE_MODE_PROCESS",2),("RPC_MODE_DISABLED",0),("NOTIFICATION_DRAG_END",22),("NOTIFICATION_PATH_CHANGED",23),("NOTIFICATION_PHYSICS_PROCESS",16),("NOTIFICATION_INTERNAL_PHYSICS_PROCESS",26),("DUPLICATE_USE_INSTANCING",8),("NOTIFICATION_ENTER_TREE",10),("NOTIFICATION_EXIT_TREE",11),("RPC_MODE_MASTER",3),("NOTIFICATION_PROCESS",17),("NOTIFICATION_INTERNAL_PROCESS",25),("PAUSE_MODE_STOP",1),("PAUSE_MODE_INHERIT",0),("NOTIFICATION_TRANSLATION_CHANGED",24),("NOTIFICATION_INSTANCED",20),("NOTIFICATION_UNPAUSED",15),("NOTIFICATION_PARENTED",18),("NOTIFICATION_DRAG_BEGIN",21),("DUPLICATE_SIGNALS",1),("RPC_MODE_SYNC",2),("RPC_MODE_REMOTE",1),("NOTIFICATION_READY",13)], _gcProperties = [GodotProperty {_gpName = "_import_path", _gcType = CoreType "NodePath", _gcGetter = "_get_import_path", _gcSetter = "_set_import_path", _gcIndex = -1},GodotProperty {_gpName = "pause_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_pause_mode", _gcSetter = "set_pause_mode", _gcIndex = -1},GodotProperty {_gpName = "editor/display_folded", _gcType = PrimitiveType BoolType, _gcGetter = "is_displayed_folded", _gcSetter = "set_display_folded", _gcIndex = -1},GodotProperty {_gpName = "name", _gcType = CoreType "String", _gcGetter = "get_name", _gcSetter = "set_name", _gcIndex = -1},GodotProperty {_gpName = "filename", _gcType = CoreType "String", _gcGetter = "get_filename", _gcSetter = "set_filename", _gcIndex = -1},GodotProperty {_gpName = "owner", _gcType = CustomType "Node", _gcGetter = "get_owner", _gcSetter = "set_owner", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "renamed", _gsArguments = []},GodotSignal {_gsName = "tree_entered", _gsArguments = []},GodotSignal {_gsName = "tree_exiting", _gsArguments = []},GodotSignal {_gsName = "tree_exited", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_process", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_physics_process", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_ready", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_unhandled_key_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEventKey", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_child_below_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "child_node", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "legible_unique_name", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_child", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "legible_unique_name", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "remove_child", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_child_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_children", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_child", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_node", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_parent", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_node", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "recursive", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"},GodotArgument {_gaName = "owned", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "has_node_and_resource", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_and_resource", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_inside_tree", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_a_parent_of", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_greater_than", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_path_to", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_to_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "persistent", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "remove_from_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_in_group", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_child", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "child_node", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_groups", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "raise", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_owner", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_owner", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_and_skip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "print_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_filename", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filename", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filename", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "propagate_notification", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "what", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "propagate_call", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "args", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "parent_first", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_physics_process", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_physics_process_delta_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_physics_processing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_process_delta_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_process", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_processing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_process_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_processing_input", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_process_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_processing_unhandled_input", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_process_unhandled_key_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_processing_unhandled_key_input", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pause_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pause_mode", _gmReturnType = EnumType "enum.Node::PauseMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "can_process", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "print_stray_nodes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_position_in_parent", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_display_folded", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fold", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_displayed_folded", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_process_internal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_processing_internal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_physics_process_internal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_physics_processing_internal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tree", _gmReturnType = CustomType "SceneTree", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "duplicate", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "15"}]},GodotMethod {_gmName = "replace_by", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "keep_data", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_scene_instance_load_placeholder", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "load_placeholder", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scene_instance_load_placeholder", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_viewport", _gmReturnType = CustomType "Viewport", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "queue_free", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "request_ready", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_network_master", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "recursive", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "get_network_master", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_network_master", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "rpc_config", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rset_config", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_import_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "import_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_import_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "rpc", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rpc_unreliable", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rpc_id", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rpc_unreliable_id", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rset_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rset_unreliable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rset_unreliable_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "PauseMode", _geValues = fromList [("PAUSE_MODE_PROCESS",2),("PAUSE_MODE_STOP",1),("PAUSE_MODE_INHERIT",0)]},GodotEnum {_geName = CustomType "DuplicateFlags", _geValues = fromList [("DUPLICATE_GROUPS",2),("DUPLICATE_SCRIPTS",4),("DUPLICATE_USE_INSTANCING",8),("DUPLICATE_SIGNALS",1)]},GodotEnum {_geName = CustomType "RPCMode", _geValues = fromList [("RPC_MODE_SLAVE",4),("RPC_MODE_DISABLED",0),("RPC_MODE_MASTER",3),("RPC_MODE_SYNC",2),("RPC_MODE_REMOTE",1)]}]},GodotClass {_gcName = "InstancePlaceholder", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_stored_values", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "with_order", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "replace_by_instance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "custom_scene", _gaType = CustomType "PackedScene", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "get_instance_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Viewport", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("CLEAR_MODE_ONLY_NEXT_FRAME",2),("DEBUG_DRAW_OVERDRAW",2),("UPDATE_ALWAYS",3),("RENDER_INFO_MATERIAL_CHANGES_IN_FRAME",2),("USAGE_3D",2),("MSAA_4X",2),("SHADOW_ATLAS_QUADRANT_SUBDIV_1024",6),("SHADOW_ATLAS_QUADRANT_SUBDIV_16",3),("RENDER_INFO_SHADER_CHANGES_IN_FRAME",3),("RENDER_INFO_MAX",6),("CLEAR_MODE_NEVER",1),("SHADOW_ATLAS_QUADRANT_SUBDIV_64",4),("USAGE_3D_NO_EFFECTS",3),("RENDER_INFO_OBJECTS_IN_FRAME",0),("MSAA_2X",1),("SHADOW_ATLAS_QUADRANT_SUBDIV_256",5),("SHADOW_ATLAS_QUADRANT_SUBDIV_MAX",7),("UPDATE_DISABLED",0),("MSAA_DISABLED",0),("DEBUG_DRAW_DISABLED",0),("MSAA_8X",3),("USAGE_2D",0),("RENDER_INFO_VERTICES_IN_FRAME",1),("SHADOW_ATLAS_QUADRANT_SUBDIV_DISABLED",0),("DEBUG_DRAW_UNSHADED",1),("DEBUG_DRAW_WIREFRAME",3),("RENDER_INFO_DRAW_CALLS_IN_FRAME",5),("UPDATE_WHEN_VISIBLE",2),("CLEAR_MODE_ALWAYS",0),("SHADOW_ATLAS_QUADRANT_SUBDIV_1",1),("MSAA_16X",4),("SHADOW_ATLAS_QUADRANT_SUBDIV_4",2),("USAGE_2D_NO_SAMPLING",1),("UPDATE_ONCE",1),("RENDER_INFO_SURFACE_CHANGES_IN_FRAME",4)], _gcProperties = [GodotProperty {_gpName = "arvr", _gcType = PrimitiveType BoolType, _gcGetter = "use_arvr", _gcSetter = "set_use_arvr", _gcIndex = -1},GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "own_world", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_own_world", _gcSetter = "set_use_own_world", _gcIndex = -1},GodotProperty {_gpName = "world", _gcType = CustomType "World", _gcGetter = "get_world", _gcSetter = "set_world", _gcIndex = -1},GodotProperty {_gpName = "world_2d", _gcType = CustomType "World2D", _gcGetter = "get_world_2d", _gcSetter = "set_world_2d", _gcIndex = -1},GodotProperty {_gpName = "transparent_bg", _gcType = PrimitiveType BoolType, _gcGetter = "has_transparent_background", _gcSetter = "set_transparent_background", _gcIndex = -1},GodotProperty {_gpName = "msaa", _gcType = PrimitiveType IntType, _gcGetter = "get_msaa", _gcSetter = "set_msaa", _gcIndex = -1},GodotProperty {_gpName = "hdr", _gcType = PrimitiveType BoolType, _gcGetter = "get_hdr", _gcSetter = "set_hdr", _gcIndex = -1},GodotProperty {_gpName = "disable_3d", _gcType = PrimitiveType BoolType, _gcGetter = "is_3d_disabled", _gcSetter = "set_disable_3d", _gcIndex = -1},GodotProperty {_gpName = "usage", _gcType = PrimitiveType IntType, _gcGetter = "get_usage", _gcSetter = "set_usage", _gcIndex = -1},GodotProperty {_gpName = "debug_draw", _gcType = PrimitiveType IntType, _gcGetter = "get_debug_draw", _gcSetter = "set_debug_draw", _gcIndex = -1},GodotProperty {_gpName = "render_target_v_flip", _gcType = PrimitiveType BoolType, _gcGetter = "get_vflip", _gcSetter = "set_vflip", _gcIndex = -1},GodotProperty {_gpName = "render_target_clear_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_clear_mode", _gcSetter = "set_clear_mode", _gcIndex = -1},GodotProperty {_gpName = "render_target_update_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_update_mode", _gcSetter = "set_update_mode", _gcIndex = -1},GodotProperty {_gpName = "audio_listener_enable_2d", _gcType = PrimitiveType BoolType, _gcGetter = "is_audio_listener_2d", _gcSetter = "set_as_audio_listener_2d", _gcIndex = -1},GodotProperty {_gpName = "audio_listener_enable_3d", _gcType = PrimitiveType BoolType, _gcGetter = "is_audio_listener", _gcSetter = "set_as_audio_listener", _gcIndex = -1},GodotProperty {_gpName = "physics_object_picking", _gcType = PrimitiveType BoolType, _gcGetter = "get_physics_object_picking", _gcSetter = "set_physics_object_picking", _gcIndex = -1},GodotProperty {_gpName = "gui_disable_input", _gcType = PrimitiveType BoolType, _gcGetter = "is_input_disabled", _gcSetter = "set_disable_input", _gcIndex = -1},GodotProperty {_gpName = "gui_snap_controls_to_pixels", _gcType = PrimitiveType BoolType, _gcGetter = "is_snap_controls_to_pixels_enabled", _gcSetter = "set_snap_controls_to_pixels", _gcIndex = -1},GodotProperty {_gpName = "shadow_atlas_size", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_atlas_size", _gcSetter = "set_shadow_atlas_size", _gcIndex = -1},GodotProperty {_gpName = "shadow_atlas_quad_0", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_atlas_quadrant_subdiv", _gcSetter = "set_shadow_atlas_quadrant_subdiv", _gcIndex = 0},GodotProperty {_gpName = "shadow_atlas_quad_1", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_atlas_quadrant_subdiv", _gcSetter = "set_shadow_atlas_quadrant_subdiv", _gcIndex = 1},GodotProperty {_gpName = "shadow_atlas_quad_2", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_atlas_quadrant_subdiv", _gcSetter = "set_shadow_atlas_quadrant_subdiv", _gcIndex = 2},GodotProperty {_gpName = "shadow_atlas_quad_3", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_atlas_quadrant_subdiv", _gcSetter = "set_shadow_atlas_quadrant_subdiv", _gcIndex = 3},GodotProperty {_gpName = "canvas_transform", _gcType = CoreType "Transform2D", _gcGetter = "get_canvas_transform", _gcSetter = "set_canvas_transform", _gcIndex = -1},GodotProperty {_gpName = "global_canvas_transform", _gcType = CoreType "Transform2D", _gcGetter = "get_global_canvas_transform", _gcSetter = "set_global_canvas_transform", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "size_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_use_arvr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "use", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "use_arvr", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_world_2d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world_2d", _gaType = CustomType "World2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_world_2d", _gmReturnType = CustomType "World2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_world_2d", _gmReturnType = CustomType "World2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_world", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world", _gaType = CustomType "World", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_world", _gmReturnType = CustomType "World", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_world", _gmReturnType = CustomType "World", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_canvas_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_canvas_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_canvas_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_canvas_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_final_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visible_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transparent_background", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_transparent_background", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_vp_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_vp_input_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_vp_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_size_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(-1, -1)"},GodotArgument {_gaName = "margin", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "get_size_override", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_size_override_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size_override_stretch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_size_override_stretch_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vflip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vflip", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clear_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clear_mode", _gmReturnType = EnumType "enum.Viewport::ClearMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_mode", _gmReturnType = EnumType "enum.Viewport::UpdateMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_msaa", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "msaa", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_msaa", _gmReturnType = EnumType "enum.Viewport::MSAA", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hdr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_hdr", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_usage", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "usage", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_usage", _gmReturnType = EnumType "enum.Viewport::Usage", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_debug_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "debug_draw", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_debug_draw", _gmReturnType = EnumType "enum.Viewport::DebugDraw", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_render_info", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "info", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "ViewportTexture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_physics_object_picking", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_physics_object_picking", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_viewport_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "update_worlds", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_own_world", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_own_world", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_camera", _gmReturnType = CustomType "Camera", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_as_audio_listener", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_audio_listener", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_as_audio_listener_2d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_audio_listener_2d", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attach_to_screen_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mouse_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "warp_mouse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "gui_has_modal_stack", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "gui_get_drag_data", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disable_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_input_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disable_3d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_3d_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gui_show_tooltip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gui_remove_focus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_atlas_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_atlas_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_snap_controls_to_pixels", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_snap_controls_to_pixels_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_atlas_quadrant_subdiv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "quadrant", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "subdiv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_atlas_quadrant_subdiv", _gmReturnType = EnumType "enum.Viewport::ShadowAtlasQuadrantSubdiv", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "quadrant", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "ClearMode", _geValues = fromList [("CLEAR_MODE_ONLY_NEXT_FRAME",2),("CLEAR_MODE_NEVER",1),("CLEAR_MODE_ALWAYS",0)]},GodotEnum {_geName = CustomType "RenderInfo", _geValues = fromList [("RENDER_INFO_MATERIAL_CHANGES_IN_FRAME",2),("RENDER_INFO_SHADER_CHANGES_IN_FRAME",3),("RENDER_INFO_MAX",6),("RENDER_INFO_OBJECTS_IN_FRAME",0),("RENDER_INFO_VERTICES_IN_FRAME",1),("RENDER_INFO_DRAW_CALLS_IN_FRAME",5),("RENDER_INFO_SURFACE_CHANGES_IN_FRAME",4)]},GodotEnum {_geName = CustomType "Usage", _geValues = fromList [("USAGE_3D",2),("USAGE_3D_NO_EFFECTS",3),("USAGE_2D",0),("USAGE_2D_NO_SAMPLING",1)]},GodotEnum {_geName = CustomType "DebugDraw", _geValues = fromList [("DEBUG_DRAW_OVERDRAW",2),("DEBUG_DRAW_DISABLED",0),("DEBUG_DRAW_UNSHADED",1),("DEBUG_DRAW_WIREFRAME",3)]},GodotEnum {_geName = CustomType "ShadowAtlasQuadrantSubdiv", _geValues = fromList [("SHADOW_ATLAS_QUADRANT_SUBDIV_1024",6),("SHADOW_ATLAS_QUADRANT_SUBDIV_16",3),("SHADOW_ATLAS_QUADRANT_SUBDIV_64",4),("SHADOW_ATLAS_QUADRANT_SUBDIV_256",5),("SHADOW_ATLAS_QUADRANT_SUBDIV_MAX",7),("SHADOW_ATLAS_QUADRANT_SUBDIV_DISABLED",0),("SHADOW_ATLAS_QUADRANT_SUBDIV_1",1),("SHADOW_ATLAS_QUADRANT_SUBDIV_4",2)]},GodotEnum {_geName = CustomType "UpdateMode", _geValues = fromList [("UPDATE_ALWAYS",3),("UPDATE_DISABLED",0),("UPDATE_WHEN_VISIBLE",2),("UPDATE_ONCE",1)]},GodotEnum {_geName = CustomType "MSAA", _geValues = fromList [("MSAA_4X",2),("MSAA_2X",1),("MSAA_DISABLED",0),("MSAA_8X",3),("MSAA_16X",4)]}]},GodotClass {_gcName = "World", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "environment", _gcType = CustomType "Environment", _gcGetter = "get_environment", _gcSetter = "set_environment", _gcIndex = -1},GodotProperty {_gpName = "fallback_environment", _gcType = CustomType "Environment", _gcGetter = "get_fallback_environment", _gcSetter = "set_fallback_environment", _gcIndex = -1},GodotProperty {_gpName = "space", _gcType = CoreType "RID", _gcGetter = "get_space", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "scenario", _gcType = CoreType "RID", _gcGetter = "get_scenario", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "direct_space_state", _gcType = CustomType "PhysicsDirectSpaceState", _gcGetter = "get_direct_space_state", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scenario", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CustomType "Environment", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_environment", _gmReturnType = CustomType "Environment", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fallback_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CustomType "Environment", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fallback_environment", _gmReturnType = CustomType "Environment", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_direct_space_state", _gmReturnType = CustomType "PhysicsDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "World2D", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "canvas", _gcType = CoreType "RID", _gcGetter = "get_canvas", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "space", _gcType = CoreType "RID", _gcGetter = "get_space", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "direct_space_state", _gcType = CustomType "Physics2DDirectSpaceState", _gcGetter = "get_direct_space_state", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_canvas", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_space", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_direct_space_state", _gmReturnType = CustomType "Physics2DDirectSpaceState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Texture", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("FLAG_VIDEO_SURFACE",4096),("FLAGS_DEFAULT",7),("FLAG_REPEAT",2),("FLAG_CONVERT_TO_LINEAR",16),("FLAG_ANISOTROPIC_FILTER",8),("FLAG_MIPMAPS",1),("FLAG_FILTER",4),("FLAG_MIRRORED_REPEAT",32)], _gcProperties = [GodotProperty {_gpName = "flags", _gcType = PrimitiveType IntType, _gcGetter = "get_flags", _gcSetter = "set_flags", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_alpha", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "draw_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "draw_rect_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "clip_uv", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "get_data", _gmReturnType = CustomType "Image", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Flags", _geValues = fromList [("FLAG_VIDEO_SURFACE",4096),("FLAGS_DEFAULT",7),("FLAG_REPEAT",2),("FLAG_CONVERT_TO_LINEAR",16),("FLAG_ANISOTROPIC_FILTER",8),("FLAG_MIPMAPS",1),("FLAG_FILTER",4),("FLAG_MIRRORED_REPEAT",32)]}]},GodotClass {_gcName = "ViewportTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "viewport_path", _gcType = CoreType "NodePath", _gcGetter = "get_viewport_path_in_scene", _gcSetter = "set_viewport_path_in_scene", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_viewport_path_in_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_viewport_path_in_scene", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "HTTPRequest", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("RESULT_DOWNLOAD_FILE_CANT_OPEN",9),("RESULT_SUCCESS",0),("RESULT_NO_RESPONSE",6),("RESULT_REQUEST_FAILED",8),("RESULT_CONNECTION_ERROR",4),("RESULT_CANT_CONNECT",2),("RESULT_CHUNKED_BODY_SIZE_MISMATCH",1),("RESULT_BODY_SIZE_LIMIT_EXCEEDED",7),("RESULT_REDIRECT_LIMIT_REACHED",11),("RESULT_SSL_HANDSHAKE_ERROR",5),("RESULT_CANT_RESOLVE",3),("RESULT_DOWNLOAD_FILE_WRITE_ERROR",10)], _gcProperties = [GodotProperty {_gpName = "download_file", _gcType = CoreType "String", _gcGetter = "get_download_file", _gcSetter = "set_download_file", _gcIndex = -1},GodotProperty {_gpName = "use_threads", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_threads", _gcSetter = "set_use_threads", _gcIndex = -1},GodotProperty {_gpName = "body_size_limit", _gcType = PrimitiveType IntType, _gcGetter = "get_body_size_limit", _gcSetter = "set_body_size_limit", _gcIndex = -1},GodotProperty {_gpName = "max_redirects", _gcType = PrimitiveType IntType, _gcGetter = "get_max_redirects", _gcSetter = "set_max_redirects", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "request_completed", _gsArguments = [GodotArgument {_gaName = "result", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "response_code", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "headers", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "request", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "url", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "custom_headers", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "ssl_validate_domain", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"},GodotArgument {_gaName = "method", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "request_data", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "cancel_request", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_http_client_status", _gmReturnType = EnumType "enum.HTTPClient::Status", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_threads", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_threads", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_body_size_limit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bytes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_body_size_limit", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_redirects", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_redirects", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_download_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_download_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_downloaded_bytes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_body_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_redirect_request", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_request_done", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Result", _geValues = fromList [("RESULT_DOWNLOAD_FILE_CANT_OPEN",9),("RESULT_SUCCESS",0),("RESULT_NO_RESPONSE",6),("RESULT_REQUEST_FAILED",8),("RESULT_CONNECTION_ERROR",4),("RESULT_CANT_CONNECT",2),("RESULT_CHUNKED_BODY_SIZE_MISMATCH",1),("RESULT_BODY_SIZE_LIMIT_EXCEEDED",7),("RESULT_REDIRECT_LIMIT_REACHED",11),("RESULT_SSL_HANDSHAKE_ERROR",5),("RESULT_CANT_RESOLVE",3),("RESULT_DOWNLOAD_FILE_WRITE_ERROR",10)]}]},GodotClass {_gcName = "Timer", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("TIMER_PROCESS_PHYSICS",0),("TIMER_PROCESS_IDLE",1)], _gcProperties = [GodotProperty {_gpName = "process_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_timer_process_mode", _gcSetter = "set_timer_process_mode", _gcIndex = -1},GodotProperty {_gpName = "wait_time", _gcType = PrimitiveType FloatType, _gcGetter = "get_wait_time", _gcSetter = "set_wait_time", _gcIndex = -1},GodotProperty {_gpName = "one_shot", _gcType = PrimitiveType BoolType, _gcGetter = "is_one_shot", _gcSetter = "set_one_shot", _gcIndex = -1},GodotProperty {_gpName = "autostart", _gcType = PrimitiveType BoolType, _gcGetter = "has_autostart", _gcSetter = "set_autostart", _gcIndex = -1},GodotProperty {_gpName = "paused", _gcType = PrimitiveType BoolType, _gcGetter = "is_paused", _gcSetter = "set_paused", _gcIndex = -1},GodotProperty {_gpName = "time_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_time_left", _gcSetter = "", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "timeout", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_wait_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_wait_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_one_shot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_one_shot", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autostart", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_autostart", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "start", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_paused", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "paused", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_paused", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_stopped", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_time_left", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_timer_process_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_timer_process_mode", _gmReturnType = EnumType "enum.Timer::TimerProcessMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "TimerProcessMode", _geValues = fromList [("TIMER_PROCESS_PHYSICS",0),("TIMER_PROCESS_IDLE",1)]}]},GodotClass {_gcName = "CanvasLayer", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "layer", _gcType = PrimitiveType IntType, _gcGetter = "get_layer", _gcSetter = "set_layer", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "rotation_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_rotation_degrees", _gcSetter = "set_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "rotation", _gcType = PrimitiveType FloatType, _gcGetter = "get_rotation", _gcSetter = "set_rotation", _gcIndex = -1},GodotProperty {_gpName = "scale", _gcType = CoreType "Vector2", _gcGetter = "get_scale", _gcSetter = "set_scale", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform2D", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1},GodotProperty {_gpName = "custom_viewport", _gcType = CustomType "Viewport", _gcGetter = "get_custom_viewport", _gcSetter = "set_custom_viewport", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radians", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rotation_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_custom_viewport", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_viewport", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_world_2d", _gmReturnType = CustomType "World2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CanvasItem", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_EXIT_CANVAS",33),("NOTIFICATION_ENTER_CANVAS",32),("NOTIFICATION_TRANSFORM_CHANGED",29),("BLEND_MODE_ADD",1),("BLEND_MODE_MIX",0),("NOTIFICATION_DRAW",30),("BLEND_MODE_MUL",3),("BLEND_MODE_PREMULT_ALPHA",4),("BLEND_MODE_SUB",2),("NOTIFICATION_VISIBILITY_CHANGED",31)], _gcProperties = [GodotProperty {_gpName = "visible", _gcType = PrimitiveType BoolType, _gcGetter = "is_visible", _gcSetter = "set_visible", _gcIndex = -1},GodotProperty {_gpName = "modulate", _gcType = CoreType "Color", _gcGetter = "get_modulate", _gcSetter = "set_modulate", _gcIndex = -1},GodotProperty {_gpName = "self_modulate", _gcType = CoreType "Color", _gcGetter = "get_self_modulate", _gcSetter = "set_self_modulate", _gcIndex = -1},GodotProperty {_gpName = "show_behind_parent", _gcType = PrimitiveType BoolType, _gcGetter = "is_draw_behind_parent_enabled", _gcSetter = "set_draw_behind_parent", _gcIndex = -1},GodotProperty {_gpName = "show_on_top", _gcType = PrimitiveType BoolType, _gcGetter = "_is_on_top", _gcSetter = "_set_on_top", _gcIndex = -1},GodotProperty {_gpName = "light_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_light_mask", _gcSetter = "set_light_mask", _gcIndex = -1},GodotProperty {_gpName = "material", _gcType = CustomType "ShaderMaterial,CanvasItemMaterial", _gcGetter = "get_material", _gcSetter = "set_material", _gcIndex = -1},GodotProperty {_gpName = "use_parent_material", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_parent_material", _gcSetter = "set_use_parent_material", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "item_rect_changed", _gsArguments = []},GodotSignal {_gsName = "draw", _gsArguments = []},GodotSignal {_gsName = "visibility_changed", _gsArguments = []},GodotSignal {_gsName = "hide", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_toplevel_raise_self", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_set_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "state", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_edit_get_state", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_edit_get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_use_position", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_set_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_edit_get_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_use_rect", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_get_item_and_children_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_set_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_edit_get_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_use_rotation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_set_pivot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pivot", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_edit_get_pivot", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_edit_use_pivot", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_canvas_item", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_visible_in_tree", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "show", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "hide", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_as_toplevel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_set_as_toplevel", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_light_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_light_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_modulate", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_self_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "self_modulate", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_self_modulate", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_behind_parent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_draw_behind_parent_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_on_top", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "on_top", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_on_top", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "draw_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_polyline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_polyline_colors", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_multiline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_multiline_colors", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "filled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "draw_circle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "draw_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "draw_texture_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "draw_texture_rect_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "src_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "clip_uv", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "draw_style_box", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "style_box", _gaType = CustomType "StyleBox", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "draw_primitive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "draw_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_colored_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "draw_string", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "clip_w", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "draw_char", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "char", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "next", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"}]},GodotMethod {_gmName = "draw_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rotation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "draw_set_transform_matrix", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_global_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_global_transform_with_canvas", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_viewport_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_viewport_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_canvas_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_local_mouse_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_global_mouse_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_canvas", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_world_2d", _gmReturnType = CustomType "World2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_parent_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_parent_material", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_notify_local_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_local_transform_notification_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_notify_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_transform_notification_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_canvas_position_local", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "make_input_local", _gmReturnType = CustomType "InputEvent", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "BlendMode", _geValues = fromList [("BLEND_MODE_ADD",1),("BLEND_MODE_MIX",0),("BLEND_MODE_MUL",3),("BLEND_MODE_PREMULT_ALPHA",4),("BLEND_MODE_SUB",2)]}]},GodotClass {_gcName = "Node2D", _gcBaseClass = "CanvasItem", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1},GodotProperty {_gpName = "rotation", _gcType = PrimitiveType FloatType, _gcGetter = "get_rotation", _gcSetter = "set_rotation", _gcIndex = -1},GodotProperty {_gpName = "rotation_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_rotation_degrees", _gcSetter = "set_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "scale", _gcType = CoreType "Vector2", _gcGetter = "get_scale", _gcSetter = "set_scale", _gcIndex = -1},GodotProperty {_gpName = "transform", _gcType = CoreType "Transform2D", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1},GodotProperty {_gpName = "global_position", _gcType = PrimitiveType FloatType, _gcGetter = "get_global_position", _gcSetter = "set_global_position", _gcIndex = -1},GodotProperty {_gpName = "global_rotation", _gcType = PrimitiveType FloatType, _gcGetter = "get_global_rotation", _gcSetter = "set_global_rotation", _gcIndex = -1},GodotProperty {_gpName = "global_rotation_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_global_rotation_degrees", _gcSetter = "set_global_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "global_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_global_scale", _gcSetter = "set_global_scale", _gcIndex = -1},GodotProperty {_gpName = "global_transform", _gcType = CoreType "Transform2D", _gcGetter = "get_global_transform", _gcSetter = "set_global_transform", _gcIndex = -1},GodotProperty {_gpName = "z_index", _gcType = PrimitiveType IntType, _gcGetter = "get_z_index", _gcSetter = "set_z_index", _gcIndex = -1},GodotProperty {_gpName = "z_as_relative", _gcType = PrimitiveType BoolType, _gcGetter = "is_z_relative", _gcSetter = "set_z_as_relative", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radians", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rotation_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "rotate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radians", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_local_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "scaled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "move_local_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "scaled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "translate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "global_translate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_global_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radians", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_rotation_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_global_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "look_at", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angle_to", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "to_local", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "global_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "to_global", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_z_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "z_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_z_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_z_as_relative", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_z_relative", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_relative_transform_to_parent", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "parent", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "CanvasModulate", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ResourcePreloader", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "resources", _gcType = CoreType "Array", _gcGetter = "_get_resources", _gcSetter = "_set_resources", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_set_resources", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_resources", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_resource", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_resource", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_resource", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "newname", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_resource", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resource", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resource_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ButtonGroup", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_pressed_button", _gmReturnType = CustomType "BaseButton", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Control", _gcBaseClass = "CanvasItem", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_MOUSE_EXIT",42),("CURSOR_MOVE",13),("NOTIFICATION_MOUSE_ENTER",41),("PRESET_MODE_KEEP_WIDTH",1),("CURSOR_ARROW",0),("GROW_DIRECTION_BEGIN",0),("CURSOR_IBEAM",1),("CURSOR_HSPLIT",15),("FOCUS_ALL",2),("PRESET_BOTTOM_RIGHT",3),("CURSOR_DRAG",6),("PRESET_TOP_LEFT",0),("PRESET_CENTER_TOP",5),("FOCUS_CLICK",1),("CURSOR_BUSY",5),("SIZE_SHRINK_CENTER",4),("CURSOR_CROSS",3),("CURSOR_WAIT",4),("PRESET_TOP_RIGHT",1),("NOTIFICATION_THEME_CHANGED",45),("CURSOR_BDIAGSIZE",11),("PRESET_HCENTER_WIDE",14),("ANCHOR_BEGIN",0),("MOUSE_FILTER_IGNORE",2),("PRESET_TOP_WIDE",10),("PRESET_MODE_MINSIZE",0),("NOTIFICATION_FOCUS_ENTER",43),("SIZE_EXPAND_FILL",3),("CURSOR_HELP",16),("NOTIFICATION_RESIZED",40),("SIZE_EXPAND",2),("CURSOR_CAN_DROP",7),("PRESET_MODE_KEEP_SIZE",3),("GROW_DIRECTION_END",1),("PRESET_VCENTER_WIDE",13),("SIZE_SHRINK_END",8),("PRESET_RIGHT_WIDE",11),("SIZE_FILL",1),("PRESET_BOTTOM_WIDE",12),("CURSOR_POINTING_HAND",2),("PRESET_MODE_KEEP_HEIGHT",2),("CURSOR_FDIAGSIZE",12),("PRESET_WIDE",15),("PRESET_CENTER_LEFT",4),("MOUSE_FILTER_PASS",1),("NOTIFICATION_MODAL_CLOSE",46),("CURSOR_HSIZE",10),("PRESET_CENTER_RIGHT",6),("CURSOR_FORBIDDEN",8),("CURSOR_VSIZE",9),("PRESET_CENTER_BOTTOM",7),("NOTIFICATION_FOCUS_EXIT",44),("PRESET_LEFT_WIDE",9),("ANCHOR_END",1),("MOUSE_FILTER_STOP",0),("PRESET_BOTTOM_LEFT",2),("PRESET_CENTER",8),("CURSOR_VSPLIT",14),("FOCUS_NONE",0)], _gcProperties = [GodotProperty {_gpName = "anchor_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_anchor", _gcSetter = "_set_anchor", _gcIndex = 0},GodotProperty {_gpName = "anchor_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_anchor", _gcSetter = "_set_anchor", _gcIndex = 1},GodotProperty {_gpName = "anchor_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_anchor", _gcSetter = "_set_anchor", _gcIndex = 2},GodotProperty {_gpName = "anchor_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_anchor", _gcSetter = "_set_anchor", _gcIndex = 3},GodotProperty {_gpName = "margin_left", _gcType = PrimitiveType IntType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = 0},GodotProperty {_gpName = "margin_top", _gcType = PrimitiveType IntType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = 1},GodotProperty {_gpName = "margin_right", _gcType = PrimitiveType IntType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = 2},GodotProperty {_gpName = "margin_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = 3},GodotProperty {_gpName = "grow_horizontal", _gcType = PrimitiveType IntType, _gcGetter = "get_h_grow_direction", _gcSetter = "set_h_grow_direction", _gcIndex = -1},GodotProperty {_gpName = "grow_vertical", _gcType = PrimitiveType IntType, _gcGetter = "get_v_grow_direction", _gcSetter = "set_v_grow_direction", _gcIndex = -1},GodotProperty {_gpName = "rect_position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "set_position", _gcIndex = -1},GodotProperty {_gpName = "rect_global_position", _gcType = CoreType "Vector2", _gcGetter = "get_global_position", _gcSetter = "set_global_position", _gcIndex = -1},GodotProperty {_gpName = "rect_size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "rect_min_size", _gcType = CoreType "Vector2", _gcGetter = "get_custom_minimum_size", _gcSetter = "set_custom_minimum_size", _gcIndex = -1},GodotProperty {_gpName = "rect_rotation", _gcType = PrimitiveType FloatType, _gcGetter = "get_rotation_degrees", _gcSetter = "set_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "rect_scale", _gcType = CoreType "Vector2", _gcGetter = "get_scale", _gcSetter = "set_scale", _gcIndex = -1},GodotProperty {_gpName = "rect_pivot_offset", _gcType = CoreType "Vector2", _gcGetter = "get_pivot_offset", _gcSetter = "set_pivot_offset", _gcIndex = -1},GodotProperty {_gpName = "rect_clip_content", _gcType = PrimitiveType BoolType, _gcGetter = "is_clipping_contents", _gcSetter = "set_clip_contents", _gcIndex = -1},GodotProperty {_gpName = "hint_tooltip", _gcType = CoreType "String", _gcGetter = "_get_tooltip", _gcSetter = "set_tooltip", _gcIndex = -1},GodotProperty {_gpName = "focus_neighbour_left", _gcType = CoreType "NodePath", _gcGetter = "get_focus_neighbour", _gcSetter = "set_focus_neighbour", _gcIndex = 0},GodotProperty {_gpName = "focus_neighbour_top", _gcType = CoreType "NodePath", _gcGetter = "get_focus_neighbour", _gcSetter = "set_focus_neighbour", _gcIndex = 1},GodotProperty {_gpName = "focus_neighbour_right", _gcType = CoreType "NodePath", _gcGetter = "get_focus_neighbour", _gcSetter = "set_focus_neighbour", _gcIndex = 2},GodotProperty {_gpName = "focus_neighbour_bottom", _gcType = CoreType "NodePath", _gcGetter = "get_focus_neighbour", _gcSetter = "set_focus_neighbour", _gcIndex = 3},GodotProperty {_gpName = "focus_next", _gcType = CoreType "NodePath", _gcGetter = "get_focus_next", _gcSetter = "set_focus_next", _gcIndex = -1},GodotProperty {_gpName = "focus_previous", _gcType = CoreType "NodePath", _gcGetter = "get_focus_previous", _gcSetter = "set_focus_previous", _gcIndex = -1},GodotProperty {_gpName = "focus_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_focus_mode", _gcSetter = "set_focus_mode", _gcIndex = -1},GodotProperty {_gpName = "mouse_filter", _gcType = PrimitiveType IntType, _gcGetter = "get_mouse_filter", _gcSetter = "set_mouse_filter", _gcIndex = -1},GodotProperty {_gpName = "mouse_default_cursor_shape", _gcType = PrimitiveType IntType, _gcGetter = "get_default_cursor_shape", _gcSetter = "set_default_cursor_shape", _gcIndex = -1},GodotProperty {_gpName = "size_flags_horizontal", _gcType = PrimitiveType IntType, _gcGetter = "get_h_size_flags", _gcSetter = "set_h_size_flags", _gcIndex = -1},GodotProperty {_gpName = "size_flags_vertical", _gcType = PrimitiveType IntType, _gcGetter = "get_v_size_flags", _gcSetter = "set_v_size_flags", _gcIndex = -1},GodotProperty {_gpName = "size_flags_stretch_ratio", _gcType = PrimitiveType FloatType, _gcGetter = "get_stretch_ratio", _gcSetter = "set_stretch_ratio", _gcIndex = -1},GodotProperty {_gpName = "theme", _gcType = CustomType "Theme", _gcGetter = "get_theme", _gcSetter = "set_theme", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "mouse_exited", _gsArguments = []},GodotSignal {_gsName = "gui_input", _gsArguments = [GodotArgument {_gaName = "ev", _gaType = CustomType "InputEvent", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "modal_closed", _gsArguments = []},GodotSignal {_gsName = "focus_entered", _gsArguments = []},GodotSignal {_gsName = "resized", _gsArguments = []},GodotSignal {_gsName = "minimum_size_changed", _gsArguments = []},GodotSignal {_gsName = "mouse_entered", _gsArguments = []},GodotSignal {_gsName = "size_flags_changed", _gsArguments = []},GodotSignal {_gsName = "focus_exited", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_minimum_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_drag_data", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "can_drop_data", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "drop_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_point", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_size_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_minimum_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "accept_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_minimum_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_combined_minimum_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_anchors_preset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "preset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "keep_margin", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_margins_preset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "preset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "resize_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "set_anchors_and_margins_preset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "preset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "resize_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "set_anchor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "anchor", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "keep_margin", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "push_opposite_anchor", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "_set_anchor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "anchor", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_anchor", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_anchor_and_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "anchor", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "push_opposite_anchor", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_minimum_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_global_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radians", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_pivot_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pivot_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_begin", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_end", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rotation_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pivot_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_custom_minimum_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_parent_area_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_global_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_global_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "show_modal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exclusive", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_focus_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_focus_mode", _gmReturnType = EnumType "enum.Control::FocusMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_focus", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "grab_focus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "release_focus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_focus_owner", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_size_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_size_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stretch_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stretch_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_size_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_size_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_theme", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "theme", _gaType = CustomType "Theme", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_theme", _gmReturnType = CustomType "Theme", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_icon_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_shader_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shader", _gaType = CustomType "Shader", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_stylebox_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "stylebox", _gaType = CustomType "StyleBox", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_font_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_color_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_constant_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "constant", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_stylebox", _gmReturnType = CustomType "StyleBox", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_font", _gmReturnType = CustomType "Font", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_constant", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "has_icon_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_shader_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_stylebox_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_font_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_color_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_constant_override", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_icon", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "has_stylebox", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "has_font", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "has_color", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "has_constant", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_parent_control", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_grow_direction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "direction", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_grow_direction", _gmReturnType = EnumType "enum.Control::GrowDirection", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_grow_direction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "direction", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_grow_direction", _gmReturnType = EnumType "enum.Control::GrowDirection", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tooltip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tooltip", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "at_position", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "_get_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_default_cursor_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_cursor_shape", _gmReturnType = EnumType "enum.Control::CursorShape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_cursor_shape", _gmReturnType = EnumType "enum.Control::CursorShape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "set_focus_neighbour", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "neighbour", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_focus_neighbour", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_focus_next", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "next", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_focus_next", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_focus_previous", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "previous", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_focus_previous", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "force_drag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "preview", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_mouse_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mouse_filter", _gmReturnType = EnumType "enum.Control::MouseFilter", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clip_contents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_clipping_contents", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "grab_click_focus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_drag_forwarding", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_drag_preview", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "warp_mouse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "minimum_size_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_theme_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_font_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Anchor", _geValues = fromList [("ANCHOR_BEGIN",0),("ANCHOR_END",1)]},GodotEnum {_geName = CustomType "FocusMode", _geValues = fromList [("FOCUS_ALL",2),("FOCUS_CLICK",1),("FOCUS_NONE",0)]},GodotEnum {_geName = CustomType "LayoutPresetMode", _geValues = fromList [("PRESET_MODE_KEEP_WIDTH",1),("PRESET_MODE_MINSIZE",0),("PRESET_MODE_KEEP_SIZE",3),("PRESET_MODE_KEEP_HEIGHT",2)]},GodotEnum {_geName = CustomType "MouseFilter", _geValues = fromList [("MOUSE_FILTER_IGNORE",2),("MOUSE_FILTER_PASS",1),("MOUSE_FILTER_STOP",0)]},GodotEnum {_geName = CustomType "CursorShape", _geValues = fromList [("CURSOR_MOVE",13),("CURSOR_ARROW",0),("CURSOR_IBEAM",1),("CURSOR_HSPLIT",15),("CURSOR_DRAG",6),("CURSOR_BUSY",5),("CURSOR_CROSS",3),("CURSOR_WAIT",4),("CURSOR_BDIAGSIZE",11),("CURSOR_HELP",16),("CURSOR_CAN_DROP",7),("CURSOR_POINTING_HAND",2),("CURSOR_FDIAGSIZE",12),("CURSOR_HSIZE",10),("CURSOR_FORBIDDEN",8),("CURSOR_VSIZE",9),("CURSOR_VSPLIT",14)]},GodotEnum {_geName = CustomType "GrowDirection", _geValues = fromList [("GROW_DIRECTION_BEGIN",0),("GROW_DIRECTION_END",1)]},GodotEnum {_geName = CustomType "SizeFlags", _geValues = fromList [("SIZE_SHRINK_CENTER",4),("SIZE_EXPAND_FILL",3),("SIZE_EXPAND",2),("SIZE_SHRINK_END",8),("SIZE_FILL",1)]},GodotEnum {_geName = CustomType "LayoutPreset", _geValues = fromList [("PRESET_BOTTOM_RIGHT",3),("PRESET_TOP_LEFT",0),("PRESET_CENTER_TOP",5),("PRESET_TOP_RIGHT",1),("PRESET_HCENTER_WIDE",14),("PRESET_TOP_WIDE",10),("PRESET_VCENTER_WIDE",13),("PRESET_RIGHT_WIDE",11),("PRESET_BOTTOM_WIDE",12),("PRESET_WIDE",15),("PRESET_CENTER_LEFT",4),("PRESET_CENTER_RIGHT",6),("PRESET_CENTER_BOTTOM",7),("PRESET_LEFT_WIDE",9),("PRESET_BOTTOM_LEFT",2),("PRESET_CENTER",8)]}]},GodotClass {_gcName = "Theme", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "default_font", _gcType = CustomType "Font", _gcGetter = "get_default_font", _gcSetter = "set_default_font", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_icon", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_stylebox", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "StyleBox", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stylebox", _gmReturnType = CustomType "StyleBox", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_stylebox", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_stylebox", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stylebox_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stylebox_types", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_font", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_font", _gmReturnType = CustomType "Font", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_font", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_font", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_font_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_color", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "constant", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_constant", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_default_font", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_font", _gmReturnType = CustomType "Font", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_type_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_emit_theme_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "copy_default_theme", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BaseButton", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("DRAW_NORMAL",0),("DRAW_DISABLED",3),("ACTION_MODE_BUTTON_RELEASE",1),("ACTION_MODE_BUTTON_PRESS",0),("DRAW_PRESSED",1),("DRAW_HOVER",2)], _gcProperties = [GodotProperty {_gpName = "disabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_disabled", _gcSetter = "set_disabled", _gcIndex = -1},GodotProperty {_gpName = "toggle_mode", _gcType = PrimitiveType BoolType, _gcGetter = "is_toggle_mode", _gcSetter = "set_toggle_mode", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = PrimitiveType BoolType, _gcGetter = "is_pressed", _gcSetter = "set_pressed", _gcIndex = -1},GodotProperty {_gpName = "action_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_action_mode", _gcSetter = "set_action_mode", _gcIndex = -1},GodotProperty {_gpName = "enabled_focus_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_enabled_focus_mode", _gcSetter = "set_enabled_focus_mode", _gcIndex = -1},GodotProperty {_gpName = "shortcut", _gcType = CustomType "ShortCut", _gcGetter = "get_shortcut", _gcSetter = "set_shortcut", _gcIndex = -1},GodotProperty {_gpName = "group", _gcType = CustomType "ButtonGroup", _gcGetter = "get_button_group", _gcSetter = "set_button_group", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "button_down", _gsArguments = []},GodotSignal {_gsName = "toggled", _gsArguments = [GodotArgument {_gaName = "button_pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "pressed", _gsArguments = []},GodotSignal {_gsName = "button_up", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_toggled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pressed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_hovered", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_toggle_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_toggle_mode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_action_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action_mode", _gmReturnType = EnumType "enum.BaseButton::ActionMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_draw_mode", _gmReturnType = EnumType "enum.BaseButton::DrawMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enabled_focus_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_enabled_focus_mode", _gmReturnType = EnumType "enum.Control::FocusMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shortcut", _gmReturnType = CustomType "ShortCut", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_button_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button_group", _gaType = CustomType "ButtonGroup", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button_group", _gmReturnType = CustomType "ButtonGroup", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ActionMode", _geValues = fromList [("ACTION_MODE_BUTTON_RELEASE",1),("ACTION_MODE_BUTTON_PRESS",0)]},GodotEnum {_geName = CustomType "DrawMode", _geValues = fromList [("DRAW_NORMAL",0),("DRAW_DISABLED",3),("DRAW_PRESSED",1),("DRAW_HOVER",2)]}]},GodotClass {_gcName = "ShortCut", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "shortcut", _gcType = CustomType "InputEvent", _gcGetter = "get_shortcut", _gcSetter = "set_shortcut", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shortcut", _gmReturnType = CustomType "InputEvent", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_valid", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_shortcut", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_as_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Button", _gcBaseClass = "BaseButton", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ALIGN_RIGHT",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "icon", _gcType = CustomType "Texture", _gcGetter = "get_button_icon", _gcSetter = "set_button_icon", _gcIndex = -1},GodotProperty {_gpName = "flat", _gcType = PrimitiveType BoolType, _gcGetter = "is_flat", _gcSetter = "set_flat", _gcIndex = -1},GodotProperty {_gpName = "clip_text", _gcType = PrimitiveType BoolType, _gcGetter = "get_clip_text", _gcSetter = "set_clip_text", _gcIndex = -1},GodotProperty {_gpName = "align", _gcType = PrimitiveType IntType, _gcGetter = "get_text_align", _gcSetter = "set_text_align", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_button_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flat", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_clip_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clip_text", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_text_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text_align", _gmReturnType = EnumType "enum.Button::TextAlign", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_flat", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "TextAlign", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]}]},GodotClass {_gcName = "Label", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("VALIGN_TOP",0),("ALIGN_RIGHT",2),("ALIGN_FILL",3),("VALIGN_FILL",3),("VALIGN_CENTER",1),("VALIGN_BOTTOM",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "align", _gcType = PrimitiveType IntType, _gcGetter = "get_align", _gcSetter = "set_align", _gcIndex = -1},GodotProperty {_gpName = "valign", _gcType = PrimitiveType IntType, _gcGetter = "get_valign", _gcSetter = "set_valign", _gcIndex = -1},GodotProperty {_gpName = "autowrap", _gcType = PrimitiveType BoolType, _gcGetter = "has_autowrap", _gcSetter = "set_autowrap", _gcIndex = -1},GodotProperty {_gpName = "clip_text", _gcType = PrimitiveType BoolType, _gcGetter = "is_clipping_text", _gcSetter = "set_clip_text", _gcIndex = -1},GodotProperty {_gpName = "uppercase", _gcType = PrimitiveType BoolType, _gcGetter = "is_uppercase", _gcSetter = "set_uppercase", _gcIndex = -1},GodotProperty {_gpName = "visible_characters", _gcType = PrimitiveType IntType, _gcGetter = "get_visible_characters", _gcSetter = "set_visible_characters", _gcIndex = -1},GodotProperty {_gpName = "percent_visible", _gcType = PrimitiveType FloatType, _gcGetter = "get_percent_visible", _gcSetter = "set_percent_visible", _gcIndex = -1},GodotProperty {_gpName = "lines_skipped", _gcType = PrimitiveType IntType, _gcGetter = "get_lines_skipped", _gcSetter = "set_lines_skipped", _gcIndex = -1},GodotProperty {_gpName = "max_lines_visible", _gcType = PrimitiveType IntType, _gcGetter = "get_max_lines_visible", _gcSetter = "set_max_lines_visible", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_align", _gmReturnType = EnumType "enum.Label::Align", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_valign", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "valign", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_valign", _gmReturnType = EnumType "enum.Label::VAlign", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autowrap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_autowrap", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clip_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_clipping_text", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uppercase", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_uppercase", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_line_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_line_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visible_line_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_character_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_visible_characters", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_visible_characters", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_percent_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "percent_visible", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_percent_visible", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lines_skipped", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lines_skipped", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lines_skipped", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_lines_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lines_visible", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_lines_visible", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Align", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_FILL",3),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]},GodotEnum {_geName = CustomType "VAlign", _geValues = fromList [("VALIGN_TOP",0),("VALIGN_FILL",3),("VALIGN_CENTER",1),("VALIGN_BOTTOM",2)]}]},GodotClass {_gcName = "Range", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "min_value", _gcType = PrimitiveType FloatType, _gcGetter = "get_min", _gcSetter = "set_min", _gcIndex = -1},GodotProperty {_gpName = "max_value", _gcType = PrimitiveType FloatType, _gcGetter = "get_max", _gcSetter = "set_max", _gcIndex = -1},GodotProperty {_gpName = "step", _gcType = PrimitiveType FloatType, _gcGetter = "get_step", _gcSetter = "set_step", _gcIndex = -1},GodotProperty {_gpName = "page", _gcType = PrimitiveType FloatType, _gcGetter = "get_page", _gcSetter = "set_page", _gcIndex = -1},GodotProperty {_gpName = "value", _gcType = PrimitiveType FloatType, _gcGetter = "get_value", _gcSetter = "set_value", _gcIndex = -1},GodotProperty {_gpName = "ratio", _gcType = PrimitiveType FloatType, _gcGetter = "get_as_ratio", _gcSetter = "set_as_ratio", _gcIndex = -1},GodotProperty {_gpName = "exp_edit", _gcType = PrimitiveType BoolType, _gcGetter = "is_ratio_exp", _gcSetter = "set_exp_ratio", _gcIndex = -1},GodotProperty {_gpName = "rounded", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_rounded_values", _gcSetter = "set_use_rounded_values", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "value_changed", _gsArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "get_value", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_min", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_max", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_step", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_page", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_as_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "minimum", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "maximum", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_step", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "step", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_page", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pagesize", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_as_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_use_rounded_values", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_rounded_values", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exp_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ratio_exp", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "share", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "with", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "unshare", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ScrollBar", _gcBaseClass = "Range", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "custom_step", _gcType = PrimitiveType FloatType, _gcGetter = "get_custom_step", _gcSetter = "set_custom_step", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "scrolling", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_step", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "step", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_step", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_drag_slave_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_drag_slave_exit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "HScrollBar", _gcBaseClass = "ScrollBar", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VScrollBar", _gcBaseClass = "ScrollBar", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ProgressBar", _gcBaseClass = "Range", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "percent_visible", _gcType = PrimitiveType BoolType, _gcGetter = "is_percent_visible", _gcSetter = "set_percent_visible", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_percent_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_percent_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Slider", _gcBaseClass = "Range", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "editable", _gcType = PrimitiveType BoolType, _gcGetter = "is_editable", _gcSetter = "set_editable", _gcIndex = -1},GodotProperty {_gpName = "tick_count", _gcType = PrimitiveType IntType, _gcGetter = "get_ticks", _gcSetter = "set_ticks", _gcIndex = -1},GodotProperty {_gpName = "ticks_on_borders", _gcType = PrimitiveType BoolType, _gcGetter = "get_ticks_on_borders", _gcSetter = "set_ticks_on_borders", _gcIndex = -1},GodotProperty {_gpName = "focus_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_focus_mode", _gcSetter = "set_focus_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ticks", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "count", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ticks", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_ticks_on_borders", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ticks_on_borders", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ticks_on_border", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_editable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "editable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "HSlider", _gcBaseClass = "Slider", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VSlider", _gcBaseClass = "Slider", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Popup", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_POST_POPUP",80),("NOTIFICATION_POPUP_HIDE",81)], _gcProperties = [GodotProperty {_gpName = "popup_exclusive", _gcType = PrimitiveType BoolType, _gcGetter = "is_exclusive", _gcSetter = "set_exclusive", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "popup_hide", _gsArguments = []},GodotSignal {_gsName = "about_to_show", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "popup_centered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "popup_centered_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.75"}]},GodotMethod {_gmName = "popup_centered_minsize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "minsize", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "popup", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounds", _gaType = CoreType "Rect2", _gaDefaultValue = Just "(0, 0, 0, 0)"}]},GodotMethod {_gmName = "set_exclusive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_exclusive", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PopupPanel", _gcBaseClass = "Popup", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "MenuButton", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "items", _gcType = CoreType "Array", _gcGetter = "_get_items", _gcSetter = "_set_items", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "about_to_show", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "get_popup", _gmReturnType = CustomType "PopupMenu", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_unhandled_key_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_items", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_items", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disable_shortcuts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "CheckBox", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "CheckButton", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ToolButton", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "LinkButton", _gcBaseClass = "BaseButton", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("UNDERLINE_MODE_ALWAYS",0),("UNDERLINE_MODE_NEVER",2),("UNDERLINE_MODE_ON_HOVER",1)], _gcProperties = [GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "underline", _gcType = PrimitiveType IntType, _gcGetter = "get_underline_mode", _gcSetter = "set_underline_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_underline_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "underline_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_underline_mode", _gmReturnType = EnumType "enum.LinkButton::UnderlineMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "UnderlineMode", _geValues = fromList [("UNDERLINE_MODE_ALWAYS",0),("UNDERLINE_MODE_NEVER",2),("UNDERLINE_MODE_ON_HOVER",1)]}]},GodotClass {_gcName = "Panel", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "TextureRect", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("STRETCH_TILE",2),("STRETCH_KEEP_ASPECT_COVERED",7),("STRETCH_KEEP_ASPECT",5),("STRETCH_SCALE_ON_EXPAND",0),("STRETCH_SCALE",1),("STRETCH_KEEP",3),("STRETCH_KEEP_CENTERED",4),("STRETCH_KEEP_ASPECT_CENTERED",6)], _gcProperties = [GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "expand", _gcType = PrimitiveType BoolType, _gcGetter = "has_expand", _gcSetter = "set_expand", _gcIndex = -1},GodotProperty {_gpName = "stretch_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_mode", _gcSetter = "set_stretch_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_expand", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_expand", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stretch_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stretch_mode", _gmReturnType = EnumType "enum.TextureRect::StretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "StretchMode", _geValues = fromList [("STRETCH_TILE",2),("STRETCH_KEEP_ASPECT_COVERED",7),("STRETCH_KEEP_ASPECT",5),("STRETCH_SCALE_ON_EXPAND",0),("STRETCH_SCALE",1),("STRETCH_KEEP",3),("STRETCH_KEEP_CENTERED",4),("STRETCH_KEEP_ASPECT_CENTERED",6)]}]},GodotClass {_gcName = "ColorRect", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_frame_color", _gcSetter = "set_frame_color", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_frame_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "NinePatchRect", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("AXIS_STRETCH_MODE_TILE_FIT",2),("AXIS_STRETCH_MODE_TILE",1),("AXIS_STRETCH_MODE_STRETCH",0)], _gcProperties = [GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "draw_center", _gcType = PrimitiveType BoolType, _gcGetter = "is_draw_center_enabled", _gcSetter = "set_draw_center", _gcIndex = -1},GodotProperty {_gpName = "region_rect", _gcType = CoreType "Rect2", _gcGetter = "get_region_rect", _gcSetter = "set_region_rect", _gcIndex = -1},GodotProperty {_gpName = "patch_margin_left", _gcType = PrimitiveType IntType, _gcGetter = "get_patch_margin", _gcSetter = "set_patch_margin", _gcIndex = 0},GodotProperty {_gpName = "patch_margin_top", _gcType = PrimitiveType IntType, _gcGetter = "get_patch_margin", _gcSetter = "set_patch_margin", _gcIndex = 1},GodotProperty {_gpName = "patch_margin_right", _gcType = PrimitiveType IntType, _gcGetter = "get_patch_margin", _gcSetter = "set_patch_margin", _gcIndex = 2},GodotProperty {_gpName = "patch_margin_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_patch_margin", _gcSetter = "set_patch_margin", _gcIndex = 3},GodotProperty {_gpName = "axis_stretch_horizontal", _gcType = PrimitiveType IntType, _gcGetter = "get_h_axis_stretch_mode", _gcSetter = "set_h_axis_stretch_mode", _gcIndex = -1},GodotProperty {_gpName = "axis_stretch_vertical", _gcType = PrimitiveType IntType, _gcGetter = "get_v_axis_stretch_mode", _gcSetter = "set_v_axis_stretch_mode", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "texture_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_patch_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_patch_margin", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_region_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_center", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "draw_center", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_draw_center_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_axis_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_axis_stretch_mode", _gmReturnType = EnumType "enum.NinePatchRect::AxisStretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_axis_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_axis_stretch_mode", _gmReturnType = EnumType "enum.NinePatchRect::AxisStretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AxisStretchMode", _geValues = fromList [("AXIS_STRETCH_MODE_TILE_FIT",2),("AXIS_STRETCH_MODE_TILE",1),("AXIS_STRETCH_MODE_STRETCH",0)]}]},GodotClass {_gcName = "TabContainer", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ALIGN_RIGHT",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "tab_align", _gcType = PrimitiveType IntType, _gcGetter = "get_tab_align", _gcSetter = "set_tab_align", _gcIndex = -1},GodotProperty {_gpName = "current_tab", _gcType = PrimitiveType IntType, _gcGetter = "get_current_tab", _gcSetter = "set_current_tab", _gcIndex = -1},GodotProperty {_gpName = "tabs_visible", _gcType = PrimitiveType BoolType, _gcGetter = "are_tabs_visible", _gcSetter = "set_tabs_visible", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "pre_popup_pressed", _gsArguments = []},GodotSignal {_gsName = "tab_selected", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tab_changed", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_tab", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_previous_tab", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_tab_control", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tab_control", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_align", _gmReturnType = EnumType "enum.TabContainer::TabAlign", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tabs_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "are_tabs_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tab_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_popup", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "popup", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_popup", _gmReturnType = CustomType "Popup", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_child_renamed_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_on_theme_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_current_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "TabAlign", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]}]},GodotClass {_gcName = "Tabs", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ALIGN_RIGHT",2),("CLOSE_BUTTON_SHOW_ACTIVE_ONLY",1),("ALIGN_MAX",3),("CLOSE_BUTTON_MAX",3),("CLOSE_BUTTON_SHOW_ALWAYS",2),("CLOSE_BUTTON_SHOW_NEVER",0),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "current_tab", _gcType = PrimitiveType IntType, _gcGetter = "get_current_tab", _gcSetter = "set_current_tab", _gcIndex = -1},GodotProperty {_gpName = "tab_align", _gcType = PrimitiveType IntType, _gcGetter = "get_tab_align", _gcSetter = "set_tab_align", _gcIndex = -1},GodotProperty {_gpName = "tab_close_display_policy", _gcType = PrimitiveType IntType, _gcGetter = "get_tab_close_display_policy", _gcSetter = "set_tab_close_display_policy", _gcIndex = -1},GodotProperty {_gpName = "scrolling_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_scrolling_enabled", _gcSetter = "set_scrolling_enabled", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "tab_close", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tab_clicked", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "reposition_active_tab_request", _gsArguments = [GodotArgument {_gaName = "idx_to", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "right_button_pressed", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tab_changed", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tab_hover", _gsArguments = [GodotArgument {_gaName = "tab", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_tab", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tab_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Just "[Object:null]"}]},GodotMethod {_gmName = "set_tab_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_align", _gmReturnType = EnumType "enum.Tabs::TabAlign", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_tab_offset", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_offset_buttons_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "ensure_tab_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tab_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_close_display_policy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "policy", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_close_display_policy", _gmReturnType = EnumType "enum.Tabs::CloseButtonDisplayPolicy", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scrolling_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scrolling_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "CloseButtonDisplayPolicy", _geValues = fromList [("CLOSE_BUTTON_SHOW_ACTIVE_ONLY",1),("CLOSE_BUTTON_MAX",3),("CLOSE_BUTTON_SHOW_ALWAYS",2),("CLOSE_BUTTON_SHOW_NEVER",0)]},GodotEnum {_geName = CustomType "TabAlign", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_MAX",3),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]}]},GodotClass {_gcName = "Separator", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "HSeparator", _gcBaseClass = "Separator", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VSeparator", _gcBaseClass = "Separator", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "TextureButton", _gcBaseClass = "BaseButton", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("STRETCH_TILE",1),("STRETCH_KEEP_ASPECT_COVERED",6),("STRETCH_KEEP_ASPECT",4),("STRETCH_SCALE",0),("STRETCH_KEEP",2),("STRETCH_KEEP_CENTERED",3),("STRETCH_KEEP_ASPECT_CENTERED",5)], _gcProperties = [GodotProperty {_gpName = "texture_normal", _gcType = CustomType "Texture", _gcGetter = "get_normal_texture", _gcSetter = "set_normal_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_pressed", _gcType = CustomType "Texture", _gcGetter = "get_pressed_texture", _gcSetter = "set_pressed_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_hover", _gcType = CustomType "Texture", _gcGetter = "get_hover_texture", _gcSetter = "set_hover_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_disabled", _gcType = CustomType "Texture", _gcGetter = "get_disabled_texture", _gcSetter = "set_disabled_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_focused", _gcType = CustomType "Texture", _gcGetter = "get_focused_texture", _gcSetter = "set_focused_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_click_mask", _gcType = CustomType "BitMap", _gcGetter = "get_click_mask", _gcSetter = "set_click_mask", _gcIndex = -1},GodotProperty {_gpName = "expand", _gcType = PrimitiveType BoolType, _gcGetter = "get_expand", _gcSetter = "set_expand", _gcIndex = -1},GodotProperty {_gpName = "stretch_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_mode", _gcSetter = "set_stretch_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_normal_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_pressed_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_hover_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_disabled_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_focused_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_click_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = CustomType "BitMap", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p_expand", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pressed_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_hover_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_disabled_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_focused_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_click_mask", _gmReturnType = CustomType "BitMap", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_expand", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_stretch_mode", _gmReturnType = EnumType "enum.TextureButton::StretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "StretchMode", _geValues = fromList [("STRETCH_TILE",1),("STRETCH_KEEP_ASPECT_COVERED",6),("STRETCH_KEEP_ASPECT",4),("STRETCH_SCALE",0),("STRETCH_KEEP",2),("STRETCH_KEEP_CENTERED",3),("STRETCH_KEEP_ASPECT_CENTERED",5)]}]},GodotClass {_gcName = "BitMap", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "Dictionary", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "create_from_image_alpha", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bit", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bit_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p_rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bit", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_true_bit_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Container", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_SORT_CHILDREN",50)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "sort_children", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_sort_children", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_child_minsize_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "queue_sort", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "fit_child_in_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "child", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "BoxContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("ALIGN_END",2),("ALIGN_BEGIN",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "alignment", _gcType = PrimitiveType IntType, _gcGetter = "get_alignment", _gcSetter = "set_alignment", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_spacer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "begin", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_alignment", _gmReturnType = EnumType "enum.BoxContainer::AlignMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_alignment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "alignment", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "AlignMode", _geValues = fromList [("ALIGN_END",2),("ALIGN_BEGIN",0),("ALIGN_CENTER",1)]}]},GodotClass {_gcName = "HBoxContainer", _gcBaseClass = "BoxContainer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VBoxContainer", _gcBaseClass = "BoxContainer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "GridContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "columns", _gcType = PrimitiveType IntType, _gcGetter = "get_columns", _gcSetter = "set_columns", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_columns", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "columns", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_columns", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CenterContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "use_top_left", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_top_left", _gcSetter = "set_use_top_left", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_use_top_left", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_top_left", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ScrollContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "scroll_horizontal_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_h_scroll_enabled", _gcSetter = "set_enable_h_scroll", _gcIndex = -1},GodotProperty {_gpName = "scroll_horizontal", _gcType = PrimitiveType IntType, _gcGetter = "get_h_scroll", _gcSetter = "set_h_scroll", _gcIndex = -1},GodotProperty {_gpName = "scroll_vertical_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_v_scroll_enabled", _gcSetter = "set_enable_v_scroll", _gcIndex = -1},GodotProperty {_gpName = "scroll_vertical", _gcType = PrimitiveType IntType, _gcGetter = "get_v_scroll", _gcSetter = "set_v_scroll", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_scroll_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_enable_h_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_h_scroll_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enable_v_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_v_scroll_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_scrollbar_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_scroll", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_scroll", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PanelContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "SplitContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("DRAGGER_HIDDEN",1),("DRAGGER_HIDDEN_COLLAPSED",2),("DRAGGER_VISIBLE",0)], _gcProperties = [GodotProperty {_gpName = "split_offset", _gcType = PrimitiveType IntType, _gcGetter = "get_split_offset", _gcSetter = "set_split_offset", _gcIndex = -1},GodotProperty {_gpName = "collapsed", _gcType = PrimitiveType BoolType, _gcGetter = "is_collapsed", _gcSetter = "set_collapsed", _gcIndex = -1},GodotProperty {_gpName = "dragger_visibility", _gcType = PrimitiveType IntType, _gcGetter = "get_dragger_visibility", _gcSetter = "set_dragger_visibility", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "dragged", _gsArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_split_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_split_offset", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collapsed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collapsed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_collapsed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dragger_visibility", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dragger_visibility", _gmReturnType = EnumType "enum.SplitContainer::DraggerVisibility", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DraggerVisibility", _geValues = fromList [("DRAGGER_HIDDEN",1),("DRAGGER_HIDDEN_COLLAPSED",2),("DRAGGER_VISIBLE",0)]}]},GodotClass {_gcName = "HSplitContainer", _gcBaseClass = "SplitContainer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VSplitContainer", _gcBaseClass = "SplitContainer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "GraphNode", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("OVERLAY_DISABLED",0),("OVERLAY_POSITION",2),("OVERLAY_BREAKPOINT",1)], _gcProperties = [GodotProperty {_gpName = "title", _gcType = CoreType "String", _gcGetter = "get_title", _gcSetter = "set_title", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "show_close", _gcType = PrimitiveType BoolType, _gcGetter = "is_close_button_visible", _gcSetter = "set_show_close_button", _gcIndex = -1},GodotProperty {_gpName = "resizable", _gcType = PrimitiveType BoolType, _gcGetter = "is_resizable", _gcSetter = "set_resizable", _gcIndex = -1},GodotProperty {_gpName = "selected", _gcType = PrimitiveType BoolType, _gcGetter = "is_selected", _gcSetter = "set_selected", _gcIndex = -1},GodotProperty {_gpName = "comment", _gcType = PrimitiveType BoolType, _gcGetter = "is_comment", _gcSetter = "set_comment", _gcIndex = -1},GodotProperty {_gpName = "overlay", _gcType = PrimitiveType IntType, _gcGetter = "get_overlay", _gcSetter = "set_overlay", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "raise_request", _gsArguments = []},GodotSignal {_gsName = "close_request", _gsArguments = []},GodotSignal {_gsName = "dragged", _gsArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "offset_changed", _gsArguments = []},GodotSignal {_gsName = "resize_request", _gsArguments = [GodotArgument {_gaName = "new_minsize", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_slot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable_left", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "type_left", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color_left", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable_right", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "type_right", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color_right", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "custom_left", _gaType = CustomType "Texture", _gaDefaultValue = Just "[Object:null]"},GodotArgument {_gaName = "custom_right", _gaType = CustomType "Texture", _gaDefaultValue = Just "[Object:null]"}]},GodotMethod {_gmName = "clear_slot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_all_slots", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_slot_enabled_left", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_slot_type_left", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_slot_color_left", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_slot_enabled_right", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_slot_type_right", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_slot_color_right", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_comment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "comment", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_comment", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_resizable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resizable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_resizable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "selected", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_selected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connection_output_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connection_input_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connection_output_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_output_type", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_output_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_input_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_input_type", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_input_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_show_close_button", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "show", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_close_button_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_overlay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "overlay", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_overlay", _gmReturnType = EnumType "enum.GraphNode::Overlay", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Overlay", _geValues = fromList [("OVERLAY_DISABLED",0),("OVERLAY_POSITION",2),("OVERLAY_BREAKPOINT",1)]}]},GodotClass {_gcName = "GraphEdit", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "right_disconnects", _gcType = PrimitiveType BoolType, _gcGetter = "is_right_disconnects_enabled", _gcSetter = "set_right_disconnects", _gcIndex = -1},GodotProperty {_gpName = "scroll_offset", _gcType = CoreType "Vector2", _gcGetter = "get_scroll_ofs", _gcSetter = "set_scroll_ofs", _gcIndex = -1},GodotProperty {_gpName = "snap_distance", _gcType = PrimitiveType IntType, _gcGetter = "get_snap", _gcSetter = "set_snap", _gcIndex = -1},GodotProperty {_gpName = "use_snap", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_snap", _gcSetter = "set_use_snap", _gcIndex = -1},GodotProperty {_gpName = "zoom", _gcType = PrimitiveType FloatType, _gcGetter = "get_zoom", _gcSetter = "set_zoom", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "delete_nodes_request", _gsArguments = []},GodotSignal {_gsName = "duplicate_nodes_request", _gsArguments = []},GodotSignal {_gsName = "popup_request", _gsArguments = [GodotArgument {_gaName = "p_position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "scroll_offset_changed", _gsArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "node_selected", _gsArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "_begin_node_move", _gsArguments = []},GodotSignal {_gsName = "connection_to_empty", _gsArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "from_slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "release_position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "disconnection_request", _gsArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "from_slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "to_slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "connection_request", _gsArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "from_slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "to_slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "_end_node_move", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "connect_node", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_node_connected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "disconnect_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_list", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_connections", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scroll_ofs", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scroll_ofs", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_valid_right_disconnect_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_valid_right_disconnect_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_valid_left_disconnect_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_valid_left_disconnect_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_valid_connection_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_valid_connection_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_valid_connection_type", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_zoom", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p_zoom", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_zoom", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_snap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pixels", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_snap", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_snap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_snap", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_right_disconnects", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_right_disconnects_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_graph_node_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_graph_node_raised", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_top_layer_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_top_layer_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_scroll_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_zoom_minus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_zoom_reset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_zoom_plus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_snap_toggled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_snap_value_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_update_scroll_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_connections_layer_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "TextureProgress", _gcBaseClass = "Range", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("FILL_BOTTOM_TO_TOP",3),("FILL_TOP_TO_BOTTOM",2),("FILL_RIGHT_TO_LEFT",1),("FILL_CLOCKWISE",4),("FILL_LEFT_TO_RIGHT",0),("FILL_COUNTER_CLOCKWISE",5)], _gcProperties = [GodotProperty {_gpName = "texture_under", _gcType = CustomType "Texture", _gcGetter = "get_under_texture", _gcSetter = "set_under_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_over", _gcType = CustomType "Texture", _gcGetter = "get_over_texture", _gcSetter = "set_over_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_progress", _gcType = CustomType "Texture", _gcGetter = "get_progress_texture", _gcSetter = "set_progress_texture", _gcIndex = -1},GodotProperty {_gpName = "fill_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_fill_mode", _gcSetter = "set_fill_mode", _gcIndex = -1},GodotProperty {_gpName = "radial_initial_angle", _gcType = PrimitiveType FloatType, _gcGetter = "get_radial_initial_angle", _gcSetter = "set_radial_initial_angle", _gcIndex = -1},GodotProperty {_gpName = "radial_fill_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_fill_degrees", _gcSetter = "set_fill_degrees", _gcIndex = -1},GodotProperty {_gpName = "radial_center_offset", _gcType = CoreType "Vector2", _gcGetter = "get_radial_center_offset", _gcSetter = "set_radial_center_offset", _gcIndex = -1},GodotProperty {_gpName = "nine_patch_stretch", _gcType = PrimitiveType BoolType, _gcGetter = "get_nine_patch_stretch", _gcSetter = "set_nine_patch_stretch", _gcIndex = -1},GodotProperty {_gpName = "stretch_margin_left", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_margin", _gcSetter = "set_stretch_margin", _gcIndex = 0},GodotProperty {_gpName = "stretch_margin_top", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_margin", _gcSetter = "set_stretch_margin", _gcIndex = 1},GodotProperty {_gpName = "stretch_margin_right", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_margin", _gcSetter = "set_stretch_margin", _gcIndex = 2},GodotProperty {_gpName = "stretch_margin_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_margin", _gcSetter = "set_stretch_margin", _gcIndex = 3}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_under_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tex", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_under_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_progress_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tex", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_progress_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_over_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tex", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_over_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fill_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fill_mode", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_radial_initial_angle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radial_initial_angle", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_radial_center_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radial_center_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fill_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fill_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stretch_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stretch_margin", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_nine_patch_stretch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stretch", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_nine_patch_stretch", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "FillMode", _geValues = fromList [("FILL_BOTTOM_TO_TOP",3),("FILL_TOP_TO_BOTTOM",2),("FILL_RIGHT_TO_LEFT",1),("FILL_CLOCKWISE",4),("FILL_LEFT_TO_RIGHT",0),("FILL_COUNTER_CLOCKWISE",5)]}]},GodotClass {_gcName = "ItemList", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ICON_MODE_LEFT",1),("SELECT_MULTI",1),("SELECT_SINGLE",0),("ICON_MODE_TOP",0)], _gcProperties = [GodotProperty {_gpName = "items", _gcType = CoreType "Array", _gcGetter = "_get_items", _gcSetter = "_set_items", _gcIndex = -1},GodotProperty {_gpName = "select_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_select_mode", _gcSetter = "set_select_mode", _gcIndex = -1},GodotProperty {_gpName = "allow_reselect", _gcType = PrimitiveType BoolType, _gcGetter = "get_allow_reselect", _gcSetter = "set_allow_reselect", _gcIndex = -1},GodotProperty {_gpName = "allow_rmb_select", _gcType = PrimitiveType BoolType, _gcGetter = "get_allow_rmb_select", _gcSetter = "set_allow_rmb_select", _gcIndex = -1},GodotProperty {_gpName = "max_text_lines", _gcType = PrimitiveType IntType, _gcGetter = "get_max_text_lines", _gcSetter = "set_max_text_lines", _gcIndex = -1},GodotProperty {_gpName = "auto_height", _gcType = PrimitiveType BoolType, _gcGetter = "has_auto_height", _gcSetter = "set_auto_height", _gcIndex = -1},GodotProperty {_gpName = "max_columns", _gcType = PrimitiveType IntType, _gcGetter = "get_max_columns", _gcSetter = "set_max_columns", _gcIndex = -1},GodotProperty {_gpName = "same_column_width", _gcType = PrimitiveType BoolType, _gcGetter = "is_same_column_width", _gcSetter = "set_same_column_width", _gcIndex = -1},GodotProperty {_gpName = "fixed_column_width", _gcType = PrimitiveType IntType, _gcGetter = "get_fixed_column_width", _gcSetter = "set_fixed_column_width", _gcIndex = -1},GodotProperty {_gpName = "icon_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_icon_mode", _gcSetter = "set_icon_mode", _gcIndex = -1},GodotProperty {_gpName = "icon_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_icon_scale", _gcSetter = "set_icon_scale", _gcIndex = -1},GodotProperty {_gpName = "fixed_icon_size", _gcType = CoreType "Vector2", _gcGetter = "get_fixed_icon_size", _gcSetter = "set_fixed_icon_size", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "item_activated", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "multi_selected", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "selected", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "nothing_selected", _gsArguments = []},GodotSignal {_gsName = "rmb_clicked", _gsArguments = [GodotArgument {_gaName = "at_position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_rmb_selected", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "at_position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_selected", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "add_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "selectable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "add_icon_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "selectable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "set_item_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_icon_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_icon_region", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_selectable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "selectable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_selectable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_metadata", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "metadata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_custom_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "custom_bg_color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_custom_bg_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_tooltip_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_tooltip_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_tooltip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tooltip", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "single", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "unselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_selected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_selected_items", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_item_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "sort_items_by_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fixed_column_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fixed_column_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_same_column_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_same_column_width", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_text_lines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lines", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_text_lines", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_columns", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_columns", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_select_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_select_mode", _gmReturnType = EnumType "enum.ItemList::SelectMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_icon_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon_mode", _gmReturnType = EnumType "enum.ItemList::IconMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fixed_icon_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fixed_icon_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_icon_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_allow_rmb_select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "allow", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_allow_rmb_select", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_allow_reselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "allow", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_allow_reselect", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_auto_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_auto_height", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_item_at_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "exact", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "ensure_current_is_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_v_scroll", _gmReturnType = CustomType "VScrollBar", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_scroll_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_items", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_items", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SelectMode", _geValues = fromList [("SELECT_MULTI",1),("SELECT_SINGLE",0)]},GodotEnum {_geName = CustomType "IconMode", _geValues = fromList [("ICON_MODE_LEFT",1),("ICON_MODE_TOP",0)]}]},GodotClass {_gcName = "WindowDialog", _gcBaseClass = "Popup", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "window_title", _gcType = CoreType "String", _gcGetter = "get_title", _gcSetter = "set_title", _gcIndex = -1},GodotProperty {_gpName = "resizable", _gcType = PrimitiveType BoolType, _gcGetter = "get_resizable", _gcSetter = "set_resizable", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_resizable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resizable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resizable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_closed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_close_button", _gmReturnType = CustomType "TextureButton", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AcceptDialog", _gcBaseClass = "WindowDialog", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "dialog_text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "dialog_hide_on_ok", _gcType = PrimitiveType BoolType, _gcGetter = "get_hide_on_ok", _gcSetter = "set_hide_on_ok", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "confirmed", _gsArguments = []},GodotSignal {_gsName = "custom_action", _gsArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_ok", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_ok", _gmReturnType = CustomType "Button", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_label", _gmReturnType = CustomType "Label", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hide_on_ok", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_hide_on_ok", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_button", _gmReturnType = CustomType "Button", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "right", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "add_cancel", _gmReturnType = CustomType "Button", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_builtin_text_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "register_text_enter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line_edit", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_custom_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ConfirmationDialog", _gcBaseClass = "AcceptDialog", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_cancel", _gmReturnType = CustomType "Button", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "FileDialog", _gcBaseClass = "ConfirmationDialog", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ACCESS_RESOURCES",0),("MODE_OPEN_FILES",1),("MODE_OPEN_FILE",0),("MODE_SAVE_FILE",4),("ACCESS_USERDATA",1),("ACCESS_FILESYSTEM",2),("MODE_OPEN_DIR",2),("MODE_OPEN_ANY",3)], _gcProperties = [GodotProperty {_gpName = "mode_overrides_title", _gcType = PrimitiveType BoolType, _gcGetter = "is_mode_overriding_title", _gcSetter = "set_mode_overrides_title", _gcIndex = -1},GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "access", _gcType = PrimitiveType IntType, _gcGetter = "get_access", _gcSetter = "set_access", _gcIndex = -1},GodotProperty {_gpName = "filters", _gcType = CoreType "PoolStringArray", _gcGetter = "get_filters", _gcSetter = "set_filters", _gcIndex = -1},GodotProperty {_gpName = "show_hidden_files", _gcType = PrimitiveType BoolType, _gcGetter = "is_showing_hidden_files", _gcSetter = "set_show_hidden_files", _gcIndex = -1},GodotProperty {_gpName = "current_dir", _gcType = CoreType "String", _gcGetter = "get_current_dir", _gcSetter = "set_current_dir", _gcIndex = -1},GodotProperty {_gpName = "current_file", _gcType = CoreType "String", _gcGetter = "get_current_file", _gcSetter = "set_current_file", _gcIndex = -1},GodotProperty {_gpName = "current_path", _gcType = CoreType "String", _gcGetter = "get_current_path", _gcSetter = "set_current_path", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "files_selected", _gsArguments = [GodotArgument {_gaName = "paths", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "dir_selected", _gsArguments = [GodotArgument {_gaName = "dir", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "file_selected", _gsArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_tree_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_tree_db_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_dir_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_file_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_action_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_cancel_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_filter_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_save_confirm_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_filters", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_filters", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filters", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filters", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dir", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_current_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_current_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_mode_overrides_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "override", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_mode_overriding_title", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.FileDialog::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_vbox", _gmReturnType = CustomType "VBoxContainer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_access", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "access", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_access", _gmReturnType = EnumType "enum.FileDialog::Access", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_show_hidden_files", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "show", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_showing_hidden_files", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_select_drive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_make_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_make_dir_confirm", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_file_list", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_go_up", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "deselect_items", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "invalidate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_OPEN_FILES",1),("MODE_OPEN_FILE",0),("MODE_SAVE_FILE",4),("MODE_OPEN_DIR",2),("MODE_OPEN_ANY",3)]},GodotEnum {_geName = CustomType "Access", _geValues = fromList [("ACCESS_RESOURCES",0),("ACCESS_USERDATA",1),("ACCESS_FILESYSTEM",2)]}]},GodotClass {_gcName = "LineEdit", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MENU_PASTE",2),("ALIGN_RIGHT",2),("ALIGN_FILL",3),("MENU_CLEAR",3),("MENU_MAX",7),("MENU_REDO",6),("MENU_COPY",1),("MENU_UNDO",5),("MENU_SELECT_ALL",4),("MENU_CUT",0),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "align", _gcType = PrimitiveType IntType, _gcGetter = "get_align", _gcSetter = "set_align", _gcIndex = -1},GodotProperty {_gpName = "max_length", _gcType = PrimitiveType IntType, _gcGetter = "get_max_length", _gcSetter = "set_max_length", _gcIndex = -1},GodotProperty {_gpName = "editable", _gcType = PrimitiveType BoolType, _gcGetter = "is_editable", _gcSetter = "set_editable", _gcIndex = -1},GodotProperty {_gpName = "secret", _gcType = PrimitiveType BoolType, _gcGetter = "is_secret", _gcSetter = "set_secret", _gcIndex = -1},GodotProperty {_gpName = "expand_to_text_length", _gcType = PrimitiveType BoolType, _gcGetter = "get_expand_to_text_length", _gcSetter = "set_expand_to_text_length", _gcIndex = -1},GodotProperty {_gpName = "focus_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_focus_mode", _gcSetter = "set_focus_mode", _gcIndex = -1},GodotProperty {_gpName = "context_menu_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_context_menu_enabled", _gcSetter = "set_context_menu_enabled", _gcIndex = -1},GodotProperty {_gpName = "placeholder_text", _gcType = CoreType "String", _gcGetter = "get_placeholder", _gcSetter = "set_placeholder", _gcIndex = -1},GodotProperty {_gpName = "placeholder_alpha", _gcType = PrimitiveType FloatType, _gcGetter = "get_placeholder_alpha", _gcSetter = "set_placeholder_alpha", _gcIndex = -1},GodotProperty {_gpName = "caret_blink", _gcType = PrimitiveType BoolType, _gcGetter = "cursor_get_blink_enabled", _gcSetter = "cursor_set_blink_enabled", _gcIndex = -1},GodotProperty {_gpName = "caret_blink_speed", _gcType = PrimitiveType FloatType, _gcGetter = "cursor_get_blink_speed", _gcSetter = "cursor_set_blink_speed", _gcIndex = -1},GodotProperty {_gpName = "caret_position", _gcType = PrimitiveType IntType, _gcGetter = "get_cursor_position", _gcSetter = "set_cursor_position", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "text_entered", _gsArguments = [GodotArgument {_gaName = "new_text", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "text_changed", _gsArguments = [GodotArgument {_gaName = "new_text", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_text_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_toggle_draw_caret", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_editor_settings_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_align", _gmReturnType = EnumType "enum.LineEdit::Align", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "to", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "select_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "deselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_placeholder", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_placeholder", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_placeholder_alpha", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "alpha", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_placeholder_alpha", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cursor_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cursor_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_expand_to_text_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_expand_to_text_length", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_set_blink_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_get_blink_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_set_blink_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "blink_speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_get_blink_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "chars", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_length", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "append_at_cursor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_editable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_secret", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_secret", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "menu_option", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "option", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_menu", _gmReturnType = CustomType "PopupMenu", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_context_menu_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_context_menu_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Align", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_FILL",3),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]},GodotEnum {_geName = CustomType "MenuItems", _geValues = fromList [("MENU_PASTE",2),("MENU_CLEAR",3),("MENU_MAX",7),("MENU_REDO",6),("MENU_COPY",1),("MENU_UNDO",5),("MENU_SELECT_ALL",4),("MENU_CUT",0)]}]},GodotClass {_gcName = "PopupMenu", _gcBaseClass = "Popup", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "items", _gcType = CoreType "Array", _gcGetter = "_get_items", _gcSetter = "_set_items", _gcIndex = -1},GodotProperty {_gpName = "hide_on_item_selection", _gcType = PrimitiveType BoolType, _gcGetter = "is_hide_on_item_selection", _gcSetter = "set_hide_on_item_selection", _gcIndex = -1},GodotProperty {_gpName = "hide_on_checkable_item_selection", _gcType = PrimitiveType BoolType, _gcGetter = "is_hide_on_checkable_item_selection", _gcSetter = "set_hide_on_checkable_item_selection", _gcIndex = -1},GodotProperty {_gpName = "hide_on_state_item_selection", _gcType = PrimitiveType BoolType, _gcGetter = "is_hide_on_state_item_selection", _gcSetter = "set_hide_on_state_item_selection", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "index_pressed", _gsArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "id_pressed", _gsArguments = [GodotArgument {_gaName = "ID", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_icon_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "accel", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "add_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "accel", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "add_icon_check_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "accel", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "add_check_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "accel", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "add_submenu_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "submenu", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "add_icon_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "global", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "add_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "global", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "add_icon_check_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "global", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "add_check_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "global", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_item_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_checked", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "checked", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_accelerator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "accel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_metadata", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "metadata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_submenu", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "submenu", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_as_separator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_as_checkable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_tooltip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tooltip", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_shortcut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shortcut", _gaType = CustomType "ShortCut", _gaDefaultValue = Nothing},GodotArgument {_gaName = "global", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_item_multistate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "state", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "toggle_item_checked", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "toggle_item_multistate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_checked", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_accelerator", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_submenu", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_separator", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_checkable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_shortcut", _gmReturnType = CustomType "ShortCut", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_separator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_items", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_items", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hide_on_item_selection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_hide_on_item_selection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hide_on_checkable_item_selection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_hide_on_checkable_item_selection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hide_on_state_item_selection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_hide_on_state_item_selection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_submenu_timeout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Tree", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("DROP_MODE_DISABLED",0),("SELECT_ROW",1),("SELECT_MULTI",2),("DROP_MODE_ON_ITEM",1),("DROP_MODE_INBETWEEN",2),("SELECT_SINGLE",0)], _gcProperties = [GodotProperty {_gpName = "columns", _gcType = PrimitiveType IntType, _gcGetter = "get_columns", _gcSetter = "set_columns", _gcIndex = -1},GodotProperty {_gpName = "allow_reselect", _gcType = PrimitiveType BoolType, _gcGetter = "get_allow_reselect", _gcSetter = "set_allow_reselect", _gcIndex = -1},GodotProperty {_gpName = "allow_rmb_select", _gcType = PrimitiveType BoolType, _gcGetter = "get_allow_rmb_select", _gcSetter = "set_allow_rmb_select", _gcIndex = -1},GodotProperty {_gpName = "hide_folding", _gcType = PrimitiveType BoolType, _gcGetter = "is_folding_hidden", _gcSetter = "set_hide_folding", _gcIndex = -1},GodotProperty {_gpName = "hide_root", _gcType = PrimitiveType BoolType, _gcGetter = "is_root_hidden", _gcSetter = "set_hide_root", _gcIndex = -1},GodotProperty {_gpName = "drop_mode_flags", _gcType = PrimitiveType IntType, _gcGetter = "get_drop_mode_flags", _gcSetter = "set_drop_mode_flags", _gcIndex = -1},GodotProperty {_gpName = "select_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_select_mode", _gcSetter = "set_select_mode", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "item_activated", _gsArguments = []},GodotSignal {_gsName = "multi_selected", _gsArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "selected", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "column_title_pressed", _gsArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "custom_popup_edited", _gsArguments = [GodotArgument {_gaName = "arrow_clicked", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_collapsed", _gsArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_rmb_edited", _gsArguments = []},GodotSignal {_gsName = "item_edited", _gsArguments = []},GodotSignal {_gsName = "empty_tree_rmb_selected", _gsArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "nothing_selected", _gsArguments = []},GodotSignal {_gsName = "item_double_clicked", _gsArguments = []},GodotSignal {_gsName = "item_rmb_selected", _gsArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_selected", _gsArguments = []},GodotSignal {_gsName = "cell_selected", _gsArguments = []},GodotSignal {_gsName = "button_pressed", _gsArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "item_custom_button_pressed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_range_click_timeout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_popup_select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_text_editor_enter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_text_editor_modal_close", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_value_editor_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_scroll_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_item", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "parent", _gaType = CoreType "Object", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_root", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_column_min_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "min_width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_column_expand", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "expand", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_column_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_hide_root", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_root_hidden", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_next_selected", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_selected", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selected_column", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pressed_button", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_select_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_select_mode", _gmReturnType = EnumType "enum.Tree::SelectMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_columns", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_columns", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_edited", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_edited_column", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_custom_popup_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_item_area_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_item_at_position", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_column_at_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_drop_section_at_position", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "ensure_cursor_is_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_column_titles_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "are_column_titles_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_column_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_column_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scroll", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hide_folding", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hide", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_folding_hidden", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_drop_mode_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_drop_mode_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_allow_rmb_select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "allow", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_allow_rmb_select", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_allow_reselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "allow", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_allow_reselect", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SelectMode", _geValues = fromList [("SELECT_ROW",1),("SELECT_MULTI",2),("SELECT_SINGLE",0)]},GodotEnum {_geName = CustomType "DropModeFlags", _geValues = fromList [("DROP_MODE_DISABLED",0),("DROP_MODE_ON_ITEM",1),("DROP_MODE_INBETWEEN",2)]}]},GodotClass {_gcName = "TextEdit", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MENU_PASTE",2),("SEARCH_WHOLE_WORDS",2),("MENU_CLEAR",3),("MENU_MAX",6),("SEARCH_BACKWARDS",4),("MENU_COPY",1),("MENU_UNDO",5),("MENU_SELECT_ALL",4),("MENU_CUT",0),("SEARCH_MATCH_CASE",1)], _gcProperties = [GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "readonly", _gcType = PrimitiveType BoolType, _gcGetter = "is_readonly", _gcSetter = "set_readonly", _gcIndex = -1},GodotProperty {_gpName = "highlight_current_line", _gcType = PrimitiveType BoolType, _gcGetter = "is_highlight_current_line_enabled", _gcSetter = "set_highlight_current_line", _gcIndex = -1},GodotProperty {_gpName = "syntax_highlighting", _gcType = PrimitiveType BoolType, _gcGetter = "is_syntax_coloring_enabled", _gcSetter = "set_syntax_coloring", _gcIndex = -1},GodotProperty {_gpName = "show_line_numbers", _gcType = PrimitiveType BoolType, _gcGetter = "is_show_line_numbers_enabled", _gcSetter = "set_show_line_numbers", _gcIndex = -1},GodotProperty {_gpName = "highlight_all_occurrences", _gcType = PrimitiveType BoolType, _gcGetter = "is_highlight_all_occurrences_enabled", _gcSetter = "set_highlight_all_occurrences", _gcIndex = -1},GodotProperty {_gpName = "override_selected_font_color", _gcType = PrimitiveType BoolType, _gcGetter = "is_overriding_selected_font_color", _gcSetter = "set_override_selected_font_color", _gcIndex = -1},GodotProperty {_gpName = "context_menu_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_context_menu_enabled", _gcSetter = "set_context_menu_enabled", _gcIndex = -1},GodotProperty {_gpName = "smooth_scrolling", _gcType = PrimitiveType BoolType, _gcGetter = "is_smooth_scroll_enabled", _gcSetter = "set_smooth_scroll_enable", _gcIndex = -1},GodotProperty {_gpName = "v_scroll_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_v_scroll_speed", _gcSetter = "set_v_scroll_speed", _gcIndex = -1},GodotProperty {_gpName = "hiding_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_hiding_enabled", _gcSetter = "set_hiding_enabled", _gcIndex = -1},GodotProperty {_gpName = "wrap_lines", _gcType = PrimitiveType BoolType, _gcGetter = "is_wrapping", _gcSetter = "set_wrap", _gcIndex = -1},GodotProperty {_gpName = "caret_block_mode", _gcType = PrimitiveType BoolType, _gcGetter = "cursor_is_block_mode", _gcSetter = "cursor_set_block_mode", _gcIndex = -1},GodotProperty {_gpName = "caret_blink", _gcType = PrimitiveType BoolType, _gcGetter = "cursor_get_blink_enabled", _gcSetter = "cursor_set_blink_enabled", _gcIndex = -1},GodotProperty {_gpName = "caret_blink_speed", _gcType = PrimitiveType FloatType, _gcGetter = "cursor_get_blink_speed", _gcSetter = "cursor_set_blink_speed", _gcIndex = -1},GodotProperty {_gpName = "caret_moving_by_right_click", _gcType = PrimitiveType BoolType, _gcGetter = "is_right_click_moving_caret", _gcSetter = "set_right_click_moves_caret", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "breakpoint_toggled", _gsArguments = [GodotArgument {_gaName = "row", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "text_changed", _gsArguments = []},GodotSignal {_gsName = "symbol_lookup", _gsArguments = [GodotArgument {_gaName = "symbol", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "row", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "cursor_changed", _gsArguments = []},GodotSignal {_gsName = "request_completion", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_scroll_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_cursor_changed_emit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_text_changed_emit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_push_current_op", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_click_selection_held", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_toggle_draw_caret", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_v_scroll_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "insert_text_at_cursor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_line_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_line", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_set_column", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "adjust_viewport", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "cursor_set_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "adjust_viewport", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"},GodotArgument {_gaName = "can_be_hidden", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "cursor_get_column", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_get_line", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_set_blink_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_get_blink_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_set_blink_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "blink_speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_get_blink_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cursor_set_block_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "cursor_is_block_mode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_right_click_moves_caret", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_right_click_moving_caret", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_readonly", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_readonly", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_wrap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_wrapping", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_context_menu_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_context_menu_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "cut", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "copy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "paste", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "select_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "deselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_selection_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selection_from_line", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selection_from_column", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selection_to_line", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selection_to_column", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selection_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_word_under_cursor", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "search", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "undo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "redo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_undo_history", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_show_line_numbers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_show_line_numbers_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hiding_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_hiding_enabled", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_line_as_hidden", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_line_hidden", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "fold_all_lines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unhide_all_lines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "fold_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "unfold_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "toggle_fold_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "can_fold", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_folded", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_highlight_all_occurrences", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_highlight_all_occurrences_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_override_selected_font_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "override", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_overriding_selected_font_color", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_syntax_coloring", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_syntax_coloring_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_highlight_current_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_highlight_current_line_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_smooth_scroll_enable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_smooth_scroll_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_scroll_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_scroll_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_keyword_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "keyword", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_color_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "begin_key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "end_key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "line_only", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "clear_colors", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "menu_option", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "option", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_menu", _gmReturnType = CustomType "PopupMenu", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SearchFlags", _geValues = fromList [("SEARCH_WHOLE_WORDS",2),("SEARCH_BACKWARDS",4),("SEARCH_MATCH_CASE",1)]},GodotEnum {_geName = CustomType "MenuItems", _geValues = fromList [("MENU_PASTE",2),("MENU_CLEAR",3),("MENU_MAX",6),("MENU_COPY",1),("MENU_UNDO",5),("MENU_SELECT_ALL",4),("MENU_CUT",0)]}]},GodotClass {_gcName = "TreeItem", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("ALIGN_RIGHT",2),("CELL_MODE_CUSTOM",5),("CELL_MODE_ICON",4),("CELL_MODE_RANGE_EXPRESSION",3),("CELL_MODE_RANGE",2),("CELL_MODE_STRING",0),("CELL_MODE_CHECK",1),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "collapsed", _gcType = PrimitiveType BoolType, _gcGetter = "is_collapsed", _gcSetter = "set_collapsed", _gcIndex = -1},GodotProperty {_gpName = "disable_folding", _gcType = PrimitiveType BoolType, _gcGetter = "is_folding_disabled", _gcSetter = "set_disable_folding", _gcIndex = -1},GodotProperty {_gpName = "custom_minimum_height", _gcType = PrimitiveType IntType, _gcGetter = "get_custom_minimum_height", _gcSetter = "set_custom_minimum_height", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_cell_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_mode", _gmReturnType = EnumType "enum.TreeItem::TreeCellMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_checked", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "checked", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_checked", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_icon_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "region", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon_region", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_icon_max_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_icon_max_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_range", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_range_config", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "min", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "step", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "expr", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_range_config", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_metadata", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "callback", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collapsed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_collapsed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_custom_minimum_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_minimum_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_next", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_prev", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_parent", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_children", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_next_visible", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_prev_visible", _gmReturnType = CustomType "TreeItem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_child", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "child", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_selectable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "selectable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_selectable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_selected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "deselect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_editable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_custom_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing},GodotArgument {_gaName = "just_outline", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "clear_custom_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_bg_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_as_button", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_custom_set_as_button", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_button", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "button_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "tooltip", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_button_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_button", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_button", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase_button", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_button_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "button_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_right", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_expand_right", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tooltip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tooltip", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_text_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "text_align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text_align", _gmReturnType = EnumType "enum.TreeItem::TextAlign", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_to_top", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "move_to_bottom", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disable_folding", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_folding_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "TreeCellMode", _geValues = fromList [("CELL_MODE_CUSTOM",5),("CELL_MODE_ICON",4),("CELL_MODE_RANGE_EXPRESSION",3),("CELL_MODE_RANGE",2),("CELL_MODE_STRING",0),("CELL_MODE_CHECK",1)]},GodotEnum {_geName = CustomType "TextAlign", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]}]},GodotClass {_gcName = "OptionButton", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "items", _gcType = CoreType "Array", _gcGetter = "_get_items", _gcSetter = "_set_items", _gcIndex = -1},GodotProperty {_gpName = "selected", _gcType = PrimitiveType IntType, _gcGetter = "get_selected", _gcSetter = "_select_int", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "item_selected", _gsArguments = [GodotArgument {_gaName = "ID", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "add_icon_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "label", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_icon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_metadata", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "metadata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_icon", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_item_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_separator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "select", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_selected", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selected_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_selected_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_select_int", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_popup", _gmReturnType = CustomType "PopupMenu", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_items", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_items", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SpinBox", _gcBaseClass = "Range", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "editable", _gcType = PrimitiveType BoolType, _gcGetter = "is_editable", _gcSetter = "set_editable", _gcIndex = -1},GodotProperty {_gpName = "prefix", _gcType = CoreType "String", _gcGetter = "get_prefix", _gcSetter = "set_prefix", _gcIndex = -1},GodotProperty {_gpName = "suffix", _gcType = CoreType "String", _gcGetter = "get_suffix", _gcSetter = "set_suffix", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_text_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_suffix", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "suffix", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_suffix", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_prefix", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "prefix", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_prefix", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_editable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "editable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_line_edit_focus_exit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_line_edit", _gmReturnType = CustomType "LineEdit", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_line_edit_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_range_click_timeout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ReferenceRect", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ColorPicker", _gcBaseClass = "BoxContainer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_pick_color", _gcSetter = "set_pick_color", _gcIndex = -1},GodotProperty {_gpName = "edit_alpha", _gcType = PrimitiveType BoolType, _gcGetter = "is_editing_alpha", _gcSetter = "set_edit_alpha", _gcIndex = -1},GodotProperty {_gpName = "raw_mode", _gcType = PrimitiveType BoolType, _gcGetter = "is_raw_mode", _gcSetter = "set_raw_mode", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "color_changed", _gsArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_pick_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pick_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_raw_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_raw_mode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_edit_alpha", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "show", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editing_alpha", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_preset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_value_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_html_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_text_type_toggled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_add_preset_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_screen_pick_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_sample_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_presets", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_hsv_draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_uv_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_w_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_preset_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_screen_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ColorPickerButton", _gcBaseClass = "Button", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_pick_color", _gcSetter = "set_pick_color", _gcIndex = -1},GodotProperty {_gpName = "edit_alpha", _gcType = PrimitiveType BoolType, _gcGetter = "is_editing_alpha", _gcSetter = "set_edit_alpha", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "color_changed", _gsArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_pick_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pick_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_picker", _gmReturnType = CustomType "ColorPicker", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_popup", _gmReturnType = CustomType "PopupPanel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_edit_alpha", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "show", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editing_alpha", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_color_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "RichTextLabel", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ITEM_UNDERLINE",6),("ITEM_META",11),("ITEM_ALIGN",7),("ITEM_FRAME",0),("ALIGN_RIGHT",2),("ALIGN_FILL",3),("ITEM_FONT",4),("ITEM_TABLE",10),("ITEM_COLOR",5),("ITEM_TEXT",1),("ITEM_IMAGE",2),("LIST_NUMBERS",0),("LIST_LETTERS",1),("ITEM_LIST",9),("ITEM_NEWLINE",3),("ITEM_INDENT",8),("LIST_DOTS",2),("ALIGN_LEFT",0),("ALIGN_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "bbcode_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_bbcode", _gcSetter = "set_use_bbcode", _gcIndex = -1},GodotProperty {_gpName = "bbcode_text", _gcType = CoreType "String", _gcGetter = "get_bbcode", _gcSetter = "set_bbcode", _gcIndex = -1},GodotProperty {_gpName = "visible_characters", _gcType = PrimitiveType IntType, _gcGetter = "get_visible_characters", _gcSetter = "set_visible_characters", _gcIndex = -1},GodotProperty {_gpName = "percent_visible", _gcType = PrimitiveType FloatType, _gcGetter = "get_percent_visible", _gcSetter = "set_percent_visible", _gcIndex = -1},GodotProperty {_gpName = "meta_underlined", _gcType = PrimitiveType BoolType, _gcGetter = "is_meta_underlined", _gcSetter = "set_meta_underline", _gcIndex = -1},GodotProperty {_gpName = "tab_size", _gcType = PrimitiveType IntType, _gcGetter = "get_tab_size", _gcSetter = "set_tab_size", _gcIndex = -1},GodotProperty {_gpName = "text", _gcType = CoreType "String", _gcGetter = "get_text", _gcSetter = "set_text", _gcIndex = -1},GodotProperty {_gpName = "scroll_active", _gcType = PrimitiveType BoolType, _gcGetter = "is_scroll_active", _gcSetter = "set_scroll_active", _gcIndex = -1},GodotProperty {_gpName = "scroll_following", _gcType = PrimitiveType BoolType, _gcGetter = "is_scroll_following", _gcSetter = "set_scroll_follow", _gcIndex = -1},GodotProperty {_gpName = "selection_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_selection_enabled", _gcSetter = "set_selection_enabled", _gcIndex = -1},GodotProperty {_gpName = "override_selected_font_color", _gcType = PrimitiveType BoolType, _gcGetter = "is_overriding_selected_font_color", _gcSetter = "set_override_selected_font_color", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "meta_clicked", _gsArguments = [GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "meta_hover_started", _gsArguments = [GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "meta_hover_ended", _gsArguments = [GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_scroll_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_text", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_image", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "newline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove_line", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_font", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "font", _gaType = CustomType "Font", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "align", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_indent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "level", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_list", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_meta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_underline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "push_table", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "columns", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_table_column_expand", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "column", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "expand", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ratio", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "push_cell", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "pop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_meta_underline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_meta_underlined", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_override_selected_font_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "override", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_overriding_selected_font_color", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scroll_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_scroll_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scroll_follow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "follow", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_scroll_following", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_v_scroll", _gmReturnType = CustomType "VScrollBar", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "scroll_to_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tab_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "spaces", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tab_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_selection_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_selection_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "parse_bbcode", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bbcode", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "append_bbcode", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bbcode", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bbcode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "text", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bbcode", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_visible_characters", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_visible_characters", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_percent_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "percent_visible", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_percent_visible", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_total_character_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_bbcode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_bbcode", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_line_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visible_line_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Align", _geValues = fromList [("ALIGN_RIGHT",2),("ALIGN_FILL",3),("ALIGN_LEFT",0),("ALIGN_CENTER",1)]},GodotEnum {_geName = CustomType "ListType", _geValues = fromList [("LIST_NUMBERS",0),("LIST_LETTERS",1),("LIST_DOTS",2)]},GodotEnum {_geName = CustomType "ItemType", _geValues = fromList [("ITEM_UNDERLINE",6),("ITEM_META",11),("ITEM_ALIGN",7),("ITEM_FRAME",0),("ITEM_FONT",4),("ITEM_TABLE",10),("ITEM_COLOR",5),("ITEM_TEXT",1),("ITEM_IMAGE",2),("ITEM_LIST",9),("ITEM_NEWLINE",3),("ITEM_INDENT",8)]}]},GodotClass {_gcName = "VideoPlayer", _gcBaseClass = "Control", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "audio_track", _gcType = PrimitiveType IntType, _gcGetter = "get_audio_track", _gcSetter = "set_audio_track", _gcIndex = -1},GodotProperty {_gpName = "stream", _gcType = CustomType "VideoStream", _gcGetter = "get_stream", _gcSetter = "set_stream", _gcIndex = -1},GodotProperty {_gpName = "volume_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_volume_db", _gcSetter = "set_volume_db", _gcIndex = -1},GodotProperty {_gpName = "volume", _gcType = PrimitiveType FloatType, _gcGetter = "get_volume", _gcSetter = "set_volume", _gcIndex = -1},GodotProperty {_gpName = "autoplay", _gcType = PrimitiveType BoolType, _gcGetter = "has_autoplay", _gcSetter = "set_autoplay", _gcIndex = -1},GodotProperty {_gpName = "paused", _gcType = PrimitiveType BoolType, _gcGetter = "is_paused", _gcSetter = "set_paused", _gcIndex = -1},GodotProperty {_gpName = "expand", _gcType = PrimitiveType BoolType, _gcGetter = "has_expand", _gcSetter = "set_expand", _gcIndex = -1},GodotProperty {_gpName = "buffering_msec", _gcType = PrimitiveType IntType, _gcGetter = "get_buffering_msec", _gcSetter = "set_buffering_msec", _gcIndex = -1},GodotProperty {_gpName = "stream_position", _gcType = PrimitiveType FloatType, _gcGetter = "get_stream_position", _gcSetter = "set_stream_position", _gcIndex = -1},GodotProperty {_gpName = "bus", _gcType = CoreType "String", _gcGetter = "get_bus", _gcSetter = "set_bus", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "VideoStream", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream", _gmReturnType = CustomType "VideoStream", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_paused", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "paused", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_paused", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_volume", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "volume", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_volume", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_volume_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_volume_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_audio_track", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "track", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_audio_track", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_stream_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stream_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream_position", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autoplay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_autoplay", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_expand", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_expand", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_buffering_msec", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "msec", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_buffering_msec", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_video_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PopupDialog", _gcBaseClass = "Popup", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VideoStream", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "MarginContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ViewportContainer", _gcBaseClass = "Container", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "stretch", _gcType = PrimitiveType BoolType, _gcGetter = "is_stretch_enabled", _gcSetter = "set_stretch", _gcIndex = -1},GodotProperty {_gpName = "stretch_shrink", _gcType = PrimitiveType IntType, _gcGetter = "get_stretch_shrink", _gcSetter = "set_stretch_shrink", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_stretch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_stretch_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stretch_shrink", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stretch_shrink", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Spatial", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_ENTER_WORLD",41),("NOTIFICATION_EXIT_WORLD",42),("NOTIFICATION_TRANSFORM_CHANGED",29),("NOTIFICATION_VISIBILITY_CHANGED",43)], _gcProperties = [GodotProperty {_gpName = "transform", _gcType = CoreType "Transform", _gcGetter = "get_transform", _gcSetter = "set_transform", _gcIndex = -1},GodotProperty {_gpName = "global_transform", _gcType = CoreType "Transform", _gcGetter = "get_global_transform", _gcSetter = "set_global_transform", _gcIndex = -1},GodotProperty {_gpName = "translation", _gcType = CoreType "Vector3", _gcGetter = "get_translation", _gcSetter = "set_translation", _gcIndex = -1},GodotProperty {_gpName = "rotation_degrees", _gcType = CoreType "Vector3", _gcGetter = "get_rotation_degrees", _gcSetter = "set_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "rotation", _gcType = CoreType "Vector3", _gcGetter = "get_rotation", _gcSetter = "set_rotation", _gcIndex = -1},GodotProperty {_gpName = "scale", _gcType = CoreType "Vector3", _gcGetter = "get_scale", _gcSetter = "set_scale", _gcIndex = -1},GodotProperty {_gpName = "visible", _gcType = PrimitiveType BoolType, _gcGetter = "is_visible", _gcSetter = "set_visible", _gcIndex = -1},GodotProperty {_gpName = "gizmo", _gcType = CustomType "SpatialGizmo", _gcGetter = "get_gizmo", _gcSetter = "set_gizmo", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "visibility_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_translation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "translation", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_translation", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "euler", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rotation", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "euler_degrees", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rotation_degrees", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scale", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_global_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "global", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_parent_spatial", _gmReturnType = CustomType "Spatial", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ignore_transform_notification", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_as_toplevel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_set_as_toplevel", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_world", _gmReturnType = CustomType "World", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_gizmo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "update_gizmo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gizmo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gizmo", _gaType = CustomType "SpatialGizmo", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gizmo", _gmReturnType = CustomType "SpatialGizmo", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_visible_in_tree", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "show", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "hide", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_notify_local_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_local_transform_notification_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_notify_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_transform_notification_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "rotate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "global_rotate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "global_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "global_translate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rotate_object_local", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "scale_object_local", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "translate_object_local", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rotate_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rotate_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rotate_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "translate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "orthonormalize", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_identity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "look_at", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "up", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "look_at_from_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "up", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "to_local", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "global_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "to_global", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "SpatialGizmo", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Skeleton", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NOTIFICATION_UPDATE_SKELETON",50)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_bone", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_bone", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_parent", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_parent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "parent_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "unparent_bone_and_rest", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_rest", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_rest", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rest", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_disable_rest", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_bone_rest_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "bind_child_node_to_bone", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "unbind_child_node_from_bone", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bound_child_nodes_to_bone", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_bones", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bone_pose", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_pose", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "pose", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_global_pose", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "pose", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_global_pose", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_custom_pose", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bone_custom_pose", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "custom_pose", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "AnimationPlayer", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ANIMATION_PROCESS_PHYSICS",0),("ANIMATION_PROCESS_IDLE",1)], _gcProperties = [GodotProperty {_gpName = "root_node", _gcType = CoreType "NodePath", _gcGetter = "get_root", _gcSetter = "set_root", _gcIndex = -1},GodotProperty {_gpName = "current_animation", _gcType = CoreType "String", _gcGetter = "get_current_animation", _gcSetter = "set_current_animation", _gcIndex = -1},GodotProperty {_gpName = "assigned_animation", _gcType = CoreType "String", _gcGetter = "get_assigned_animation", _gcSetter = "set_assigned_animation", _gcIndex = -1},GodotProperty {_gpName = "autoplay", _gcType = CoreType "String", _gcGetter = "get_autoplay", _gcSetter = "set_autoplay", _gcIndex = -1},GodotProperty {_gpName = "current_animation_length", _gcType = PrimitiveType FloatType, _gcGetter = "get_current_animation_length", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "current_animation_position", _gcType = PrimitiveType FloatType, _gcGetter = "get_current_animation_position", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "playback_process_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_animation_process_mode", _gcSetter = "set_animation_process_mode", _gcIndex = -1},GodotProperty {_gpName = "playback_default_blend_time", _gcType = PrimitiveType FloatType, _gcGetter = "get_default_blend_time", _gcSetter = "set_default_blend_time", _gcIndex = -1},GodotProperty {_gpName = "playback_active", _gcType = PrimitiveType BoolType, _gcGetter = "is_active", _gcSetter = "set_active", _gcIndex = -1},GodotProperty {_gpName = "playback_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_speed_scale", _gcSetter = "set_speed_scale", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "animation_started", _gsArguments = [GodotArgument {_gaName = "anim_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "animation_changed", _gsArguments = [GodotArgument {_gaName = "old_name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "new_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "animation_finished", _gsArguments = [GodotArgument {_gaName = "anim_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_node_removed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_animation_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_animation", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "animation", _gaType = CustomType "Animation", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "newname", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_animation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation", _gmReturnType = CustomType "Animation", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "animation_set_next", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim_from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "anim_to", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_get_next", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim_from", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_blend_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim_from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "anim_to", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_blend_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim_from", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "anim_to", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_default_blend_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_blend_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "custom_blend", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "custom_speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"},GodotArgument {_gaName = "from_end", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "play_backwards", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "custom_blend", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "reset", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_assigned_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_assigned_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "queue", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_queue", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_speed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_speed_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autoplay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_autoplay", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_root", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_root", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "animation", _gaType = CustomType "Animation", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_caches", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_animation_process_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation_process_mode", _gmReturnType = EnumType "enum.AnimationPlayer::AnimationProcessMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_animation_position", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_animation_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "seconds", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "update", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "advance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "AnimationProcessMode", _geValues = fromList [("ANIMATION_PROCESS_PHYSICS",0),("ANIMATION_PROCESS_IDLE",1)]}]},GodotClass {_gcName = "Tween", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("TRANS_SINE",1),("TWEEN_PROCESS_IDLE",1),("TWEEN_PROCESS_PHYSICS",0),("TRANS_LINEAR",0),("EASE_OUT_IN",3),("TRANS_QUAD",4),("TRANS_EXPO",5),("EASE_IN",0),("TRANS_QUINT",2),("TRANS_BOUNCE",9),("TRANS_ELASTIC",6),("TRANS_CUBIC",7),("EASE_OUT",1),("EASE_IN_OUT",2),("TRANS_QUART",3),("TRANS_BACK",10),("TRANS_CIRC",8)], _gcProperties = [GodotProperty {_gpName = "repeat", _gcType = PrimitiveType BoolType, _gcGetter = "is_repeat", _gcSetter = "set_repeat", _gcIndex = -1},GodotProperty {_gpName = "playback_process_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_tween_process_mode", _gcSetter = "set_tween_process_mode", _gcIndex = -1},GodotProperty {_gpName = "playback_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_speed_scale", _gcSetter = "set_speed_scale", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "tween_step", _gsArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "key", _gaType = CoreType "NodePath", _gaDefaultValue = Just ""},GodotArgument {_gaName = "elapsed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "value", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tween_completed", _gsArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "key", _gaType = CoreType "NodePath", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "tween_started", _gsArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "key", _gaType = CoreType "NodePath", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "active", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_repeat", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_repeat", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "repeat", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_speed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_speed_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tween_process_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tween_process_mode", _gmReturnType = EnumType "enum.Tween::TweenProcessMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "start", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "reset", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "reset_all", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "stop_all", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "resume", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "resume_all", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "remove", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "_remove", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "first_only", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_all", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tell", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_runtime", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "interpolate_property", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "final_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "interpolate_method", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "final_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "interpolate_callback", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "callback", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg2", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg3", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg4", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg5", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "interpolate_deferred_callback", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "callback", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg2", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg3", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg4", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "arg5", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "follow_property", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target_property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "follow_method", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "target_method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "targeting_property", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_val", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "final_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "targeting_method", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "initial_method", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "final_val", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "duration", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "trans_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ease_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]}], _gcEnums = [GodotEnum {_geName = CustomType "TransitionType", _geValues = fromList [("TRANS_SINE",1),("TRANS_LINEAR",0),("TRANS_QUAD",4),("TRANS_EXPO",5),("TRANS_QUINT",2),("TRANS_BOUNCE",9),("TRANS_ELASTIC",6),("TRANS_CUBIC",7),("TRANS_QUART",3),("TRANS_BACK",10),("TRANS_CIRC",8)]},GodotEnum {_geName = CustomType "TweenProcessMode", _geValues = fromList [("TWEEN_PROCESS_IDLE",1),("TWEEN_PROCESS_PHYSICS",0)]},GodotEnum {_geName = CustomType "EaseType", _geValues = fromList [("EASE_OUT_IN",3),("EASE_IN",0),("EASE_OUT",1),("EASE_IN_OUT",2)]}]},GodotClass {_gcName = "BoneAttachment", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bone_name", _gcType = CoreType "String", _gcGetter = "get_bone_name", _gcSetter = "set_bone_name", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_bone_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bone_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bone_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualInstance", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "layers", _gcType = PrimitiveType IntType, _gcGetter = "get_layer_mask", _gcSetter = "set_layer_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_get_visual_instance_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_layer_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_layer_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_transformed_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "GeometryInstance", _gcBaseClass = "VisualInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("SHADOW_CASTING_SETTING_SHADOWS_ONLY",3),("FLAG_USE_BAKED_LIGHT",0),("FLAG_MAX",1),("SHADOW_CASTING_SETTING_DOUBLE_SIDED",2),("SHADOW_CASTING_SETTING_OFF",0),("SHADOW_CASTING_SETTING_ON",1)], _gcProperties = [GodotProperty {_gpName = "material_override", _gcType = CustomType "ShaderMaterial,SpatialMaterial", _gcGetter = "get_material_override", _gcSetter = "set_material_override", _gcIndex = -1},GodotProperty {_gpName = "cast_shadow", _gcType = PrimitiveType IntType, _gcGetter = "get_cast_shadows_setting", _gcSetter = "set_cast_shadows_setting", _gcIndex = -1},GodotProperty {_gpName = "extra_cull_margin", _gcType = PrimitiveType FloatType, _gcGetter = "get_extra_cull_margin", _gcSetter = "set_extra_cull_margin", _gcIndex = -1},GodotProperty {_gpName = "use_in_baked_light", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 0},GodotProperty {_gpName = "lod_min_distance", _gcType = PrimitiveType IntType, _gcGetter = "get_lod_min_distance", _gcSetter = "set_lod_min_distance", _gcIndex = -1},GodotProperty {_gpName = "lod_min_hysteresis", _gcType = PrimitiveType IntType, _gcGetter = "get_lod_min_hysteresis", _gcSetter = "set_lod_min_hysteresis", _gcIndex = -1},GodotProperty {_gpName = "lod_max_distance", _gcType = PrimitiveType IntType, _gcGetter = "get_lod_max_distance", _gcSetter = "set_lod_max_distance", _gcIndex = -1},GodotProperty {_gpName = "lod_max_hysteresis", _gcType = PrimitiveType IntType, _gcGetter = "get_lod_max_hysteresis", _gcSetter = "set_lod_max_hysteresis", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_material_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_material_override", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_cast_shadows_setting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shadow_casting_setting", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cast_shadows_setting", _gmReturnType = EnumType "enum.GeometryInstance::ShadowCastingSetting", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lod_max_hysteresis", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lod_max_hysteresis", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lod_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lod_max_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lod_min_hysteresis", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lod_min_hysteresis", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lod_min_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lod_min_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_extra_cull_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extra_cull_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Flags", _geValues = fromList [("FLAG_USE_BAKED_LIGHT",0),("FLAG_MAX",1)]},GodotEnum {_geName = CustomType "ShadowCastingSetting", _geValues = fromList [("SHADOW_CASTING_SETTING_SHADOWS_ONLY",3),("SHADOW_CASTING_SETTING_DOUBLE_SIDED",2),("SHADOW_CASTING_SETTING_OFF",0),("SHADOW_CASTING_SETTING_ON",1)]}]},GodotClass {_gcName = "Camera", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PROJECTION_ORTHOGONAL",1),("KEEP_HEIGHT",1),("DOPPLER_TRACKING_PHYSICS_STEP",2),("DOPPLER_TRACKING_DISABLED",0),("KEEP_WIDTH",0),("DOPPLER_TRACKING_IDLE_STEP",1),("PROJECTION_PERSPECTIVE",0)], _gcProperties = [GodotProperty {_gpName = "keep_aspect", _gcType = PrimitiveType IntType, _gcGetter = "get_keep_aspect_mode", _gcSetter = "set_keep_aspect_mode", _gcIndex = -1},GodotProperty {_gpName = "cull_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_cull_mask", _gcSetter = "set_cull_mask", _gcIndex = -1},GodotProperty {_gpName = "environment", _gcType = CustomType "Environment", _gcGetter = "get_environment", _gcSetter = "set_environment", _gcIndex = -1},GodotProperty {_gpName = "h_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_h_offset", _gcSetter = "set_h_offset", _gcIndex = -1},GodotProperty {_gpName = "v_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_v_offset", _gcSetter = "set_v_offset", _gcIndex = -1},GodotProperty {_gpName = "doppler_tracking", _gcType = PrimitiveType IntType, _gcGetter = "get_doppler_tracking", _gcSetter = "set_doppler_tracking", _gcIndex = -1},GodotProperty {_gpName = "projection", _gcType = PrimitiveType IntType, _gcGetter = "get_projection", _gcSetter = "set_projection", _gcIndex = -1},GodotProperty {_gpName = "current", _gcType = PrimitiveType BoolType, _gcGetter = "is_current", _gcSetter = "set_current", _gcIndex = -1},GodotProperty {_gpName = "fov", _gcType = PrimitiveType FloatType, _gcGetter = "get_fov", _gcSetter = "set_fov", _gcIndex = -1},GodotProperty {_gpName = "size", _gcType = PrimitiveType FloatType, _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "near", _gcType = PrimitiveType FloatType, _gcGetter = "get_znear", _gcSetter = "set_znear", _gcIndex = -1},GodotProperty {_gpName = "far", _gcType = PrimitiveType FloatType, _gcGetter = "get_zfar", _gcSetter = "set_zfar", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "project_ray_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "project_local_ray_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "project_ray_origin", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "unproject_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_position_behind", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "project_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_perspective", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fov", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_near", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_far", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_orthogonal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_near", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z_far", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "make_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_current", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_camera_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_fov", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_zfar", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_znear", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fov", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_zfar", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_znear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_projection", _gmReturnType = EnumType "enum.Camera::Projection", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_projection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_h_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cull_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CustomType "Environment", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_environment", _gmReturnType = CustomType "Environment", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_keep_aspect_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_keep_aspect_mode", _gmReturnType = EnumType "enum.Camera::KeepAspect", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_doppler_tracking", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_doppler_tracking", _gmReturnType = EnumType "enum.Camera::DopplerTracking", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "KeepAspect", _geValues = fromList [("KEEP_HEIGHT",1),("KEEP_WIDTH",0)]},GodotEnum {_geName = CustomType "Projection", _geValues = fromList [("PROJECTION_ORTHOGONAL",1),("PROJECTION_PERSPECTIVE",0)]},GodotEnum {_geName = CustomType "DopplerTracking", _geValues = fromList [("DOPPLER_TRACKING_PHYSICS_STEP",2),("DOPPLER_TRACKING_DISABLED",0),("DOPPLER_TRACKING_IDLE_STEP",1)]}]},GodotClass {_gcName = "Environment", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("TONE_MAPPER_FILMIC",2),("SSAO_QUALITY_LOW",0),("BG_CANVAS",4),("DOF_BLUR_QUALITY_LOW",0),("GLOW_BLEND_MODE_ADDITIVE",0),("DOF_BLUR_QUALITY_HIGH",2),("DOF_BLUR_QUALITY_MEDIUM",1),("BG_SKY",2),("SSAO_QUALITY_MEDIUM",1),("GLOW_BLEND_MODE_SOFTLIGHT",2),("TONE_MAPPER_LINEAR",0),("BG_MAX",6),("BG_COLOR_SKY",3),("SSAO_BLUR_DISABLED",0),("SSAO_BLUR_2x2",2),("TONE_MAPPER_ACES",3),("SSAO_BLUR_1x1",1),("BG_COLOR",1),("SSAO_BLUR_3x3",3),("GLOW_BLEND_MODE_REPLACE",3),("GLOW_BLEND_MODE_SCREEN",1),("SSAO_QUALITY_HIGH",2),("TONE_MAPPER_REINHARDT",1),("BG_CLEAR_COLOR",0),("BG_KEEP",5)], _gcProperties = [GodotProperty {_gpName = "background_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_background", _gcSetter = "set_background", _gcIndex = -1},GodotProperty {_gpName = "background_sky", _gcType = CustomType "Sky", _gcGetter = "get_sky", _gcSetter = "set_sky", _gcIndex = -1},GodotProperty {_gpName = "background_sky_custom_fov", _gcType = PrimitiveType FloatType, _gcGetter = "get_sky_custom_fov", _gcSetter = "set_sky_custom_fov", _gcIndex = -1},GodotProperty {_gpName = "background_color", _gcType = CoreType "Color", _gcGetter = "get_bg_color", _gcSetter = "set_bg_color", _gcIndex = -1},GodotProperty {_gpName = "background_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_bg_energy", _gcSetter = "set_bg_energy", _gcIndex = -1},GodotProperty {_gpName = "background_canvas_max_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_canvas_max_layer", _gcSetter = "set_canvas_max_layer", _gcIndex = -1},GodotProperty {_gpName = "ambient_light_color", _gcType = CoreType "Color", _gcGetter = "get_ambient_light_color", _gcSetter = "set_ambient_light_color", _gcIndex = -1},GodotProperty {_gpName = "ambient_light_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_ambient_light_energy", _gcSetter = "set_ambient_light_energy", _gcIndex = -1},GodotProperty {_gpName = "ambient_light_sky_contribution", _gcType = PrimitiveType FloatType, _gcGetter = "get_ambient_light_sky_contribution", _gcSetter = "set_ambient_light_sky_contribution", _gcIndex = -1},GodotProperty {_gpName = "fog_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_fog_enabled", _gcSetter = "set_fog_enabled", _gcIndex = -1},GodotProperty {_gpName = "fog_color", _gcType = CoreType "Color", _gcGetter = "get_fog_color", _gcSetter = "set_fog_color", _gcIndex = -1},GodotProperty {_gpName = "fog_sun_color", _gcType = CoreType "Color", _gcGetter = "get_fog_sun_color", _gcSetter = "set_fog_sun_color", _gcIndex = -1},GodotProperty {_gpName = "fog_sun_amount", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_sun_amount", _gcSetter = "set_fog_sun_amount", _gcIndex = -1},GodotProperty {_gpName = "fog_depth_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_fog_depth_enabled", _gcSetter = "set_fog_depth_enabled", _gcIndex = -1},GodotProperty {_gpName = "fog_depth_begin", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_depth_begin", _gcSetter = "set_fog_depth_begin", _gcIndex = -1},GodotProperty {_gpName = "fog_depth_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_depth_curve", _gcSetter = "set_fog_depth_curve", _gcIndex = -1},GodotProperty {_gpName = "fog_transmit_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_fog_transmit_enabled", _gcSetter = "set_fog_transmit_enabled", _gcIndex = -1},GodotProperty {_gpName = "fog_transmit_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_transmit_curve", _gcSetter = "set_fog_transmit_curve", _gcIndex = -1},GodotProperty {_gpName = "fog_height_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_fog_height_enabled", _gcSetter = "set_fog_height_enabled", _gcIndex = -1},GodotProperty {_gpName = "fog_height_min", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_height_min", _gcSetter = "set_fog_height_min", _gcIndex = -1},GodotProperty {_gpName = "fog_height_max", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_height_max", _gcSetter = "set_fog_height_max", _gcIndex = -1},GodotProperty {_gpName = "fog_height_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_fog_height_curve", _gcSetter = "set_fog_height_curve", _gcIndex = -1},GodotProperty {_gpName = "tonemap_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_tonemapper", _gcSetter = "set_tonemapper", _gcIndex = -1},GodotProperty {_gpName = "tonemap_exposure", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_exposure", _gcSetter = "set_tonemap_exposure", _gcIndex = -1},GodotProperty {_gpName = "tonemap_white", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_white", _gcSetter = "set_tonemap_white", _gcIndex = -1},GodotProperty {_gpName = "auto_exposure_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_tonemap_auto_exposure", _gcSetter = "set_tonemap_auto_exposure", _gcIndex = -1},GodotProperty {_gpName = "auto_exposure_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_auto_exposure_grey", _gcSetter = "set_tonemap_auto_exposure_grey", _gcIndex = -1},GodotProperty {_gpName = "auto_exposure_min_luma", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_auto_exposure_min", _gcSetter = "set_tonemap_auto_exposure_min", _gcIndex = -1},GodotProperty {_gpName = "auto_exposure_max_luma", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_auto_exposure_max", _gcSetter = "set_tonemap_auto_exposure_max", _gcIndex = -1},GodotProperty {_gpName = "auto_exposure_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_tonemap_auto_exposure_speed", _gcSetter = "set_tonemap_auto_exposure_speed", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_ssr_enabled", _gcSetter = "set_ssr_enabled", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_max_steps", _gcType = PrimitiveType IntType, _gcGetter = "get_ssr_max_steps", _gcSetter = "set_ssr_max_steps", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_fade_in", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssr_fade_in", _gcSetter = "set_ssr_fade_in", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_fade_out", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssr_fade_out", _gcSetter = "set_ssr_fade_out", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_depth_tolerance", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssr_depth_tolerance", _gcSetter = "set_ssr_depth_tolerance", _gcIndex = -1},GodotProperty {_gpName = "ss_reflections_roughness", _gcType = PrimitiveType BoolType, _gcGetter = "is_ssr_rough", _gcSetter = "set_ssr_rough", _gcIndex = -1},GodotProperty {_gpName = "ssao_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_ssao_enabled", _gcSetter = "set_ssao_enabled", _gcIndex = -1},GodotProperty {_gpName = "ssao_radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_radius", _gcSetter = "set_ssao_radius", _gcIndex = -1},GodotProperty {_gpName = "ssao_intensity", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_intensity", _gcSetter = "set_ssao_intensity", _gcIndex = -1},GodotProperty {_gpName = "ssao_radius2", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_radius2", _gcSetter = "set_ssao_radius2", _gcIndex = -1},GodotProperty {_gpName = "ssao_intensity2", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_intensity2", _gcSetter = "set_ssao_intensity2", _gcIndex = -1},GodotProperty {_gpName = "ssao_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_bias", _gcSetter = "set_ssao_bias", _gcIndex = -1},GodotProperty {_gpName = "ssao_light_affect", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_direct_light_affect", _gcSetter = "set_ssao_direct_light_affect", _gcIndex = -1},GodotProperty {_gpName = "ssao_color", _gcType = CoreType "Color", _gcGetter = "get_ssao_color", _gcSetter = "set_ssao_color", _gcIndex = -1},GodotProperty {_gpName = "ssao_quality", _gcType = PrimitiveType IntType, _gcGetter = "get_ssao_quality", _gcSetter = "set_ssao_quality", _gcIndex = -1},GodotProperty {_gpName = "ssao_blur", _gcType = PrimitiveType IntType, _gcGetter = "get_ssao_blur", _gcSetter = "set_ssao_blur", _gcIndex = -1},GodotProperty {_gpName = "ssao_edge_sharpness", _gcType = PrimitiveType FloatType, _gcGetter = "get_ssao_edge_sharpness", _gcSetter = "set_ssao_edge_sharpness", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_far_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_dof_blur_far_enabled", _gcSetter = "set_dof_blur_far_enabled", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_far_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_far_distance", _gcSetter = "set_dof_blur_far_distance", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_far_transition", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_far_transition", _gcSetter = "set_dof_blur_far_transition", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_far_amount", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_far_amount", _gcSetter = "set_dof_blur_far_amount", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_far_quality", _gcType = PrimitiveType IntType, _gcGetter = "get_dof_blur_far_quality", _gcSetter = "set_dof_blur_far_quality", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_near_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_dof_blur_near_enabled", _gcSetter = "set_dof_blur_near_enabled", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_near_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_near_distance", _gcSetter = "set_dof_blur_near_distance", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_near_transition", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_near_transition", _gcSetter = "set_dof_blur_near_transition", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_near_amount", _gcType = PrimitiveType FloatType, _gcGetter = "get_dof_blur_near_amount", _gcSetter = "set_dof_blur_near_amount", _gcIndex = -1},GodotProperty {_gpName = "dof_blur_near_quality", _gcType = PrimitiveType IntType, _gcGetter = "get_dof_blur_near_quality", _gcSetter = "set_dof_blur_near_quality", _gcIndex = -1},GodotProperty {_gpName = "glow_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_enabled", _gcSetter = "set_glow_enabled", _gcIndex = -1},GodotProperty {_gpName = "glow_levels/1", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 0},GodotProperty {_gpName = "glow_levels/2", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 1},GodotProperty {_gpName = "glow_levels/3", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 2},GodotProperty {_gpName = "glow_levels/4", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 3},GodotProperty {_gpName = "glow_levels/5", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 4},GodotProperty {_gpName = "glow_levels/6", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 5},GodotProperty {_gpName = "glow_levels/7", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_level_enabled", _gcSetter = "set_glow_level", _gcIndex = 6},GodotProperty {_gpName = "glow_intensity", _gcType = PrimitiveType FloatType, _gcGetter = "get_glow_intensity", _gcSetter = "set_glow_intensity", _gcIndex = -1},GodotProperty {_gpName = "glow_strength", _gcType = PrimitiveType FloatType, _gcGetter = "get_glow_strength", _gcSetter = "set_glow_strength", _gcIndex = -1},GodotProperty {_gpName = "glow_bloom", _gcType = PrimitiveType FloatType, _gcGetter = "get_glow_bloom", _gcSetter = "set_glow_bloom", _gcIndex = -1},GodotProperty {_gpName = "glow_blend_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_glow_blend_mode", _gcSetter = "set_glow_blend_mode", _gcIndex = -1},GodotProperty {_gpName = "glow_hdr_threshold", _gcType = PrimitiveType FloatType, _gcGetter = "get_glow_hdr_bleed_threshold", _gcSetter = "set_glow_hdr_bleed_threshold", _gcIndex = -1},GodotProperty {_gpName = "glow_hdr_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_glow_hdr_bleed_scale", _gcSetter = "set_glow_hdr_bleed_scale", _gcIndex = -1},GodotProperty {_gpName = "glow_bicubic_upscale", _gcType = PrimitiveType BoolType, _gcGetter = "is_glow_bicubic_upscale_enabled", _gcSetter = "set_glow_bicubic_upscale", _gcIndex = -1},GodotProperty {_gpName = "adjustment_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_adjustment_enabled", _gcSetter = "set_adjustment_enable", _gcIndex = -1},GodotProperty {_gpName = "adjustment_brightness", _gcType = PrimitiveType FloatType, _gcGetter = "get_adjustment_brightness", _gcSetter = "set_adjustment_brightness", _gcIndex = -1},GodotProperty {_gpName = "adjustment_contrast", _gcType = PrimitiveType FloatType, _gcGetter = "get_adjustment_contrast", _gcSetter = "set_adjustment_contrast", _gcIndex = -1},GodotProperty {_gpName = "adjustment_saturation", _gcType = PrimitiveType FloatType, _gcGetter = "get_adjustment_saturation", _gcSetter = "set_adjustment_saturation", _gcIndex = -1},GodotProperty {_gpName = "adjustment_color_correction", _gcType = CustomType "Texture", _gcGetter = "get_adjustment_color_correction", _gcSetter = "set_adjustment_color_correction", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_background", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_sky", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sky", _gaType = CustomType "Sky", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_sky_custom_fov", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bg_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_canvas_max_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ambient_light_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ambient_light_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ambient_light_sky_contribution", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_background", _gmReturnType = EnumType "enum.Environment::BGMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_sky", _gmReturnType = CustomType "Sky", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_sky_custom_fov", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bg_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bg_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_canvas_max_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_ambient_light_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_ambient_light_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_ambient_light_sky_contribution", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_fog_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_sun_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_sun_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_sun_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_sun_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_depth_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_fog_depth_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_depth_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_depth_begin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_depth_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_depth_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_transmit_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_fog_transmit_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_transmit_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_transmit_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_height_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_fog_height_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_height_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_height_min", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_height_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_height_max", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fog_height_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fog_height_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemapper", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemapper", _gmReturnType = EnumType "enum.Environment::ToneMapper", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_exposure", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exposure", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_exposure", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_white", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "white", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_white", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_auto_exposure", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "auto_exposure", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_auto_exposure", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_auto_exposure_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exposure_max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_auto_exposure_max", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_auto_exposure_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exposure_min", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_auto_exposure_min", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_auto_exposure_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exposure_speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_auto_exposure_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tonemap_auto_exposure_grey", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exposure_grey", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tonemap_auto_exposure_grey", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ssr_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_max_steps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_steps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssr_max_steps", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_fade_in", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fade_in", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssr_fade_in", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_fade_out", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fade_out", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssr_fade_out", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_depth_tolerance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "depth_tolerance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssr_depth_tolerance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssr_rough", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rough", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ssr_rough", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ssao_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_intensity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_intensity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_radius2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_radius2", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_intensity2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_intensity2", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_direct_light_affect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_direct_light_affect", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_blur", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_blur", _gmReturnType = EnumType "enum.Environment::SSAOBlur", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "quality", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_quality", _gmReturnType = EnumType "enum.Environment::SSAOQuality", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ssao_edge_sharpness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "edge_sharpness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ssao_edge_sharpness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_far_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_dof_blur_far_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_far_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_far_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_far_transition", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_far_transition", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_far_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_far_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_far_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_far_quality", _gmReturnType = EnumType "enum.Environment::DOFBlurQuality", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_near_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_dof_blur_near_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_near_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_near_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_near_transition", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_near_transition", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_near_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_near_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dof_blur_near_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "level", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dof_blur_near_quality", _gmReturnType = EnumType "enum.Environment::DOFBlurQuality", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_glow_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_level", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_glow_level_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_glow_intensity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_intensity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_strength", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "strength", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_strength", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_bloom", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_bloom", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_blend_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_blend_mode", _gmReturnType = EnumType "enum.Environment::GlowBlendMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_hdr_bleed_threshold", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_hdr_bleed_threshold", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_hdr_bleed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_glow_hdr_bleed_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_glow_bicubic_upscale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_glow_bicubic_upscale_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_adjustment_enable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_adjustment_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_adjustment_brightness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "brightness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_adjustment_brightness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_adjustment_contrast", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "contrast", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_adjustment_contrast", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_adjustment_saturation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "saturation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_adjustment_saturation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_adjustment_color_correction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color_correction", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_adjustment_color_correction", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SSAOBlur", _geValues = fromList [("SSAO_BLUR_DISABLED",0),("SSAO_BLUR_2x2",2),("SSAO_BLUR_1x1",1),("SSAO_BLUR_3x3",3)]},GodotEnum {_geName = CustomType "ToneMapper", _geValues = fromList [("TONE_MAPPER_FILMIC",2),("TONE_MAPPER_LINEAR",0),("TONE_MAPPER_ACES",3),("TONE_MAPPER_REINHARDT",1)]},GodotEnum {_geName = CustomType "GlowBlendMode", _geValues = fromList [("GLOW_BLEND_MODE_ADDITIVE",0),("GLOW_BLEND_MODE_SOFTLIGHT",2),("GLOW_BLEND_MODE_REPLACE",3),("GLOW_BLEND_MODE_SCREEN",1)]},GodotEnum {_geName = CustomType "BGMode", _geValues = fromList [("BG_CANVAS",4),("BG_SKY",2),("BG_MAX",6),("BG_COLOR_SKY",3),("BG_COLOR",1),("BG_CLEAR_COLOR",0),("BG_KEEP",5)]},GodotEnum {_geName = CustomType "SSAOQuality", _geValues = fromList [("SSAO_QUALITY_LOW",0),("SSAO_QUALITY_MEDIUM",1),("SSAO_QUALITY_HIGH",2)]},GodotEnum {_geName = CustomType "DOFBlurQuality", _geValues = fromList [("DOF_BLUR_QUALITY_LOW",0),("DOF_BLUR_QUALITY_HIGH",2),("DOF_BLUR_QUALITY_MEDIUM",1)]}]},GodotClass {_gcName = "Listener", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "make_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_current", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_listener_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ARVRCamera", _gcBaseClass = "Camera", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ARVRController", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "controller_id", _gcType = PrimitiveType IntType, _gcGetter = "get_controller_id", _gcSetter = "set_controller_id", _gcIndex = -1},GodotProperty {_gpName = "rumble", _gcType = PrimitiveType FloatType, _gcGetter = "get_rumble", _gcSetter = "set_rumble", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "button_release", _gsArguments = [GodotArgument {_gaName = "button", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "button_pressed", _gsArguments = [GodotArgument {_gaName = "button", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_controller_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "controller_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_controller_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_controller_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_joystick_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_button_pressed", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "button", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joystick_axis", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_hand", _gmReturnType = EnumType "enum.ARVRPositionalTracker::TrackerHand", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rumble", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rumble", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rumble", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ARVRAnchor", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "anchor_id", _gcType = PrimitiveType IntType, _gcGetter = "get_anchor_id", _gcSetter = "set_anchor_id", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_anchor_id", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anchor_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_anchor_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_anchor_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_plane", _gmReturnType = CoreType "Plane", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ARVROrigin", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "world_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_world_scale", _gcSetter = "set_world_scale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_world_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_world_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "InterpolatedCamera", _gcBaseClass = "Camera", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "target", _gcType = CoreType "NodePath", _gcGetter = "get_target_path", _gcSetter = "set_target_path", _gcIndex = -1},GodotProperty {_gpName = "speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_speed", _gcSetter = "set_speed", _gcIndex = -1},GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_interpolation_enabled", _gcSetter = "set_interpolation_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_target_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_target_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_target", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interpolation_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "target_path", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_interpolation_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "MeshInstance", _gcBaseClass = "GeometryInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "mesh", _gcType = CustomType "Mesh", _gcGetter = "get_mesh", _gcSetter = "set_mesh", _gcIndex = -1},GodotProperty {_gpName = "skeleton", _gcType = CoreType "NodePath", _gcGetter = "get_skeleton_path", _gcSetter = "set_skeleton_path", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mesh", _gmReturnType = CustomType "Mesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_skeleton_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "skeleton_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_skeleton_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_surface_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_surface_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "create_trimesh_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_convex_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_mesh_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_debug_tangents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Mesh", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("ARRAY_COMPRESS_WEIGHTS",65536),("ARRAY_FLAG_USE_16_BIT_BONES",524288),("ARRAY_FORMAT_INDEX",256),("ARRAY_COMPRESS_TANGENT",2048),("ARRAY_COMPRESS_NORMAL",1024),("ARRAY_FORMAT_COLOR",8),("ARRAY_FORMAT_TEX_UV",16),("ARRAY_COMPRESS_VERTEX",512),("ARRAY_FORMAT_VERTEX",1),("ARRAY_COMPRESS_TEX_UV",8192),("ARRAY_COMPRESS_BASE",9),("ARRAY_COMPRESS_BONES",32768),("ARRAY_MAX",9),("ARRAY_NORMAL",1),("ARRAY_FORMAT_TEX_UV2",32),("ARRAY_INDEX",8),("ARRAY_COLOR",3),("PRIMITIVE_TRIANGLE_STRIP",5),("PRIMITIVE_TRIANGLES",4),("ARRAY_TEX_UV",4),("BLEND_SHAPE_MODE_NORMALIZED",0),("PRIMITIVE_LINE_LOOP",3),("PRIMITIVE_TRIANGLE_FAN",6),("ARRAY_FORMAT_NORMAL",2),("ARRAY_TEX_UV2",5),("ARRAY_COMPRESS_DEFAULT",97792),("ARRAY_FORMAT_BONES",64),("ARRAY_COMPRESS_COLOR",4096),("ARRAY_WEIGHTS",7),("ARRAY_TANGENT",2),("ARRAY_COMPRESS_TEX_UV2",16384),("PRIMITIVE_LINE_STRIP",2),("PRIMITIVE_LINES",1),("ARRAY_BONES",6),("BLEND_SHAPE_MODE_RELATIVE",1),("ARRAY_VERTEX",0),("ARRAY_FLAG_USE_2D_VERTICES",262144),("ARRAY_COMPRESS_INDEX",131072),("ARRAY_FORMAT_WEIGHTS",128),("ARRAY_FORMAT_TANGENT",4),("PRIMITIVE_POINTS",0)], _gcProperties = [GodotProperty {_gpName = "lightmap_size_hint", _gcType = CoreType "Vector2", _gcGetter = "get_lightmap_size_hint", _gcSetter = "set_lightmap_size_hint", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_lightmap_size_hint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lightmap_size_hint", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_trimesh_shape", _gmReturnType = CustomType "Shape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_convex_shape", _gmReturnType = CustomType "Shape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_outline", _gmReturnType = CustomType "Mesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_faces", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "generate_triangle_mesh", _gmReturnType = CustomType "TriangleMesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "BlendShapeMode", _geValues = fromList [("BLEND_SHAPE_MODE_NORMALIZED",0),("BLEND_SHAPE_MODE_RELATIVE",1)]},GodotEnum {_geName = CustomType "PrimitiveType", _geValues = fromList [("PRIMITIVE_TRIANGLE_STRIP",5),("PRIMITIVE_TRIANGLES",4),("PRIMITIVE_LINE_LOOP",3),("PRIMITIVE_TRIANGLE_FAN",6),("PRIMITIVE_LINE_STRIP",2),("PRIMITIVE_LINES",1),("PRIMITIVE_POINTS",0)]},GodotEnum {_geName = CustomType "ArrayFormat", _geValues = fromList [("ARRAY_COMPRESS_WEIGHTS",65536),("ARRAY_FLAG_USE_16_BIT_BONES",524288),("ARRAY_FORMAT_INDEX",256),("ARRAY_COMPRESS_TANGENT",2048),("ARRAY_COMPRESS_NORMAL",1024),("ARRAY_FORMAT_COLOR",8),("ARRAY_FORMAT_TEX_UV",16),("ARRAY_COMPRESS_VERTEX",512),("ARRAY_FORMAT_VERTEX",1),("ARRAY_COMPRESS_TEX_UV",8192),("ARRAY_COMPRESS_BASE",9),("ARRAY_COMPRESS_BONES",32768),("ARRAY_FORMAT_TEX_UV2",32),("ARRAY_FORMAT_NORMAL",2),("ARRAY_COMPRESS_DEFAULT",97792),("ARRAY_FORMAT_BONES",64),("ARRAY_COMPRESS_COLOR",4096),("ARRAY_COMPRESS_TEX_UV2",16384),("ARRAY_FLAG_USE_2D_VERTICES",262144),("ARRAY_COMPRESS_INDEX",131072),("ARRAY_FORMAT_WEIGHTS",128),("ARRAY_FORMAT_TANGENT",4)]},GodotEnum {_geName = CustomType "ArrayType", _geValues = fromList [("ARRAY_MAX",9),("ARRAY_NORMAL",1),("ARRAY_INDEX",8),("ARRAY_COLOR",3),("ARRAY_TEX_UV",4),("ARRAY_TEX_UV2",5),("ARRAY_WEIGHTS",7),("ARRAY_TANGENT",2),("ARRAY_BONES",6),("ARRAY_VERTEX",0)]}]},GodotClass {_gcName = "ImmediateGeometry", _gcBaseClass = "GeometryInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "primitive", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Just "[Object:null]"}]},GodotMethod {_gmName = "set_normal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tangent", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_uv2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_vertex", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_sphere", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lats", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lons", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "add_uv", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SpriteBase3D", _gcBaseClass = "GeometryInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("FLAG_SHADED",1),("ALPHA_CUT_OPAQUE_PREPASS",2),("FLAG_DOUBLE_SIDED",2),("ALPHA_CUT_DISABLED",0),("ALPHA_CUT_DISCARD",1),("FLAG_MAX",3),("FLAG_TRANSPARENT",0)], _gcProperties = [GodotProperty {_gpName = "centered", _gcType = PrimitiveType BoolType, _gcGetter = "is_centered", _gcSetter = "set_centered", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "flip_h", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_h", _gcSetter = "set_flip_h", _gcIndex = -1},GodotProperty {_gpName = "flip_v", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_v", _gcSetter = "set_flip_v", _gcIndex = -1},GodotProperty {_gpName = "modulate", _gcType = CoreType "Color", _gcGetter = "get_modulate", _gcSetter = "set_modulate", _gcIndex = -1},GodotProperty {_gpName = "opacity", _gcType = PrimitiveType FloatType, _gcGetter = "get_opacity", _gcSetter = "set_opacity", _gcIndex = -1},GodotProperty {_gpName = "pixel_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_pixel_size", _gcSetter = "set_pixel_size", _gcIndex = -1},GodotProperty {_gpName = "axis", _gcType = PrimitiveType IntType, _gcGetter = "get_axis", _gcSetter = "set_axis", _gcIndex = -1},GodotProperty {_gpName = "transparent", _gcType = PrimitiveType BoolType, _gcGetter = "get_draw_flag", _gcSetter = "set_draw_flag", _gcIndex = 0},GodotProperty {_gpName = "shaded", _gcType = PrimitiveType BoolType, _gcGetter = "get_draw_flag", _gcSetter = "set_draw_flag", _gcIndex = 1},GodotProperty {_gpName = "double_sided", _gcType = PrimitiveType BoolType, _gcGetter = "get_draw_flag", _gcSetter = "set_draw_flag", _gcIndex = 2},GodotProperty {_gpName = "alpha_cut", _gcType = PrimitiveType IntType, _gcGetter = "get_alpha_cut_mode", _gcSetter = "set_alpha_cut_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_centered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "centered", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_centered", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_h", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_h", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_h", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_v", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_v", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_v", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_modulate", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_opacity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "opacity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_opacity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pixel_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pixel_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_pixel_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_axis", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_axis", _gmReturnType = EnumType "enum.Vector3::Axis", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_draw_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_alpha_cut_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_alpha_cut_mode", _gmReturnType = EnumType "enum.SpriteBase3D::AlphaCutMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_item_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_queue_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_im_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DrawFlags", _geValues = fromList [("FLAG_SHADED",1),("FLAG_DOUBLE_SIDED",2),("FLAG_MAX",3),("FLAG_TRANSPARENT",0)]},GodotEnum {_geName = CustomType "AlphaCutMode", _geValues = fromList [("ALPHA_CUT_OPAQUE_PREPASS",2),("ALPHA_CUT_DISABLED",0),("ALPHA_CUT_DISCARD",1)]}]},GodotClass {_gcName = "Sprite3D", _gcBaseClass = "SpriteBase3D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "vframes", _gcType = PrimitiveType IntType, _gcGetter = "get_vframes", _gcSetter = "set_vframes", _gcIndex = -1},GodotProperty {_gpName = "hframes", _gcType = PrimitiveType IntType, _gcGetter = "get_hframes", _gcSetter = "set_hframes", _gcIndex = -1},GodotProperty {_gpName = "frame", _gcType = PrimitiveType IntType, _gcGetter = "get_frame", _gcSetter = "set_frame", _gcIndex = -1},GodotProperty {_gpName = "region_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_region", _gcSetter = "set_region", _gcIndex = -1},GodotProperty {_gpName = "region_rect", _gcType = CoreType "Rect2", _gcGetter = "get_region_rect", _gcSetter = "set_region_rect", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "frame_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_region", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frame", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vframes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vframes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vframes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hframes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hframes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_hframes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AnimatedSprite3D", _gcBaseClass = "SpriteBase3D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "frames", _gcType = CustomType "SpriteFrames", _gcGetter = "get_sprite_frames", _gcSetter = "set_sprite_frames", _gcIndex = -1},GodotProperty {_gpName = "animation", _gcType = CoreType "String", _gcGetter = "get_animation", _gcSetter = "set_animation", _gcIndex = -1},GodotProperty {_gpName = "frame", _gcType = PrimitiveType IntType, _gcGetter = "get_frame", _gcSetter = "set_frame", _gcIndex = -1},GodotProperty {_gpName = "playing", _gcType = PrimitiveType BoolType, _gcGetter = "_is_playing", _gcSetter = "_set_playing", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "frame_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_sprite_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sprite_frames", _gaType = CustomType "SpriteFrames", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sprite_frames", _gmReturnType = CustomType "SpriteFrames", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "animation", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_playing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "playing", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frame", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_res_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SpriteFrames", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "frames", _gcType = CoreType "Array", _gcGetter = "_get_frames", _gcSetter = "_set_frames", _gcIndex = -1},GodotProperty {_gpName = "animations", _gcType = CoreType "Array", _gcGetter = "_get_animations", _gcSetter = "_set_animations", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_animation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "newname", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_animation_speed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "speed", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation_speed", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_animation_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "loop", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation_loop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "frame", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_frame_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "txt", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_frames", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_animations", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_animations", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Light", _gcBaseClass = "VisualInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [("PARAM_SHADOW_NORMAL_BIAS",12),("PARAM_SHADOW_SPLIT_2_OFFSET",10),("PARAM_SPECULAR",2),("PARAM_SHADOW_SPLIT_1_OFFSET",9),("PARAM_INDIRECT_ENERGY",1),("PARAM_RANGE",3),("PARAM_SPOT_ATTENUATION",6),("PARAM_SHADOW_MAX_DISTANCE",8),("PARAM_MAX",15),("PARAM_SHADOW_BIAS_SPLIT_SCALE",14),("BAKE_DISABLED",0),("PARAM_ATTENUATION",4),("PARAM_ENERGY",0),("PARAM_SHADOW_SPLIT_3_OFFSET",11),("BAKE_INDIRECT",1),("PARAM_SHADOW_BIAS",13),("BAKE_ALL",2),("PARAM_CONTACT_SHADOW_SIZE",7),("PARAM_SPOT_ANGLE",5)], _gcProperties = [GodotProperty {_gpName = "light_color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1},GodotProperty {_gpName = "light_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 0},GodotProperty {_gpName = "light_indirect_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 1},GodotProperty {_gpName = "light_negative", _gcType = PrimitiveType BoolType, _gcGetter = "is_negative", _gcSetter = "set_negative", _gcIndex = -1},GodotProperty {_gpName = "light_specular", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 2},GodotProperty {_gpName = "light_bake_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_bake_mode", _gcSetter = "set_bake_mode", _gcIndex = -1},GodotProperty {_gpName = "light_cull_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_cull_mask", _gcSetter = "set_cull_mask", _gcIndex = -1},GodotProperty {_gpName = "shadow_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "has_shadow", _gcSetter = "set_shadow", _gcIndex = -1},GodotProperty {_gpName = "shadow_color", _gcType = CoreType "Color", _gcGetter = "get_shadow_color", _gcSetter = "set_shadow_color", _gcIndex = -1},GodotProperty {_gpName = "shadow_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 13},GodotProperty {_gpName = "shadow_contact", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 7},GodotProperty {_gpName = "shadow_reverse_cull_face", _gcType = PrimitiveType BoolType, _gcGetter = "get_shadow_reverse_cull_face", _gcSetter = "set_shadow_reverse_cull_face", _gcIndex = -1},GodotProperty {_gpName = "editor_only", _gcType = PrimitiveType BoolType, _gcGetter = "is_editor_only", _gcSetter = "set_editor_only", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_editor_only", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "editor_only", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editor_only", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_shadow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_shadow", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_negative", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_negative", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cull_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cull_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_reverse_cull_face", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_reverse_cull_face", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shadow_color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bake_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bake_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_mode", _gmReturnType = EnumType "enum.Light::BakeMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "BakeMode", _geValues = fromList [("BAKE_DISABLED",0),("BAKE_INDIRECT",1),("BAKE_ALL",2)]},GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_SHADOW_NORMAL_BIAS",12),("PARAM_SHADOW_SPLIT_2_OFFSET",10),("PARAM_SPECULAR",2),("PARAM_SHADOW_SPLIT_1_OFFSET",9),("PARAM_INDIRECT_ENERGY",1),("PARAM_RANGE",3),("PARAM_SPOT_ATTENUATION",6),("PARAM_SHADOW_MAX_DISTANCE",8),("PARAM_MAX",15),("PARAM_SHADOW_BIAS_SPLIT_SCALE",14),("PARAM_ATTENUATION",4),("PARAM_ENERGY",0),("PARAM_SHADOW_SPLIT_3_OFFSET",11),("PARAM_SHADOW_BIAS",13),("PARAM_CONTACT_SHADOW_SIZE",7),("PARAM_SPOT_ANGLE",5)]}]},GodotClass {_gcName = "DirectionalLight", _gcBaseClass = "Light", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SHADOW_ORTHOGONAL",0),("SHADOW_PARALLEL_4_SPLITS",2),("SHADOW_DEPTH_RANGE_STABLE",0),("SHADOW_DEPTH_RANGE_OPTIMIZED",1),("SHADOW_PARALLEL_2_SPLITS",1)], _gcProperties = [GodotProperty {_gpName = "directional_shadow_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_mode", _gcSetter = "set_shadow_mode", _gcIndex = -1},GodotProperty {_gpName = "directional_shadow_split_1", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 9},GodotProperty {_gpName = "directional_shadow_split_2", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 10},GodotProperty {_gpName = "directional_shadow_split_3", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 11},GodotProperty {_gpName = "directional_shadow_blend_splits", _gcType = PrimitiveType BoolType, _gcGetter = "is_blend_splits_enabled", _gcSetter = "set_blend_splits", _gcIndex = -1},GodotProperty {_gpName = "directional_shadow_normal_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 12},GodotProperty {_gpName = "directional_shadow_bias_split_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 14},GodotProperty {_gpName = "directional_shadow_depth_range", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_depth_range", _gcSetter = "set_shadow_depth_range", _gcIndex = -1},GodotProperty {_gpName = "directional_shadow_max_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 8}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shadow_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_mode", _gmReturnType = EnumType "enum.DirectionalLight::ShadowMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_depth_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_depth_range", _gmReturnType = EnumType "enum.DirectionalLight::ShadowDepthRange", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_blend_splits", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_blend_splits_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ShadowMode", _geValues = fromList [("SHADOW_ORTHOGONAL",0),("SHADOW_PARALLEL_4_SPLITS",2),("SHADOW_PARALLEL_2_SPLITS",1)]},GodotEnum {_geName = CustomType "ShadowDepthRange", _geValues = fromList [("SHADOW_DEPTH_RANGE_STABLE",0),("SHADOW_DEPTH_RANGE_OPTIMIZED",1)]}]},GodotClass {_gcName = "OmniLight", _gcBaseClass = "Light", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SHADOW_DUAL_PARABOLOID",0),("SHADOW_DETAIL_HORIZONTAL",1),("SHADOW_DETAIL_VERTICAL",0),("SHADOW_CUBE",1)], _gcProperties = [GodotProperty {_gpName = "omni_range", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "omni_attenuation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4},GodotProperty {_gpName = "omni_shadow_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_mode", _gcSetter = "set_shadow_mode", _gcIndex = -1},GodotProperty {_gpName = "omni_shadow_detail", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_detail", _gcSetter = "set_shadow_detail", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shadow_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_mode", _gmReturnType = EnumType "enum.OmniLight::ShadowMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_detail", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_detail", _gmReturnType = EnumType "enum.OmniLight::ShadowDetail", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ShadowMode", _geValues = fromList [("SHADOW_DUAL_PARABOLOID",0),("SHADOW_CUBE",1)]},GodotEnum {_geName = CustomType "ShadowDetail", _geValues = fromList [("SHADOW_DETAIL_HORIZONTAL",1),("SHADOW_DETAIL_VERTICAL",0)]}]},GodotClass {_gcName = "SpotLight", _gcBaseClass = "Light", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "spot_range", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "spot_attenuation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4},GodotProperty {_gpName = "spot_angle", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 5},GodotProperty {_gpName = "spot_angle_attenuation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 6}], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ReflectionProbe", _gcBaseClass = "VisualInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("UPDATE_ALWAYS",1),("UPDATE_ONCE",0)], _gcProperties = [GodotProperty {_gpName = "update_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_update_mode", _gcSetter = "set_update_mode", _gcIndex = -1},GodotProperty {_gpName = "intensity", _gcType = PrimitiveType FloatType, _gcGetter = "get_intensity", _gcSetter = "set_intensity", _gcIndex = -1},GodotProperty {_gpName = "max_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_max_distance", _gcSetter = "set_max_distance", _gcIndex = -1},GodotProperty {_gpName = "extents", _gcType = CoreType "Vector2", _gcGetter = "get_extents", _gcSetter = "set_extents", _gcIndex = -1},GodotProperty {_gpName = "origin_offset", _gcType = CoreType "Vector2", _gcGetter = "get_origin_offset", _gcSetter = "set_origin_offset", _gcIndex = -1},GodotProperty {_gpName = "box_projection", _gcType = PrimitiveType BoolType, _gcGetter = "is_box_projection_enabled", _gcSetter = "set_enable_box_projection", _gcIndex = -1},GodotProperty {_gpName = "enable_shadows", _gcType = PrimitiveType BoolType, _gcGetter = "are_shadows_enabled", _gcSetter = "set_enable_shadows", _gcIndex = -1},GodotProperty {_gpName = "cull_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_cull_mask", _gcSetter = "set_cull_mask", _gcIndex = -1},GodotProperty {_gpName = "interior_enable", _gcType = PrimitiveType BoolType, _gcGetter = "is_set_as_interior", _gcSetter = "set_as_interior", _gcIndex = -1},GodotProperty {_gpName = "interior_ambient_color", _gcType = CoreType "Color", _gcGetter = "get_interior_ambient", _gcSetter = "set_interior_ambient", _gcIndex = -1},GodotProperty {_gpName = "interior_ambient_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_interior_ambient_energy", _gcSetter = "set_interior_ambient_energy", _gcIndex = -1},GodotProperty {_gpName = "interior_ambient_contrib", _gcType = PrimitiveType FloatType, _gcGetter = "get_interior_ambient_probe_contribution", _gcSetter = "set_interior_ambient_probe_contribution", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_intensity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "intensity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_intensity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interior_ambient", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ambient", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_interior_ambient", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interior_ambient_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ambient_energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_interior_ambient_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interior_ambient_probe_contribution", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ambient_probe_contribution", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_interior_ambient_probe_contribution", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extents", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_origin_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "origin_offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_origin_offset", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_as_interior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_set_as_interior", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enable_box_projection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_box_projection_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enable_shadows", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "are_shadows_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layers", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cull_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_mode", _gmReturnType = EnumType "enum.ReflectionProbe::UpdateMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "UpdateMode", _geValues = fromList [("UPDATE_ALWAYS",1),("UPDATE_ONCE",0)]}]},GodotClass {_gcName = "GIProbe", _gcBaseClass = "VisualInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SUBDIV_64",0),("SUBDIV_256",2),("SUBDIV_MAX",4),("SUBDIV_128",1),("SUBDIV_512",3)], _gcProperties = [GodotProperty {_gpName = "subdiv", _gcType = PrimitiveType IntType, _gcGetter = "get_subdiv", _gcSetter = "set_subdiv", _gcIndex = -1},GodotProperty {_gpName = "extents", _gcType = CoreType "Vector3", _gcGetter = "get_extents", _gcSetter = "set_extents", _gcIndex = -1},GodotProperty {_gpName = "dynamic_range", _gcType = PrimitiveType IntType, _gcGetter = "get_dynamic_range", _gcSetter = "set_dynamic_range", _gcIndex = -1},GodotProperty {_gpName = "energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_energy", _gcSetter = "set_energy", _gcIndex = -1},GodotProperty {_gpName = "propagation", _gcType = PrimitiveType FloatType, _gcGetter = "get_propagation", _gcSetter = "set_propagation", _gcIndex = -1},GodotProperty {_gpName = "bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_bias", _gcSetter = "set_bias", _gcIndex = -1},GodotProperty {_gpName = "normal_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_normal_bias", _gcSetter = "set_normal_bias", _gcIndex = -1},GodotProperty {_gpName = "interior", _gcType = PrimitiveType BoolType, _gcGetter = "is_interior", _gcSetter = "set_interior", _gcIndex = -1},GodotProperty {_gpName = "compress", _gcType = PrimitiveType BoolType, _gcGetter = "is_compressed", _gcSetter = "set_compress", _gcIndex = -1},GodotProperty {_gpName = "data", _gcType = CustomType "GIProbeData", _gcGetter = "get_probe_data", _gcSetter = "set_probe_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_probe_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CustomType "GIProbeData", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_probe_data", _gmReturnType = CustomType "GIProbeData", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdiv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subdiv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdiv", _gmReturnType = EnumType "enum.GIProbe::Subdiv", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extents", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dynamic_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dynamic_range", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_propagation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_propagation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_interior", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_compress", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_compressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "bake", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_node", _gaType = CoreType "Object", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "create_visual_debug", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "debug_bake", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Subdiv", _geValues = fromList [("SUBDIV_64",0),("SUBDIV_256",2),("SUBDIV_MAX",4),("SUBDIV_128",1),("SUBDIV_512",3)]}]},GodotClass {_gcName = "GIProbeData", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bounds", _gcType = CoreType "AABB", _gcGetter = "get_bounds", _gcSetter = "set_bounds", _gcIndex = -1},GodotProperty {_gpName = "cell_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_cell_size", _gcSetter = "set_cell_size", _gcIndex = -1},GodotProperty {_gpName = "to_cell_xform", _gcType = CoreType "Transform", _gcGetter = "get_to_cell_xform", _gcSetter = "set_to_cell_xform", _gcIndex = -1},GodotProperty {_gpName = "dynamic_data", _gcType = CoreType "PoolIntArray", _gcGetter = "get_dynamic_data", _gcSetter = "set_dynamic_data", _gcIndex = -1},GodotProperty {_gpName = "dynamic_range", _gcType = PrimitiveType IntType, _gcGetter = "get_dynamic_range", _gcSetter = "set_dynamic_range", _gcIndex = -1},GodotProperty {_gpName = "energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_energy", _gcSetter = "set_energy", _gcIndex = -1},GodotProperty {_gpName = "bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_bias", _gcSetter = "set_bias", _gcIndex = -1},GodotProperty {_gpName = "normal_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_normal_bias", _gcSetter = "set_normal_bias", _gcIndex = -1},GodotProperty {_gpName = "propagation", _gcType = PrimitiveType FloatType, _gcGetter = "get_propagation", _gcSetter = "set_propagation", _gcIndex = -1},GodotProperty {_gpName = "interior", _gcType = PrimitiveType BoolType, _gcGetter = "is_interior", _gcSetter = "set_interior", _gcIndex = -1},GodotProperty {_gpName = "compress", _gcType = PrimitiveType BoolType, _gcGetter = "is_compressed", _gcSetter = "set_compress", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_bounds", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounds", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounds", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cell_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_to_cell_xform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_cell_xform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_to_cell_xform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dynamic_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dynamic_data", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dynamic_data", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dynamic_range", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dynamic_range", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dynamic_range", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_propagation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "propagation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_propagation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_interior", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "interior", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_interior", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_compress", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "compress", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_compressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BakedLightmap", _gcBaseClass = "VisualInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("BAKE_QUALITY_LOW",0),("BAKE_QUALITY_MEDIUM",1),("BAKE_ERROR_CANT_CREATE_IMAGE",3),("BAKE_ERROR_NO_MESHES",2),("BAKE_ERROR_OK",0),("BAKE_MODE_CONE_TRACE",0),("BAKE_MODE_RAY_TRACE",1),("BAKE_ERROR_NO_SAVE_PATH",1),("BAKE_ERROR_USER_ABORTED",4),("BAKE_QUALITY_HIGH",2)], _gcProperties = [GodotProperty {_gpName = "bake_cell_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_bake_cell_size", _gcSetter = "set_bake_cell_size", _gcIndex = -1},GodotProperty {_gpName = "bake_quality", _gcType = PrimitiveType IntType, _gcGetter = "get_bake_quality", _gcSetter = "set_bake_quality", _gcIndex = -1},GodotProperty {_gpName = "bake_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_bake_mode", _gcSetter = "set_bake_mode", _gcIndex = -1},GodotProperty {_gpName = "bake_propagation", _gcType = PrimitiveType FloatType, _gcGetter = "get_propagation", _gcSetter = "set_propagation", _gcIndex = -1},GodotProperty {_gpName = "bake_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_energy", _gcSetter = "set_energy", _gcIndex = -1},GodotProperty {_gpName = "bake_hdr", _gcType = PrimitiveType BoolType, _gcGetter = "is_hdr", _gcSetter = "set_hdr", _gcIndex = -1},GodotProperty {_gpName = "bake_extents", _gcType = CoreType "Vector3", _gcGetter = "get_extents", _gcSetter = "set_extents", _gcIndex = -1},GodotProperty {_gpName = "capture_cell_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_capture_cell_size", _gcSetter = "set_capture_cell_size", _gcIndex = -1},GodotProperty {_gpName = "image_path", _gcType = CoreType "String", _gcGetter = "get_image_path", _gcSetter = "set_image_path", _gcIndex = -1},GodotProperty {_gpName = "light_data", _gcType = CustomType "BakedLightmapData", _gcGetter = "get_light_data", _gcSetter = "set_light_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_light_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CustomType "BakedLightmapData", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_light_data", _gmReturnType = CustomType "BakedLightmapData", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bake_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bake_cell_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_cell_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_capture_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "capture_cell_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_capture_cell_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bake_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bake_quality", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_quality", _gmReturnType = EnumType "enum.BakedLightmap::BakeQuality", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bake_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bake_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_mode", _gmReturnType = EnumType "enum.BakedLightmap::BakeMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extents", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_propagation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "propagation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_propagation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hdr", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hdr", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_hdr", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_image_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image_path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_image_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "bake", _gmReturnType = EnumType "enum.BakedLightmap::BakeError", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_node", _gaType = CoreType "Object", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "create_visual_debug", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "debug_bake", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "BakeQuality", _geValues = fromList [("BAKE_QUALITY_LOW",0),("BAKE_QUALITY_MEDIUM",1),("BAKE_QUALITY_HIGH",2)]},GodotEnum {_geName = CustomType "BakeError", _geValues = fromList [("BAKE_ERROR_CANT_CREATE_IMAGE",3),("BAKE_ERROR_NO_MESHES",2),("BAKE_ERROR_OK",0),("BAKE_ERROR_NO_SAVE_PATH",1),("BAKE_ERROR_USER_ABORTED",4)]},GodotEnum {_geName = CustomType "BakeMode", _geValues = fromList [("BAKE_MODE_CONE_TRACE",0),("BAKE_MODE_RAY_TRACE",1)]}]},GodotClass {_gcName = "BakedLightmapData", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bounds", _gcType = CoreType "AABB", _gcGetter = "get_bounds", _gcSetter = "set_bounds", _gcIndex = -1},GodotProperty {_gpName = "cell_space_transform", _gcType = CoreType "Transform", _gcGetter = "get_cell_space_transform", _gcSetter = "set_cell_space_transform", _gcIndex = -1},GodotProperty {_gpName = "cell_subdiv", _gcType = PrimitiveType IntType, _gcGetter = "get_cell_subdiv", _gcSetter = "set_cell_subdiv", _gcIndex = -1},GodotProperty {_gpName = "energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_energy", _gcSetter = "set_energy", _gcIndex = -1},GodotProperty {_gpName = "octree", _gcType = CoreType "PoolByteArray", _gcGetter = "get_octree", _gcSetter = "set_octree", _gcIndex = -1},GodotProperty {_gpName = "user_data", _gcType = CoreType "Array", _gcGetter = "_get_user_data", _gcSetter = "_set_user_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_set_user_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_user_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bounds", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounds", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounds", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_space_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "xform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_space_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_subdiv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cell_subdiv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_subdiv", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_octree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "octree", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_octree", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_user", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "lightmap", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "instance", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_user_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_user_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "user_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_user_lightmap", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "user_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_users", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AnimationTreePlayer", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("NODE_TIMESEEK",8),("NODE_OUTPUT",0),("NODE_ANIMATION",1),("NODE_BLEND2",4),("NODE_TIMESCALE",7),("NODE_BLEND4",6),("NODE_BLEND3",5),("NODE_TRANSITION",9),("NODE_MIX",3),("NODE_ONESHOT",2),("ANIMATION_PROCESS_PHYSICS",0),("ANIMATION_PROCESS_IDLE",1)], _gcProperties = [GodotProperty {_gpName = "playback_process_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_animation_process_mode", _gcSetter = "set_animation_process_mode", _gcIndex = -1},GodotProperty {_gpName = "master_player", _gcType = CoreType "NodePath", _gcGetter = "get_master_player", _gcSetter = "set_master_player", _gcIndex = -1},GodotProperty {_gpName = "base_path", _gcType = CoreType "NodePath", _gcGetter = "get_base_path", _gcSetter = "set_base_path", _gcIndex = -1},GodotProperty {_gpName = "active", _gcType = PrimitiveType BoolType, _gcGetter = "is_active", _gcSetter = "set_active", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_exists", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_rename", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "new_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_get_type", _gmReturnType = EnumType "enum.AnimationTreePlayer::NodeType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_get_input_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_get_input_source", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_node_set_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "animation", _gaType = CustomType "Animation", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_node_get_animation", _gmReturnType = CustomType "Animation", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_node_set_master_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "source", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_node_get_master_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "animation_node_set_filter_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_fadein_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_get_fadein_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_fadeout_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_get_fadeout_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_autorestart", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_autorestart_delay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "delay_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_autorestart_random_delay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rand_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_has_autorestart", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_get_autorestart_delay", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_get_autorestart_random_delay", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_start", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "oneshot_node_set_filter_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mix_node_set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "mix_node_get_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend2_node_set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend2_node_get_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend2_node_set_filter_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend3_node_set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend3_node_get_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend4_node_set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "blend4_node_get_amount", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "timescale_node_set_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "timescale_node_get_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "timeseek_node_seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "seconds", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_set_input_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "count", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_get_input_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_delete_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_set_input_auto_advance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_has_input_auto_advance", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_set_xfade_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_get_xfade_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_set_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transition_node_get_current", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_set_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "screen_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "node_get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "connect_nodes", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst_id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst_input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "are_nodes_connected", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst_id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst_input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "disconnect_nodes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "dst_input_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_active", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_master_player", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "nodepath", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_master_player", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_list", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_animation_process_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation_process_mode", _gmReturnType = EnumType "enum.AnimationTreePlayer::AnimationProcessMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "advance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "recompute_caches", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AnimationProcessMode", _geValues = fromList [("ANIMATION_PROCESS_PHYSICS",0),("ANIMATION_PROCESS_IDLE",1)]},GodotEnum {_geName = CustomType "NodeType", _geValues = fromList [("NODE_TIMESEEK",8),("NODE_OUTPUT",0),("NODE_ANIMATION",1),("NODE_BLEND2",4),("NODE_TIMESCALE",7),("NODE_BLEND4",6),("NODE_BLEND3",5),("NODE_TRANSITION",9),("NODE_MIX",3),("NODE_ONESHOT",2)]}]},GodotClass {_gcName = "Particles", _gcBaseClass = "GeometryInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MAX_DRAW_PASSES",4),("DRAW_ORDER_LIFETIME",1),("DRAW_ORDER_INDEX",0),("DRAW_ORDER_VIEW_DEPTH",2)], _gcProperties = [GodotProperty {_gpName = "emitting", _gcType = PrimitiveType BoolType, _gcGetter = "is_emitting", _gcSetter = "set_emitting", _gcIndex = -1},GodotProperty {_gpName = "amount", _gcType = PrimitiveType IntType, _gcGetter = "get_amount", _gcSetter = "set_amount", _gcIndex = -1},GodotProperty {_gpName = "lifetime", _gcType = PrimitiveType FloatType, _gcGetter = "get_lifetime", _gcSetter = "set_lifetime", _gcIndex = -1},GodotProperty {_gpName = "one_shot", _gcType = PrimitiveType BoolType, _gcGetter = "get_one_shot", _gcSetter = "set_one_shot", _gcIndex = -1},GodotProperty {_gpName = "preprocess", _gcType = PrimitiveType FloatType, _gcGetter = "get_pre_process_time", _gcSetter = "set_pre_process_time", _gcIndex = -1},GodotProperty {_gpName = "speed_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_speed_scale", _gcSetter = "set_speed_scale", _gcIndex = -1},GodotProperty {_gpName = "explosiveness", _gcType = PrimitiveType FloatType, _gcGetter = "get_explosiveness_ratio", _gcSetter = "set_explosiveness_ratio", _gcIndex = -1},GodotProperty {_gpName = "randomness", _gcType = PrimitiveType FloatType, _gcGetter = "get_randomness_ratio", _gcSetter = "set_randomness_ratio", _gcIndex = -1},GodotProperty {_gpName = "fixed_fps", _gcType = PrimitiveType IntType, _gcGetter = "get_fixed_fps", _gcSetter = "set_fixed_fps", _gcIndex = -1},GodotProperty {_gpName = "fract_delta", _gcType = PrimitiveType BoolType, _gcGetter = "get_fractional_delta", _gcSetter = "set_fractional_delta", _gcIndex = -1},GodotProperty {_gpName = "visibility_aabb", _gcType = CoreType "AABB", _gcGetter = "get_visibility_aabb", _gcSetter = "set_visibility_aabb", _gcIndex = -1},GodotProperty {_gpName = "local_coords", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_local_coordinates", _gcSetter = "set_use_local_coordinates", _gcIndex = -1},GodotProperty {_gpName = "draw_order", _gcType = PrimitiveType IntType, _gcGetter = "get_draw_order", _gcSetter = "set_draw_order", _gcIndex = -1},GodotProperty {_gpName = "process_material", _gcType = CustomType "ShaderMaterial,ParticlesMaterial", _gcGetter = "get_process_material", _gcSetter = "set_process_material", _gcIndex = -1},GodotProperty {_gpName = "draw_passes", _gcType = PrimitiveType IntType, _gcGetter = "get_draw_passes", _gcSetter = "set_draw_passes", _gcIndex = -1},GodotProperty {_gpName = "draw_pass_1", _gcType = CustomType "Mesh", _gcGetter = "get_draw_pass_mesh", _gcSetter = "set_draw_pass_mesh", _gcIndex = 0},GodotProperty {_gpName = "draw_pass_2", _gcType = CustomType "Mesh", _gcGetter = "get_draw_pass_mesh", _gcSetter = "set_draw_pass_mesh", _gcIndex = 1},GodotProperty {_gpName = "draw_pass_3", _gcType = CustomType "Mesh", _gcGetter = "get_draw_pass_mesh", _gcSetter = "set_draw_pass_mesh", _gcIndex = 2},GodotProperty {_gpName = "draw_pass_4", _gcType = CustomType "Mesh", _gcGetter = "get_draw_pass_mesh", _gcSetter = "set_draw_pass_mesh", _gcIndex = 3}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_emitting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "emitting", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_lifetime", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "secs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_one_shot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_pre_process_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "secs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_explosiveness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_randomness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_visibility_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_use_local_coordinates", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_fixed_fps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_fractional_delta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_process_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_speed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_emitting", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_amount", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_lifetime", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_one_shot", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pre_process_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_explosiveness_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_randomness_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visibility_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_use_local_coordinates", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_fixed_fps", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_fractional_delta", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_process_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_speed_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_order", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "order", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_draw_order", _gmReturnType = EnumType "enum.Particles::DrawOrder", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_passes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "passes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_draw_pass_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pass", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_draw_passes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_draw_pass_mesh", _gmReturnType = CustomType "Mesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pass", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "restart", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "capture_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DrawOrder", _geValues = fromList [("DRAW_ORDER_LIFETIME",1),("DRAW_ORDER_INDEX",0),("DRAW_ORDER_VIEW_DEPTH",2)]}]},GodotClass {_gcName = "Position3D", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "NavigationMeshInstance", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "navmesh", _gcType = CustomType "NavigationMesh", _gcGetter = "get_navigation_mesh", _gcSetter = "set_navigation_mesh", _gcIndex = -1},GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabled", _gcSetter = "set_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_navigation_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "navmesh", _gaType = CustomType "NavigationMesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_navigation_mesh", _gmReturnType = CustomType "NavigationMesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "NavigationMesh", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("SAMPLE_PARTITION_LAYERS",2),("SAMPLE_PARTITION_WATERSHED",0),("SAMPLE_PARTITION_MONOTONE",1)], _gcProperties = [GodotProperty {_gpName = "vertices", _gcType = CoreType "PoolVector3Array", _gcGetter = "get_vertices", _gcSetter = "set_vertices", _gcIndex = -1},GodotProperty {_gpName = "polygons", _gcType = CoreType "Array", _gcGetter = "_get_polygons", _gcSetter = "_set_polygons", _gcIndex = -1},GodotProperty {_gpName = "sample_partition_type/sample_partition_type", _gcType = PrimitiveType IntType, _gcGetter = "get_sample_partition_type", _gcSetter = "set_sample_partition_type", _gcIndex = -1},GodotProperty {_gpName = "cell/size", _gcType = PrimitiveType FloatType, _gcGetter = "get_cell_size", _gcSetter = "set_cell_size", _gcIndex = -1},GodotProperty {_gpName = "cell/height", _gcType = PrimitiveType FloatType, _gcGetter = "get_cell_height", _gcSetter = "set_cell_height", _gcIndex = -1},GodotProperty {_gpName = "agent/height", _gcType = PrimitiveType FloatType, _gcGetter = "get_agent_height", _gcSetter = "set_agent_height", _gcIndex = -1},GodotProperty {_gpName = "agent/radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_agent_radius", _gcSetter = "set_agent_radius", _gcIndex = -1},GodotProperty {_gpName = "agent/max_climb", _gcType = PrimitiveType FloatType, _gcGetter = "get_agent_max_climb", _gcSetter = "set_agent_max_climb", _gcIndex = -1},GodotProperty {_gpName = "agent/max_slope", _gcType = PrimitiveType FloatType, _gcGetter = "get_agent_max_slope", _gcSetter = "set_agent_max_slope", _gcIndex = -1},GodotProperty {_gpName = "region/min_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_region_min_size", _gcSetter = "set_region_min_size", _gcIndex = -1},GodotProperty {_gpName = "region/merge_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_region_merge_size", _gcSetter = "set_region_merge_size", _gcIndex = -1},GodotProperty {_gpName = "edge/max_length", _gcType = PrimitiveType FloatType, _gcGetter = "get_edge_max_length", _gcSetter = "set_edge_max_length", _gcIndex = -1},GodotProperty {_gpName = "edge/max_error", _gcType = PrimitiveType FloatType, _gcGetter = "get_edge_max_error", _gcSetter = "set_edge_max_error", _gcIndex = -1},GodotProperty {_gpName = "polygon/verts_per_poly", _gcType = PrimitiveType FloatType, _gcGetter = "get_verts_per_poly", _gcSetter = "set_verts_per_poly", _gcIndex = -1},GodotProperty {_gpName = "detail/sample_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_detail_sample_distance", _gcSetter = "set_detail_sample_distance", _gcIndex = -1},GodotProperty {_gpName = "detail/sample_max_error", _gcType = PrimitiveType FloatType, _gcGetter = "get_detail_sample_max_error", _gcSetter = "set_detail_sample_max_error", _gcIndex = -1},GodotProperty {_gpName = "filter/low_hanging_obstacles", _gcType = PrimitiveType BoolType, _gcGetter = "get_filter_low_hanging_obstacles", _gcSetter = "set_filter_low_hanging_obstacles", _gcIndex = -1},GodotProperty {_gpName = "filter/ledge_spans", _gcType = PrimitiveType BoolType, _gcGetter = "get_filter_ledge_spans", _gcSetter = "set_filter_ledge_spans", _gcIndex = -1},GodotProperty {_gpName = "filter/filter_walkable_low_height_spans", _gcType = PrimitiveType BoolType, _gcGetter = "get_filter_walkable_low_height_spans", _gcSetter = "set_filter_walkable_low_height_spans", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_sample_partition_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sample_partition_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sample_partition_type", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cell_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cell_height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_agent_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "agent_height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_agent_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_agent_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "agent_radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_agent_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_agent_max_climb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "agent_max_climb", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_agent_max_climb", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_agent_max_slope", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "agent_max_slope", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_agent_max_slope", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region_min_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "region_min_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_min_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region_merge_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "region_merge_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_merge_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_edge_max_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "edge_max_length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edge_max_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_edge_max_error", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "edge_max_error", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edge_max_error", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_verts_per_poly", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "verts_per_poly", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_verts_per_poly", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_detail_sample_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail_sample_dist", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_detail_sample_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_detail_sample_max_error", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail_sample_max_error", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_detail_sample_max_error", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_filter_low_hanging_obstacles", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter_low_hanging_obstacles", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filter_low_hanging_obstacles", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_filter_ledge_spans", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter_ledge_spans", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filter_ledge_spans", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_filter_walkable_low_height_spans", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter_walkable_low_height_spans", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filter_walkable_low_height_spans", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vertices", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertices", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertices", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_polygons", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_from_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_polygons", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygons", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_polygons", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Navigation", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "up_vector", _gcType = CoreType "Vector3", _gcGetter = "get_up_vector", _gcSetter = "set_up_vector", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "navmesh_add", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "NavigationMesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "xform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "owner", _gaType = CoreType "Object", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "navmesh_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "xform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "navmesh_remove", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_simple_path", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "start", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "end", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "optimize", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "get_closest_point_to_segment", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "start", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "end", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_collision", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_closest_point", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_owner", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_up_vector", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "up", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_up_vector", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CollisionObject", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "input_ray_pickable", _gcType = PrimitiveType BoolType, _gcGetter = "is_ray_pickable", _gcSetter = "set_ray_pickable", _gcIndex = -1},GodotProperty {_gpName = "input_capture_on_drag", _gcType = PrimitiveType BoolType, _gcGetter = "get_capture_input_on_drag", _gcSetter = "set_capture_input_on_drag", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "mouse_exited", _gsArguments = []},GodotSignal {_gsName = "mouse_entered", _gsArguments = []},GodotSignal {_gsName = "input_event", _gsArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Just ""},GodotArgument {_gaName = "click_position", _gaType = CoreType "Vector3", _gaDefaultValue = Just ""},GodotArgument {_gaName = "click_normal", _gaType = CoreType "Vector3", _gaDefaultValue = Just ""},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_input_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing},GodotArgument {_gaName = "click_position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "click_normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ray_pickable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ray_pickable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ray_pickable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_capture_input_on_drag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_capture_input_on_drag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_shape_owner", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_shape_owner", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape_owners", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "shape_owner_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_owner", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shape_owner_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CustomType "Shape", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape", _gmReturnType = CustomType "Shape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_find_owner", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "PhysicsBody", _gcBaseClass = "CollisionObject", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_layers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_layers", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_collision_exception_with", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_collision_exception_with", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "StaticBody", _gcBaseClass = "PhysicsBody", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "friction", _gcType = PrimitiveType FloatType, _gcGetter = "get_friction", _gcSetter = "set_friction", _gcIndex = -1},GodotProperty {_gpName = "bounce", _gcType = PrimitiveType FloatType, _gcGetter = "get_bounce", _gcSetter = "set_bounce", _gcIndex = -1},GodotProperty {_gpName = "constant_linear_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_constant_linear_velocity", _gcSetter = "set_constant_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "constant_angular_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_constant_angular_velocity", _gcSetter = "set_constant_angular_velocity", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_constant_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vel", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_constant_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vel", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant_linear_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_constant_angular_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_friction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "friction", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_friction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bounce", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounce", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounce", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RigidBody", _gcBaseClass = "PhysicsBody", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MODE_STATIC",1),("MODE_KINEMATIC",3),("MODE_RIGID",0),("MODE_CHARACTER",2)], _gcProperties = [GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "mass", _gcType = PrimitiveType FloatType, _gcGetter = "get_mass", _gcSetter = "set_mass", _gcIndex = -1},GodotProperty {_gpName = "weight", _gcType = PrimitiveType FloatType, _gcGetter = "get_weight", _gcSetter = "set_weight", _gcIndex = -1},GodotProperty {_gpName = "friction", _gcType = PrimitiveType FloatType, _gcGetter = "get_friction", _gcSetter = "set_friction", _gcIndex = -1},GodotProperty {_gpName = "bounce", _gcType = PrimitiveType FloatType, _gcGetter = "get_bounce", _gcSetter = "set_bounce", _gcIndex = -1},GodotProperty {_gpName = "gravity_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity_scale", _gcSetter = "set_gravity_scale", _gcIndex = -1},GodotProperty {_gpName = "custom_integrator", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_custom_integrator", _gcSetter = "set_use_custom_integrator", _gcIndex = -1},GodotProperty {_gpName = "continuous_cd", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_continuous_collision_detection", _gcSetter = "set_use_continuous_collision_detection", _gcIndex = -1},GodotProperty {_gpName = "contacts_reported", _gcType = PrimitiveType IntType, _gcGetter = "get_max_contacts_reported", _gcSetter = "set_max_contacts_reported", _gcIndex = -1},GodotProperty {_gpName = "contact_monitor", _gcType = PrimitiveType BoolType, _gcGetter = "is_contact_monitor_enabled", _gcSetter = "set_contact_monitor", _gcIndex = -1},GodotProperty {_gpName = "sleeping", _gcType = PrimitiveType BoolType, _gcGetter = "is_sleeping", _gcSetter = "set_sleeping", _gcIndex = -1},GodotProperty {_gpName = "can_sleep", _gcType = PrimitiveType BoolType, _gcGetter = "is_able_to_sleep", _gcSetter = "set_can_sleep", _gcIndex = -1},GodotProperty {_gpName = "axis_lock_linear_x", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 1},GodotProperty {_gpName = "axis_lock_linear_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 2},GodotProperty {_gpName = "axis_lock_linear_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 4},GodotProperty {_gpName = "axis_lock_angular_x", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 8},GodotProperty {_gpName = "axis_lock_angular_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 16},GodotProperty {_gpName = "axis_lock_angular_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 32},GodotProperty {_gpName = "linear_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_linear_velocity", _gcSetter = "set_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_linear_damp", _gcSetter = "set_linear_damp", _gcIndex = -1},GodotProperty {_gpName = "angular_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_angular_velocity", _gcSetter = "set_angular_velocity", _gcIndex = -1},GodotProperty {_gpName = "angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_damp", _gcSetter = "set_angular_damp", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "body_entered", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_entered", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "local_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "sleeping_state_changed", _gsArguments = []},GodotSignal {_gsName = "body_exited", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_exited", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "local_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_integrate_forces", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "state", _gaType = CustomType "PhysicsDirectBodyState", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.RigidBody::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mass", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mass", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mass", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_weight", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "weight", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_weight", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_friction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "friction", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_friction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bounce", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounce", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounce", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gravity_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_contacts_reported", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_contacts_reported", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_custom_integrator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_custom_integrator", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_contact_monitor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_contact_monitor_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_continuous_collision_detection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_continuous_collision_detection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_axis_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis_velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "impulse", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_sleeping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sleeping", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_sleeping", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_can_sleep", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "able_to_sleep", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_able_to_sleep", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_direct_state_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_axis_lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lock", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_axis_lock", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_colliding_bodies", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_STATIC",1),("MODE_KINEMATIC",3),("MODE_RIGID",0),("MODE_CHARACTER",2)]}]},GodotClass {_gcName = "KinematicCollision", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "position", _gcType = CoreType "Vector3", _gcGetter = "get_position", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "normal", _gcType = CoreType "Vector3", _gcGetter = "get_normal", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "travel", _gcType = CoreType "Vector3", _gcGetter = "get_travel", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "remainder", _gcType = CoreType "Vector3", _gcGetter = "get_remainder", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "local_shape", _gcType = CoreType "Object", _gcGetter = "get_local_shape", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider", _gcType = CoreType "Object", _gcGetter = "get_collider", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_id", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_id", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_shape", _gcType = CoreType "Object", _gcGetter = "get_collider_shape", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_shape_index", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_shape_index", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_velocity", _gcType = CoreType "Vector3", _gcGetter = "get_collider_velocity", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_metadata", _gcType = CoreType "Variant", _gcGetter = "get_collider_metadata", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_travel", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_remainder", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_local_shape", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "KinematicBody", _gcBaseClass = "PhysicsBody", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "axis_lock_linear_x", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 1},GodotProperty {_gpName = "axis_lock_linear_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 2},GodotProperty {_gpName = "axis_lock_linear_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 4},GodotProperty {_gpName = "axis_lock_angular_x", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 8},GodotProperty {_gpName = "axis_lock_angular_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 16},GodotProperty {_gpName = "axis_lock_angular_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_axis_lock", _gcSetter = "set_axis_lock", _gcIndex = 32},GodotProperty {_gpName = "collision/safe_margin", _gcType = PrimitiveType FloatType, _gcGetter = "get_safe_margin", _gcSetter = "set_safe_margin", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "move_and_collide", _gmReturnType = CustomType "KinematicCollision", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rel_vec", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_and_slide", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_velocity", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "floor_normal", _gaType = CoreType "Vector3", _gaDefaultValue = Just "(0, 0, 0)"},GodotArgument {_gaName = "slope_stop_min_velocity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.05"},GodotArgument {_gaName = "max_slides", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "4"},GodotArgument {_gaName = "floor_max_angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.785398"}]},GodotMethod {_gmName = "test_move", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rel_vec", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_on_floor", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_ceiling", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_wall", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_floor_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_axis_lock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "lock", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_axis_lock", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_safe_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pixels", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_safe_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_slide_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_slide_collision", _gmReturnType = CustomType "KinematicCollision", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "slide_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "VehicleBody", _gcBaseClass = "RigidBody", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "engine_force", _gcType = PrimitiveType FloatType, _gcGetter = "get_engine_force", _gcSetter = "set_engine_force", _gcIndex = -1},GodotProperty {_gpName = "brake", _gcType = PrimitiveType FloatType, _gcGetter = "get_brake", _gcSetter = "set_brake", _gcIndex = -1},GodotProperty {_gpName = "steering", _gcType = PrimitiveType FloatType, _gcGetter = "get_steering", _gcSetter = "set_steering", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_engine_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "engine_force", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_engine_force", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_brake", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "brake", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_brake", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_steering", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "steering", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_steering", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VehicleWheel", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "use_as_traction", _gcType = PrimitiveType BoolType, _gcGetter = "is_used_as_traction", _gcSetter = "set_use_as_traction", _gcIndex = -1},GodotProperty {_gpName = "use_as_steering", _gcType = PrimitiveType BoolType, _gcGetter = "is_used_as_steering", _gcSetter = "set_use_as_steering", _gcIndex = -1},GodotProperty {_gpName = "wheel_roll_influence", _gcType = PrimitiveType FloatType, _gcGetter = "get_roll_influence", _gcSetter = "set_roll_influence", _gcIndex = -1},GodotProperty {_gpName = "wheel_radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1},GodotProperty {_gpName = "wheel_rest_length", _gcType = PrimitiveType FloatType, _gcGetter = "get_suspension_rest_length", _gcSetter = "set_suspension_rest_length", _gcIndex = -1},GodotProperty {_gpName = "wheel_friction_slip", _gcType = PrimitiveType FloatType, _gcGetter = "get_friction_slip", _gcSetter = "set_friction_slip", _gcIndex = -1},GodotProperty {_gpName = "suspension_travel", _gcType = PrimitiveType FloatType, _gcGetter = "get_suspension_travel", _gcSetter = "set_suspension_travel", _gcIndex = -1},GodotProperty {_gpName = "suspension_stiffness", _gcType = PrimitiveType FloatType, _gcGetter = "get_suspension_stiffness", _gcSetter = "set_suspension_stiffness", _gcIndex = -1},GodotProperty {_gpName = "suspension_max_force", _gcType = PrimitiveType FloatType, _gcGetter = "get_suspension_max_force", _gcSetter = "set_suspension_max_force", _gcIndex = -1},GodotProperty {_gpName = "damping_compression", _gcType = PrimitiveType FloatType, _gcGetter = "get_damping_compression", _gcSetter = "set_damping_compression", _gcIndex = -1},GodotProperty {_gpName = "damping_relaxation", _gcType = PrimitiveType FloatType, _gcGetter = "get_damping_relaxation", _gcSetter = "set_damping_relaxation", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_suspension_rest_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_suspension_rest_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_suspension_travel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_suspension_travel", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_suspension_stiffness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_suspension_stiffness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_suspension_max_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_suspension_max_force", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_damping_compression", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_damping_compression", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_damping_relaxation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_damping_relaxation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_as_traction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_used_as_traction", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_as_steering", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_used_as_steering", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_friction_slip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_friction_slip", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_in_contact", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_roll_influence", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "roll_influence", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_roll_influence", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_skidinfo", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Area", _gcBaseClass = "CollisionObject", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SPACE_OVERRIDE_REPLACE",3),("SPACE_OVERRIDE_DISABLED",0),("SPACE_OVERRIDE_COMBINE_REPLACE",2),("SPACE_OVERRIDE_REPLACE_COMBINE",4),("SPACE_OVERRIDE_COMBINE",1)], _gcProperties = [GodotProperty {_gpName = "space_override", _gcType = PrimitiveType IntType, _gcGetter = "get_space_override_mode", _gcSetter = "set_space_override_mode", _gcIndex = -1},GodotProperty {_gpName = "gravity_point", _gcType = PrimitiveType BoolType, _gcGetter = "is_gravity_a_point", _gcSetter = "set_gravity_is_point", _gcIndex = -1},GodotProperty {_gpName = "gravity_distance_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity_distance_scale", _gcSetter = "set_gravity_distance_scale", _gcIndex = -1},GodotProperty {_gpName = "gravity_vec", _gcType = CoreType "Vector3", _gcGetter = "get_gravity_vector", _gcSetter = "set_gravity_vector", _gcIndex = -1},GodotProperty {_gpName = "gravity", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity", _gcSetter = "set_gravity", _gcIndex = -1},GodotProperty {_gpName = "linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_linear_damp", _gcSetter = "set_linear_damp", _gcIndex = -1},GodotProperty {_gpName = "angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_damp", _gcSetter = "set_angular_damp", _gcIndex = -1},GodotProperty {_gpName = "priority", _gcType = PrimitiveType IntType, _gcGetter = "get_priority", _gcSetter = "set_priority", _gcIndex = -1},GodotProperty {_gpName = "monitoring", _gcType = PrimitiveType BoolType, _gcGetter = "is_monitoring", _gcSetter = "set_monitoring", _gcIndex = -1},GodotProperty {_gpName = "monitorable", _gcType = PrimitiveType BoolType, _gcGetter = "is_monitorable", _gcSetter = "set_monitorable", _gcIndex = -1},GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1},GodotProperty {_gpName = "audio_bus_override", _gcType = PrimitiveType BoolType, _gcGetter = "is_overriding_audio_bus", _gcSetter = "set_audio_bus_override", _gcIndex = -1},GodotProperty {_gpName = "audio_bus_name", _gcType = CoreType "String", _gcGetter = "get_audio_bus", _gcSetter = "set_audio_bus", _gcIndex = -1},GodotProperty {_gpName = "reverb_bus_enable", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_reverb_bus", _gcSetter = "set_use_reverb_bus", _gcIndex = -1},GodotProperty {_gpName = "reverb_bus_name", _gcType = CoreType "String", _gcGetter = "get_reverb_bus", _gcSetter = "set_reverb_bus", _gcIndex = -1},GodotProperty {_gpName = "reverb_bus_amount", _gcType = PrimitiveType FloatType, _gcGetter = "get_reverb_amount", _gcSetter = "set_reverb_amount", _gcIndex = -1},GodotProperty {_gpName = "reverb_bus_uniformity", _gcType = PrimitiveType FloatType, _gcGetter = "get_reverb_uniformity", _gcSetter = "set_reverb_uniformity", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "area_exited", _gsArguments = [GodotArgument {_gaName = "area", _gaType = CustomType "Area", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_shape_exited", _gsArguments = [GodotArgument {_gaName = "area_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area", _gaType = CustomType "Area", _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "self_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_entered", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_entered", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_entered", _gsArguments = [GodotArgument {_gaName = "area", _gaType = CustomType "Area", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_shape_entered", _gsArguments = [GodotArgument {_gaName = "area_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area", _gaType = CustomType "Area", _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "self_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_exited", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_exited", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_body_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_space_override_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_space_override_mode", _gmReturnType = EnumType "enum.Area::SpaceOverride", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_is_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_gravity_a_point", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_distance_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_distance_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_vector", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vector", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_vector", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gravity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "priority", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_priority", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_monitorable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_monitorable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_monitoring", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_monitoring", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_overlapping_bodies", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_overlapping_areas", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "overlaps_body", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "overlaps_area", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_inout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg4", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_inout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg4", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_audio_bus_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_overriding_audio_bus", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_audio_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_audio_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_reverb_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_reverb_bus", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_reverb_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_reverb_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_reverb_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_reverb_amount", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_reverb_uniformity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_reverb_uniformity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SpaceOverride", _geValues = fromList [("SPACE_OVERRIDE_REPLACE",3),("SPACE_OVERRIDE_DISABLED",0),("SPACE_OVERRIDE_COMBINE_REPLACE",2),("SPACE_OVERRIDE_REPLACE_COMBINE",4),("SPACE_OVERRIDE_COMBINE",1)]}]},GodotClass {_gcName = "ProximityGroup", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MODE_SIGNAL",1),("MODE_PROXY",0)], _gcProperties = [GodotProperty {_gpName = "group_name", _gcType = CoreType "String", _gcGetter = "get_group_name", _gcSetter = "set_group_name", _gcIndex = -1},GodotProperty {_gpName = "dispatch_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_dispatch_mode", _gcSetter = "set_dispatch_mode", _gcIndex = -1},GodotProperty {_gpName = "grid_radius", _gcType = CoreType "Vector3", _gcGetter = "get_grid_radius", _gcSetter = "set_grid_radius", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "broadcast", _gsArguments = [GodotArgument {_gaName = "group_name", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "parameters", _gaType = CoreType "Array", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_group_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_group_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_dispatch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_dispatch_mode", _gmReturnType = EnumType "enum.ProximityGroup::DispatchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_grid_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_grid_radius", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "broadcast", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "parameters", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_proximity_group_broadcast", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "params", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "DispatchMode", _geValues = fromList [("MODE_SIGNAL",1),("MODE_PROXY",0)]}]},GodotClass {_gcName = "CollisionShape", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "shape", _gcType = CustomType "Shape", _gcGetter = "get_shape", _gcSetter = "set_shape", _gcIndex = -1},GodotProperty {_gpName = "disabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_disabled", _gcSetter = "set_disabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "resource_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Shape", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape", _gmReturnType = CustomType "Shape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_convex_from_brothers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Shape", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "CollisionPolygon", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "depth", _gcType = PrimitiveType FloatType, _gcGetter = "get_depth", _gcSetter = "set_depth", _gcIndex = -1},GodotProperty {_gpName = "disabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_disabled", _gcSetter = "set_disabled", _gcIndex = -1},GodotProperty {_gpName = "polygon", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_polygon", _gcSetter = "set_polygon", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "depth", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RayCast", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabled", _gcSetter = "set_enabled", _gcIndex = -1},GodotProperty {_gpName = "exclude_parent", _gcType = PrimitiveType BoolType, _gcGetter = "get_exclude_parent_body", _gcSetter = "set_exclude_parent_body", _gcIndex = -1},GodotProperty {_gpName = "cast_to", _gcType = CoreType "Vector3", _gcGetter = "get_cast_to", _gcSetter = "set_cast_to", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cast_to", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_point", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cast_to", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_colliding", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "force_raycast_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_point", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_exception_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_exception_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_exceptions", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_exclude_parent_body", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude_parent_body", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "MultiMeshInstance", _gcBaseClass = "GeometryInstance", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "multimesh", _gcType = CustomType "MultiMesh", _gcGetter = "get_multimesh", _gcSetter = "set_multimesh", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_multimesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multimesh", _gaType = CustomType "MultiMesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_multimesh", _gmReturnType = CustomType "MultiMesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "MultiMesh", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("TRANSFORM_3D",1),("COLOR_NONE",0),("COLOR_FLOAT",2),("TRANSFORM_2D",0),("COLOR_8BIT",1)], _gcProperties = [GodotProperty {_gpName = "color_format", _gcType = PrimitiveType IntType, _gcGetter = "get_color_format", _gcSetter = "set_color_format", _gcIndex = -1},GodotProperty {_gpName = "transform_format", _gcType = PrimitiveType IntType, _gcGetter = "get_transform_format", _gcSetter = "set_transform_format", _gcIndex = -1},GodotProperty {_gpName = "instance_count", _gcType = PrimitiveType IntType, _gcGetter = "get_instance_count", _gcSetter = "set_instance_count", _gcIndex = -1},GodotProperty {_gpName = "mesh", _gcType = CustomType "Mesh", _gcGetter = "get_mesh", _gcSetter = "set_mesh", _gcIndex = -1},GodotProperty {_gpName = "transform_array", _gcType = CoreType "PoolVector3Array", _gcGetter = "_get_transform_array", _gcSetter = "_set_transform_array", _gcIndex = -1},GodotProperty {_gpName = "color_array", _gcType = CoreType "PoolColorArray", _gcGetter = "_get_color_array", _gcSetter = "_set_color_array", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mesh", _gmReturnType = CustomType "Mesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_color_format", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color_format", _gmReturnType = EnumType "enum.MultiMesh::ColorFormat", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transform_format", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transform_format", _gmReturnType = EnumType "enum.MultiMesh::TransformFormat", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_instance_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "count", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_instance_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_instance_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_instance_transform", _gmReturnType = CoreType "Transform", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_instance_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_instance_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "instance", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_transform_array", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_transform_array", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_color_array", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_color_array", _gmReturnType = CoreType "PoolColorArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "TransformFormat", _geValues = fromList [("TRANSFORM_3D",1),("TRANSFORM_2D",0)]},GodotEnum {_geName = CustomType "ColorFormat", _geValues = fromList [("COLOR_NONE",0),("COLOR_FLOAT",2),("COLOR_8BIT",1)]}]},GodotClass {_gcName = "Curve3D", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bake_interval", _gcType = PrimitiveType FloatType, _gcGetter = "get_bake_interval", _gcSetter = "set_bake_interval", _gcIndex = -1},GodotProperty {_gpName = "_data", _gcType = PrimitiveType IntType, _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_point_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "in", _gaType = CoreType "Vector3", _gaDefaultValue = Just "(0, 0, 0)"},GodotArgument {_gaName = "out", _gaType = CoreType "Vector3", _gaDefaultValue = Just "(0, 0, 0)"},GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "set_point_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_position", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_tilt", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tilt", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_tilt", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_in", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_in", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_out", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_out", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "interpolate", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "t", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "interpolatef", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bake_interval", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_interval", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_baked_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "interpolate_baked", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "cubic", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_baked_points", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_baked_tilts", _gmReturnType = CoreType "PoolRealArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "tessellate", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_stages", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "5"},GodotArgument {_gaName = "tolerance_degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "4"}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Path", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "curve", _gcType = CustomType "Curve3D", _gcGetter = "get_curve", _gcSetter = "set_curve", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = CustomType "Curve3D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_curve", _gmReturnType = CustomType "Curve3D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_curve_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PathFollow", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ROTATION_XY",2),("ROTATION_Y",1),("ROTATION_XYZ",3),("ROTATION_NONE",0)], _gcProperties = [GodotProperty {_gpName = "offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "unit_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_unit_offset", _gcSetter = "set_unit_offset", _gcIndex = -1},GodotProperty {_gpName = "h_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_h_offset", _gcSetter = "set_h_offset", _gcIndex = -1},GodotProperty {_gpName = "v_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_v_offset", _gcSetter = "set_v_offset", _gcIndex = -1},GodotProperty {_gpName = "rotation_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_rotation_mode", _gcSetter = "set_rotation_mode", _gcIndex = -1},GodotProperty {_gpName = "cubic_interp", _gcType = PrimitiveType BoolType, _gcGetter = "get_cubic_interpolation", _gcSetter = "set_cubic_interpolation", _gcIndex = -1},GodotProperty {_gpName = "loop", _gcType = PrimitiveType BoolType, _gcGetter = "has_loop", _gcSetter = "set_loop", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "h_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "v_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_unit_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unit_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unit_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotation_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rotation_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rotation_mode", _gmReturnType = EnumType "enum.PathFollow::RotationMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cubic_interpolation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cubic_interpolation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "loop", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_loop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "RotationMode", _geValues = fromList [("ROTATION_XY",2),("ROTATION_Y",1),("ROTATION_XYZ",3),("ROTATION_NONE",0)]}]},GodotClass {_gcName = "VisibilityNotifier", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "aabb", _gcType = CoreType "AABB", _gcGetter = "get_aabb", _gcSetter = "set_aabb", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "camera_exited", _gsArguments = [GodotArgument {_gaName = "camera", _gaType = CustomType "Camera", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "screen_entered", _gsArguments = []},GodotSignal {_gsName = "camera_entered", _gsArguments = [GodotArgument {_gaName = "camera", _gaType = CustomType "Camera", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "screen_exited", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_screen", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisibilityEnabler", _gcBaseClass = "VisibilityNotifier", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ENABLER_MAX",2),("ENABLER_PAUSE_ANIMATIONS",0),("ENABLER_FREEZE_BODIES",1)], _gcProperties = [GodotProperty {_gpName = "pause_animations", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 0},GodotProperty {_gpName = "freeze_bodies", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_enabler", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabler", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabler_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabler", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_node_removed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Enabler", _geValues = fromList [("ENABLER_MAX",2),("ENABLER_PAUSE_ANIMATIONS",0),("ENABLER_FREEZE_BODIES",1)]}]},GodotClass {_gcName = "WorldEnvironment", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "environment", _gcType = CustomType "Environment", _gcGetter = "get_environment", _gcSetter = "set_environment", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_environment", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "env", _gaType = CustomType "Environment", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_environment", _gmReturnType = CustomType "Environment", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RemoteTransform", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "remote_path", _gcType = CoreType "NodePath", _gcGetter = "get_remote_node", _gcSetter = "set_remote_node", _gcIndex = -1},GodotProperty {_gpName = "use_global_coordinates", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_global_coordinates", _gcSetter = "set_use_global_coordinates", _gcIndex = -1},GodotProperty {_gpName = "update_position", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_position", _gcSetter = "set_update_position", _gcIndex = -1},GodotProperty {_gpName = "update_rotation", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_rotation", _gcSetter = "set_update_rotation", _gcIndex = -1},GodotProperty {_gpName = "update_scale", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_scale", _gcSetter = "set_update_scale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_remote_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_remote_node", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_global_coordinates", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "use_global_coordinates", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_global_coordinates", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_position", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_position", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_rotation", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_rotation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_scale", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_scale", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Joint", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "nodes/node_a", _gcType = CoreType "NodePath", _gcGetter = "get_node_a", _gcSetter = "set_node_a", _gcIndex = -1},GodotProperty {_gpName = "nodes/node_b", _gcType = CoreType "NodePath", _gcGetter = "get_node_b", _gcSetter = "set_node_b", _gcIndex = -1},GodotProperty {_gpName = "solver/priority", _gcType = PrimitiveType IntType, _gcGetter = "get_solver_priority", _gcSetter = "set_solver_priority", _gcIndex = -1},GodotProperty {_gpName = "collision/exclude_nodes", _gcType = PrimitiveType BoolType, _gcGetter = "get_exclude_nodes_from_collision", _gcSetter = "set_exclude_nodes_from_collision", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_node_a", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_a", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_node_b", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_b", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_solver_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "priority", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_solver_priority", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exclude_nodes_from_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude_nodes_from_collision", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PinJoint", _gcBaseClass = "Joint", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PARAM_IMPULSE_CLAMP",2),("PARAM_DAMPING",1),("PARAM_BIAS",0)], _gcProperties = [GodotProperty {_gpName = "params/bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 0},GodotProperty {_gpName = "params/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 1},GodotProperty {_gpName = "params/impulse_clamp", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 2}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_IMPULSE_CLAMP",2),("PARAM_DAMPING",1),("PARAM_BIAS",0)]}]},GodotClass {_gcName = "HingeJoint", _gcBaseClass = "Joint", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PARAM_MOTOR_MAX_IMPULSE",7),("FLAG_USE_LIMIT",0),("PARAM_LIMIT_RELAXATION",5),("PARAM_LIMIT_UPPER",1),("PARAM_LIMIT_BIAS",3),("PARAM_MAX",8),("FLAG_MAX",2),("PARAM_LIMIT_SOFTNESS",4),("PARAM_MOTOR_TARGET_VELOCITY",6),("FLAG_ENABLE_MOTOR",1),("PARAM_LIMIT_LOWER",2),("PARAM_BIAS",0)], _gcProperties = [GodotProperty {_gpName = "params/bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 0},GodotProperty {_gpName = "angular_limit/enable", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 0},GodotProperty {_gpName = "angular_limit/upper", _gcType = PrimitiveType FloatType, _gcGetter = "_get_upper_limit", _gcSetter = "_set_upper_limit", _gcIndex = -1},GodotProperty {_gpName = "angular_limit/lower", _gcType = PrimitiveType FloatType, _gcGetter = "_get_lower_limit", _gcSetter = "_set_lower_limit", _gcIndex = -1},GodotProperty {_gpName = "angular_limit/bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "angular_limit/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4},GodotProperty {_gpName = "angular_limit/relaxation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 5},GodotProperty {_gpName = "motor/enable", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 1},GodotProperty {_gpName = "motor/target_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 6},GodotProperty {_gpName = "motor/max_impulse", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 7}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_upper_limit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "upper_limit", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_upper_limit", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_lower_limit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lower_limit", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_lower_limit", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_MOTOR_MAX_IMPULSE",7),("PARAM_LIMIT_RELAXATION",5),("PARAM_LIMIT_UPPER",1),("PARAM_LIMIT_BIAS",3),("PARAM_MAX",8),("PARAM_LIMIT_SOFTNESS",4),("PARAM_MOTOR_TARGET_VELOCITY",6),("PARAM_LIMIT_LOWER",2),("PARAM_BIAS",0)]},GodotEnum {_geName = CustomType "Flag", _geValues = fromList [("FLAG_USE_LIMIT",0),("FLAG_MAX",2),("FLAG_ENABLE_MOTOR",1)]}]},GodotClass {_gcName = "SliderJoint", _gcBaseClass = "Joint", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PARAM_ANGULAR_LIMIT_LOWER",12),("PARAM_LINEAR_ORTHOGONAL_RESTITUTION",9),("PARAM_ANGULAR_MOTION_DAMPING",18),("PARAM_LINEAR_LIMIT_RESTITUTION",3),("PARAM_LINEAR_MOTION_RESTITUTION",6),("PARAM_ANGULAR_ORTHOGONAL_DAMPING",21),("PARAM_ANGULAR_ORTHOGONAL_SOFTNESS",19),("PARAM_LINEAR_ORTHOGONAL_SOFTNESS",8),("PARAM_LINEAR_LIMIT_SOFTNESS",2),("PARAM_ANGULAR_LIMIT_RESTITUTION",14),("PARAM_LINEAR_LIMIT_LOWER",1),("PARAM_LINEAR_MOTION_SOFTNESS",5),("PARAM_MAX",22),("PARAM_ANGULAR_LIMIT_DAMPING",15),("PARAM_ANGULAR_LIMIT_SOFTNESS",13),("PARAM_LINEAR_LIMIT_UPPER",0),("PARAM_ANGULAR_LIMIT_UPPER",11),("PARAM_LINEAR_LIMIT_DAMPING",4),("PARAM_ANGULAR_MOTION_RESTITUTION",17),("PARAM_LINEAR_ORTHOGONAL_DAMPING",10),("PARAM_ANGULAR_ORTHOGONAL_RESTITUTION",20),("PARAM_LINEAR_MOTION_DAMPING",7),("PARAM_ANGULAR_MOTION_SOFTNESS",16)], _gcProperties = [GodotProperty {_gpName = "linear_limit/upper_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 0},GodotProperty {_gpName = "linear_limit/lower_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 1},GodotProperty {_gpName = "linear_limit/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 2},GodotProperty {_gpName = "linear_limit/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "linear_limit/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4},GodotProperty {_gpName = "linear_motion/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 5},GodotProperty {_gpName = "linear_motion/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 6},GodotProperty {_gpName = "linear_motion/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 7},GodotProperty {_gpName = "linear_ortho/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 8},GodotProperty {_gpName = "linear_ortho/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 9},GodotProperty {_gpName = "linear_ortho/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 10},GodotProperty {_gpName = "angular_limit/upper_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_upper_limit_angular", _gcSetter = "_set_upper_limit_angular", _gcIndex = -1},GodotProperty {_gpName = "angular_limit/lower_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_lower_limit_angular", _gcSetter = "_set_lower_limit_angular", _gcIndex = -1},GodotProperty {_gpName = "angular_limit/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 13},GodotProperty {_gpName = "angular_limit/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 14},GodotProperty {_gpName = "angular_limit/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 15},GodotProperty {_gpName = "angular_motion/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 16},GodotProperty {_gpName = "angular_motion/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 17},GodotProperty {_gpName = "angular_motion/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 18},GodotProperty {_gpName = "angular_ortho/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 19},GodotProperty {_gpName = "angular_ortho/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 20},GodotProperty {_gpName = "angular_ortho/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 21}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_upper_limit_angular", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "upper_limit_angular", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_upper_limit_angular", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_lower_limit_angular", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lower_limit_angular", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_lower_limit_angular", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_ANGULAR_LIMIT_LOWER",12),("PARAM_LINEAR_ORTHOGONAL_RESTITUTION",9),("PARAM_ANGULAR_MOTION_DAMPING",18),("PARAM_LINEAR_LIMIT_RESTITUTION",3),("PARAM_LINEAR_MOTION_RESTITUTION",6),("PARAM_ANGULAR_ORTHOGONAL_DAMPING",21),("PARAM_ANGULAR_ORTHOGONAL_SOFTNESS",19),("PARAM_LINEAR_ORTHOGONAL_SOFTNESS",8),("PARAM_LINEAR_LIMIT_SOFTNESS",2),("PARAM_ANGULAR_LIMIT_RESTITUTION",14),("PARAM_LINEAR_LIMIT_LOWER",1),("PARAM_LINEAR_MOTION_SOFTNESS",5),("PARAM_MAX",22),("PARAM_ANGULAR_LIMIT_DAMPING",15),("PARAM_ANGULAR_LIMIT_SOFTNESS",13),("PARAM_LINEAR_LIMIT_UPPER",0),("PARAM_ANGULAR_LIMIT_UPPER",11),("PARAM_LINEAR_LIMIT_DAMPING",4),("PARAM_ANGULAR_MOTION_RESTITUTION",17),("PARAM_LINEAR_ORTHOGONAL_DAMPING",10),("PARAM_ANGULAR_ORTHOGONAL_RESTITUTION",20),("PARAM_LINEAR_MOTION_DAMPING",7),("PARAM_ANGULAR_MOTION_SOFTNESS",16)]}]},GodotClass {_gcName = "ConeTwistJoint", _gcBaseClass = "Joint", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PARAM_SWING_SPAN",0),("PARAM_SOFTNESS",3),("PARAM_TWIST_SPAN",1),("PARAM_MAX",5),("PARAM_RELAXATION",4),("PARAM_BIAS",2)], _gcProperties = [GodotProperty {_gpName = "swing_span", _gcType = PrimitiveType FloatType, _gcGetter = "_get_swing_span", _gcSetter = "_set_swing_span", _gcIndex = -1},GodotProperty {_gpName = "twist_span", _gcType = PrimitiveType FloatType, _gcGetter = "_get_twist_span", _gcSetter = "_set_twist_span", _gcIndex = -1},GodotProperty {_gpName = "bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 2},GodotProperty {_gpName = "softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "relaxation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_swing_span", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "swing_span", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_swing_span", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_twist_span", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "twist_span", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_twist_span", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_SWING_SPAN",0),("PARAM_SOFTNESS",3),("PARAM_TWIST_SPAN",1),("PARAM_MAX",5),("PARAM_RELAXATION",4),("PARAM_BIAS",2)]}]},GodotClass {_gcName = "Generic6DOFJoint", _gcBaseClass = "Joint", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("PARAM_ANGULAR_LOWER_LIMIT",5),("PARAM_LINEAR_DAMPING",4),("PARAM_ANGULAR_ERP",11),("PARAM_ANGULAR_DAMPING",8),("FLAG_ENABLE_ANGULAR_LIMIT",1),("PARAM_LINEAR_LIMIT_SOFTNESS",2),("PARAM_ANGULAR_MOTOR_TARGET_VELOCITY",12),("PARAM_LINEAR_LOWER_LIMIT",0),("PARAM_ANGULAR_MOTOR_FORCE_LIMIT",13),("PARAM_LINEAR_RESTITUTION",3),("PARAM_MAX",14),("FLAG_MAX",3),("PARAM_ANGULAR_LIMIT_SOFTNESS",7),("PARAM_LINEAR_UPPER_LIMIT",1),("PARAM_ANGULAR_FORCE_LIMIT",10),("FLAG_ENABLE_LINEAR_LIMIT",0),("PARAM_ANGULAR_UPPER_LIMIT",6),("FLAG_ENABLE_MOTOR",2),("PARAM_ANGULAR_RESTITUTION",9)], _gcProperties = [GodotProperty {_gpName = "linear_limit_x/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_x", _gcSetter = "set_flag_x", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_x/upper_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 1},GodotProperty {_gpName = "linear_limit_x/lower_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_x/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 2},GodotProperty {_gpName = "linear_limit_x/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 3},GodotProperty {_gpName = "linear_limit_x/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 4},GodotProperty {_gpName = "angular_limit_x/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_x", _gcSetter = "set_flag_x", _gcIndex = 1},GodotProperty {_gpName = "angular_limit_x/upper_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_hi_limit_x", _gcSetter = "_set_angular_hi_limit_x", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_x/lower_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_lo_limit_x", _gcSetter = "_set_angular_lo_limit_x", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_x/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 7},GodotProperty {_gpName = "angular_limit_x/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 9},GodotProperty {_gpName = "angular_limit_x/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 8},GodotProperty {_gpName = "angular_limit_x/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 10},GodotProperty {_gpName = "angular_limit_x/erp", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 11},GodotProperty {_gpName = "angular_motor_x/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_x", _gcSetter = "set_flag_x", _gcIndex = 2},GodotProperty {_gpName = "angular_motor_x/target_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 12},GodotProperty {_gpName = "angular_motor_x/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_x", _gcSetter = "set_param_x", _gcIndex = 13},GodotProperty {_gpName = "linear_limit_y/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_y", _gcSetter = "set_flag_y", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_y/upper_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 1},GodotProperty {_gpName = "linear_limit_y/lower_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_y/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 2},GodotProperty {_gpName = "linear_limit_y/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 3},GodotProperty {_gpName = "linear_limit_y/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 4},GodotProperty {_gpName = "angular_limit_y/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_y", _gcSetter = "set_flag_y", _gcIndex = 1},GodotProperty {_gpName = "angular_limit_y/upper_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_hi_limit_y", _gcSetter = "_set_angular_hi_limit_y", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_y/lower_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_lo_limit_y", _gcSetter = "_set_angular_lo_limit_y", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_y/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 7},GodotProperty {_gpName = "angular_limit_y/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 9},GodotProperty {_gpName = "angular_limit_y/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 8},GodotProperty {_gpName = "angular_limit_y/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 10},GodotProperty {_gpName = "angular_limit_y/erp", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 11},GodotProperty {_gpName = "angular_motor_y/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_y", _gcSetter = "set_flag_y", _gcIndex = 2},GodotProperty {_gpName = "angular_motor_y/target_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 12},GodotProperty {_gpName = "angular_motor_y/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_y", _gcSetter = "set_param_y", _gcIndex = 13},GodotProperty {_gpName = "linear_limit_z/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_z", _gcSetter = "set_flag_z", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_z/upper_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 1},GodotProperty {_gpName = "linear_limit_z/lower_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 0},GodotProperty {_gpName = "linear_limit_z/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 2},GodotProperty {_gpName = "linear_limit_z/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 3},GodotProperty {_gpName = "linear_limit_z/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 4},GodotProperty {_gpName = "angular_limit_z/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_z", _gcSetter = "set_flag_z", _gcIndex = 1},GodotProperty {_gpName = "angular_limit_z/upper_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_hi_limit_z", _gcSetter = "_set_angular_hi_limit_z", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_z/lower_angle", _gcType = PrimitiveType FloatType, _gcGetter = "_get_angular_lo_limit_z", _gcSetter = "_set_angular_lo_limit_z", _gcIndex = -1},GodotProperty {_gpName = "angular_limit_z/softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 7},GodotProperty {_gpName = "angular_limit_z/restitution", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 9},GodotProperty {_gpName = "angular_limit_z/damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 8},GodotProperty {_gpName = "angular_limit_z/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 10},GodotProperty {_gpName = "angular_limit_z/erp", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 11},GodotProperty {_gpName = "angular_motor_z/enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag_z", _gcSetter = "set_flag_z", _gcIndex = 2},GodotProperty {_gpName = "angular_motor_z/target_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 12},GodotProperty {_gpName = "angular_motor_z/force_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_z", _gcSetter = "set_param_z", _gcIndex = 13}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_set_angular_hi_limit_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_hi_limit_x", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_angular_lo_limit_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_lo_limit_x", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_angular_hi_limit_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_hi_limit_y", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_angular_lo_limit_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_lo_limit_y", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_angular_hi_limit_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_hi_limit_z", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_angular_lo_limit_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_angular_lo_limit_z", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_param_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param_x", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_param_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param_y", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_param_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param_z", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_flag_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag_x", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_flag_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag_y", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_flag_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag_z", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Param", _geValues = fromList [("PARAM_ANGULAR_LOWER_LIMIT",5),("PARAM_LINEAR_DAMPING",4),("PARAM_ANGULAR_ERP",11),("PARAM_ANGULAR_DAMPING",8),("PARAM_LINEAR_LIMIT_SOFTNESS",2),("PARAM_ANGULAR_MOTOR_TARGET_VELOCITY",12),("PARAM_LINEAR_LOWER_LIMIT",0),("PARAM_ANGULAR_MOTOR_FORCE_LIMIT",13),("PARAM_LINEAR_RESTITUTION",3),("PARAM_MAX",14),("PARAM_ANGULAR_LIMIT_SOFTNESS",7),("PARAM_LINEAR_UPPER_LIMIT",1),("PARAM_ANGULAR_FORCE_LIMIT",10),("PARAM_ANGULAR_UPPER_LIMIT",6),("PARAM_ANGULAR_RESTITUTION",9)]},GodotEnum {_geName = CustomType "Flag", _geValues = fromList [("FLAG_ENABLE_ANGULAR_LIMIT",1),("FLAG_MAX",3),("FLAG_ENABLE_LINEAR_LIMIT",0),("FLAG_ENABLE_MOTOR",2)]}]},GodotClass {_gcName = "MeshLibrary", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mesh", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_navmesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "navmesh", _gaType = CustomType "NavigationMesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shapes", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_item_preview", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_mesh", _gmReturnType = CustomType "Mesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_navmesh", _gmReturnType = CustomType "NavigationMesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_shapes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_preview", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_item_by_name", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_item_list", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_last_unused_item_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Shader", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("MODE_CANVAS_ITEM",1),("MODE_PARTICLES",2),("MODE_SPATIAL",0)], _gcProperties = [GodotProperty {_gpName = "code", _gcType = CoreType "String", _gcGetter = "get_code", _gcSetter = "set_code", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.Shader::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_code", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_code", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_default_texture_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_texture_param", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_param", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_CANVAS_ITEM",1),("MODE_PARTICLES",2),("MODE_SPATIAL",0)]}]},GodotClass {_gcName = "Material", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("RENDER_PRIORITY_MAX",127),("RENDER_PRIORITY_MIN",-128)], _gcProperties = [GodotProperty {_gpName = "render_priority", _gcType = PrimitiveType IntType, _gcGetter = "get_render_priority", _gcSetter = "set_render_priority", _gcIndex = -1},GodotProperty {_gpName = "next_pass", _gcType = CustomType "Material", _gcGetter = "get_next_pass", _gcSetter = "set_next_pass", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_next_pass", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "next_pass", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_next_pass", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_render_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "priority", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_render_priority", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ShaderMaterial", _gcBaseClass = "Material", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "shader", _gcType = CustomType "Shader", _gcGetter = "get_shader", _gcSetter = "set_shader", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shader", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shader", _gaType = CustomType "Shader", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shader", _gmReturnType = CustomType "Shader", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shader_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shader_param", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "CanvasItemMaterial", _gcBaseClass = "Material", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("BLEND_MODE_ADD",1),("BLEND_MODE_MIX",0),("LIGHT_MODE_LIGHT_ONLY",2),("BLEND_MODE_MUL",3),("BLEND_MODE_PREMULT_ALPHA",4),("LIGHT_MODE_NORMAL",0),("BLEND_MODE_SUB",2),("LIGHT_MODE_UNSHADED",1)], _gcProperties = [GodotProperty {_gpName = "blend_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_blend_mode", _gcSetter = "set_blend_mode", _gcIndex = -1},GodotProperty {_gpName = "light_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_light_mode", _gcSetter = "set_light_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_blend_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "blend_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_blend_mode", _gmReturnType = EnumType "enum.CanvasItemMaterial::BlendMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_light_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "light_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_light_mode", _gmReturnType = EnumType "enum.CanvasItemMaterial::LightMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "LightMode", _geValues = fromList [("LIGHT_MODE_LIGHT_ONLY",2),("LIGHT_MODE_NORMAL",0),("LIGHT_MODE_UNSHADED",1)]},GodotEnum {_geName = CustomType "BlendMode", _geValues = fromList [("BLEND_MODE_ADD",1),("BLEND_MODE_MIX",0),("BLEND_MODE_MUL",3),("BLEND_MODE_PREMULT_ALPHA",4),("BLEND_MODE_SUB",2)]}]},GodotClass {_gcName = "Particles2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("DRAW_ORDER_LIFETIME",1),("DRAW_ORDER_INDEX",0)], _gcProperties = [GodotProperty {_gpName = "emitting", _gcType = PrimitiveType BoolType, _gcGetter = "is_emitting", _gcSetter = "set_emitting", _gcIndex = -1},GodotProperty {_gpName = "amount", _gcType = PrimitiveType IntType, _gcGetter = "get_amount", _gcSetter = "set_amount", _gcIndex = -1},GodotProperty {_gpName = "lifetime", _gcType = PrimitiveType FloatType, _gcGetter = "get_lifetime", _gcSetter = "set_lifetime", _gcIndex = -1},GodotProperty {_gpName = "one_shot", _gcType = PrimitiveType BoolType, _gcGetter = "get_one_shot", _gcSetter = "set_one_shot", _gcIndex = -1},GodotProperty {_gpName = "preprocess", _gcType = PrimitiveType FloatType, _gcGetter = "get_pre_process_time", _gcSetter = "set_pre_process_time", _gcIndex = -1},GodotProperty {_gpName = "speed_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_speed_scale", _gcSetter = "set_speed_scale", _gcIndex = -1},GodotProperty {_gpName = "explosiveness", _gcType = PrimitiveType FloatType, _gcGetter = "get_explosiveness_ratio", _gcSetter = "set_explosiveness_ratio", _gcIndex = -1},GodotProperty {_gpName = "randomness", _gcType = PrimitiveType FloatType, _gcGetter = "get_randomness_ratio", _gcSetter = "set_randomness_ratio", _gcIndex = -1},GodotProperty {_gpName = "fixed_fps", _gcType = PrimitiveType IntType, _gcGetter = "get_fixed_fps", _gcSetter = "set_fixed_fps", _gcIndex = -1},GodotProperty {_gpName = "fract_delta", _gcType = PrimitiveType BoolType, _gcGetter = "get_fractional_delta", _gcSetter = "set_fractional_delta", _gcIndex = -1},GodotProperty {_gpName = "visibility_rect", _gcType = CoreType "AABB", _gcGetter = "get_visibility_rect", _gcSetter = "set_visibility_rect", _gcIndex = -1},GodotProperty {_gpName = "local_coords", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_local_coordinates", _gcSetter = "set_use_local_coordinates", _gcIndex = -1},GodotProperty {_gpName = "draw_order", _gcType = PrimitiveType IntType, _gcGetter = "get_draw_order", _gcSetter = "set_draw_order", _gcIndex = -1},GodotProperty {_gpName = "process_material", _gcType = CustomType "ShaderMaterial,ParticlesMaterial", _gcGetter = "get_process_material", _gcSetter = "set_process_material", _gcIndex = -1},GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "normal_map", _gcType = CustomType "Texture", _gcGetter = "get_normal_map", _gcSetter = "set_normal_map", _gcIndex = -1},GodotProperty {_gpName = "h_frames", _gcType = PrimitiveType IntType, _gcGetter = "get_h_frames", _gcSetter = "set_h_frames", _gcIndex = -1},GodotProperty {_gpName = "v_frames", _gcType = PrimitiveType IntType, _gcGetter = "get_v_frames", _gcSetter = "set_v_frames", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_emitting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "emitting", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_amount", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_lifetime", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "secs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_one_shot", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "secs", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_pre_process_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "secs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_explosiveness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_randomness_ratio", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ratio", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_visibility_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "aabb", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_use_local_coordinates", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_fixed_fps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_fractional_delta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_process_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_speed_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_emitting", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_amount", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_lifetime", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_one_shot", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pre_process_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_explosiveness_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_randomness_ratio", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visibility_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_use_local_coordinates", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_fixed_fps", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_fractional_delta", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_process_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_speed_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_order", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "order", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_draw_order", _gmReturnType = EnumType "enum.Particles2D::DrawOrder", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_map", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_map", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "capture_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_frames", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_frames", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "restart", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DrawOrder", _geValues = fromList [("DRAW_ORDER_LIFETIME",1),("DRAW_ORDER_INDEX",0)]}]},GodotClass {_gcName = "Sprite", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "normal_map", _gcType = CustomType "Texture", _gcGetter = "get_normal_map", _gcSetter = "set_normal_map", _gcIndex = -1},GodotProperty {_gpName = "centered", _gcType = PrimitiveType BoolType, _gcGetter = "is_centered", _gcSetter = "set_centered", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "flip_h", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_h", _gcSetter = "set_flip_h", _gcIndex = -1},GodotProperty {_gpName = "flip_v", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_v", _gcSetter = "set_flip_v", _gcIndex = -1},GodotProperty {_gpName = "vframes", _gcType = PrimitiveType IntType, _gcGetter = "get_vframes", _gcSetter = "set_vframes", _gcIndex = -1},GodotProperty {_gpName = "hframes", _gcType = PrimitiveType IntType, _gcGetter = "get_hframes", _gcSetter = "set_hframes", _gcIndex = -1},GodotProperty {_gpName = "frame", _gcType = PrimitiveType IntType, _gcGetter = "get_frame", _gcSetter = "set_frame", _gcIndex = -1},GodotProperty {_gpName = "region_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_region", _gcSetter = "set_region", _gcIndex = -1},GodotProperty {_gpName = "region_rect", _gcType = CoreType "Rect2", _gcGetter = "get_region_rect", _gcSetter = "set_region_rect", _gcIndex = -1},GodotProperty {_gpName = "region_filter_clip", _gcType = PrimitiveType BoolType, _gcGetter = "is_region_filter_clip_enabled", _gcSetter = "set_region_filter_clip", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "frame_changed", _gsArguments = []},GodotSignal {_gsName = "texture_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_map", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_map", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_centered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "centered", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_centered", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_h", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_h", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_h", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_v", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_v", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_v", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_region", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region_filter_clip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_region_filter_clip_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frame", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vframes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vframes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vframes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_hframes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "hframes", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_hframes", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AnimatedSprite", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "frames", _gcType = CustomType "SpriteFrames", _gcGetter = "get_sprite_frames", _gcSetter = "set_sprite_frames", _gcIndex = -1},GodotProperty {_gpName = "animation", _gcType = CoreType "String", _gcGetter = "get_animation", _gcSetter = "set_animation", _gcIndex = -1},GodotProperty {_gpName = "frame", _gcType = PrimitiveType IntType, _gcGetter = "get_frame", _gcSetter = "set_frame", _gcIndex = -1},GodotProperty {_gpName = "playing", _gcType = PrimitiveType BoolType, _gcGetter = "_is_playing", _gcSetter = "_set_playing", _gcIndex = -1},GodotProperty {_gpName = "centered", _gcType = PrimitiveType BoolType, _gcGetter = "is_centered", _gcSetter = "set_centered", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "flip_h", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_h", _gcSetter = "set_flip_h", _gcIndex = -1},GodotProperty {_gpName = "flip_v", _gcType = PrimitiveType BoolType, _gcGetter = "is_flipped_v", _gcSetter = "set_flip_v", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "frame_changed", _gsArguments = []},GodotSignal {_gsName = "animation_finished", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_sprite_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sprite_frames", _gaType = CustomType "SpriteFrames", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sprite_frames", _gmReturnType = CustomType "SpriteFrames", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_animation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "animation", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_animation", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_playing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "playing", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anim", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_centered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "centered", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_centered", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_h", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_h", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_h", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flip_v", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flip_v", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_flipped_v", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_frame", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frame", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_frame", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_res_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Position2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Line2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("LINE_JOINT_ROUND",2),("LINE_TEXTURE_NONE",0),("LINE_CAP_ROUND",2),("LINE_CAP_NONE",0),("LINE_TEXTURE_TILE",1),("LINE_JOINT_BEVEL",1),("LINE_JOINT_SHARP",0),("LINE_CAP_BOX",1)], _gcProperties = [GodotProperty {_gpName = "points", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_points", _gcSetter = "set_points", _gcIndex = -1},GodotProperty {_gpName = "width", _gcType = PrimitiveType FloatType, _gcGetter = "get_width", _gcSetter = "set_width", _gcIndex = -1},GodotProperty {_gpName = "default_color", _gcType = CoreType "Color", _gcGetter = "get_default_color", _gcSetter = "set_default_color", _gcIndex = -1},GodotProperty {_gpName = "gradient", _gcType = CustomType "Gradient", _gcGetter = "get_gradient", _gcSetter = "set_gradient", _gcIndex = -1},GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_texture_mode", _gcSetter = "set_texture_mode", _gcIndex = -1},GodotProperty {_gpName = "joint_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_joint_mode", _gcSetter = "set_joint_mode", _gcIndex = -1},GodotProperty {_gpName = "begin_cap_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_begin_cap_mode", _gcSetter = "set_begin_cap_mode", _gcIndex = -1},GodotProperty {_gpName = "end_cap_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_end_cap_mode", _gcSetter = "set_end_cap_mode", _gcIndex = -1},GodotProperty {_gpName = "sharp_limit", _gcType = PrimitiveType FloatType, _gcGetter = "get_sharp_limit", _gcSetter = "set_sharp_limit", _gcIndex = -1},GodotProperty {_gpName = "round_precision", _gcType = PrimitiveType IntType, _gcGetter = "get_round_precision", _gcSetter = "set_round_precision", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_points", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_point_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "i", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "i", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "i", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_width", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_default_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gradient", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CustomType "Gradient", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gradient", _gmReturnType = CustomType "Gradient", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_mode", _gmReturnType = EnumType "enum.Line2D::LineTextureMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_joint_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_joint_mode", _gmReturnType = EnumType "enum.Line2D::LineJointMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_begin_cap_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_begin_cap_mode", _gmReturnType = EnumType "enum.Line2D::LineCapMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_end_cap_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_end_cap_mode", _gmReturnType = EnumType "enum.Line2D::LineCapMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sharp_limit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "limit", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sharp_limit", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_round_precision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "precision", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_round_precision", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_gradient_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "LineTextureMode", _geValues = fromList [("LINE_TEXTURE_NONE",0),("LINE_TEXTURE_TILE",1)]},GodotEnum {_geName = CustomType "LineCapMode", _geValues = fromList [("LINE_CAP_ROUND",2),("LINE_CAP_NONE",0),("LINE_CAP_BOX",1)]},GodotEnum {_geName = CustomType "LineJointMode", _geValues = fromList [("LINE_JOINT_ROUND",2),("LINE_JOINT_BEVEL",1),("LINE_JOINT_SHARP",0)]}]},GodotClass {_gcName = "Gradient", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "offsets", _gcType = CoreType "PoolRealArray", _gcGetter = "get_offsets", _gcSetter = "set_offsets", _gcIndex = -1},GodotProperty {_gpName = "colors", _gcType = CoreType "PoolColorArray", _gcGetter = "get_colors", _gcSetter = "set_colors", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "interpolate", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offsets", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offsets", _gaType = CoreType "PoolRealArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offsets", _gmReturnType = CoreType "PoolRealArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_colors", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_colors", _gmReturnType = CoreType "PoolColorArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CollisionObject2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "input_pickable", _gcType = PrimitiveType BoolType, _gcGetter = "is_pickable", _gcSetter = "set_pickable", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "mouse_exited", _gsArguments = []},GodotSignal {_gsName = "mouse_entered", _gsArguments = []},GodotSignal {_gsName = "input_event", _gsArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Just ""},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_input_event", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rid", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pickable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_pickable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_shape_owner", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_shape_owner", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape_owners", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "shape_owner_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_owner", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shape_owner_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_set_one_way_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shape_owner_one_way_collision_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape", _gmReturnType = CustomType "Shape2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_get_shape_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_remove_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_owner_clear_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "owner_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "shape_find_owner", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape_index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "PhysicsBody2D", _gcBaseClass = "CollisionObject2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "layers", _gcType = PrimitiveType IntType, _gcGetter = "_get_layers", _gcSetter = "_set_layers", _gcIndex = -1},GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_layers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_layers", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_collision_exception_with", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_collision_exception_with", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "StaticBody2D", _gcBaseClass = "PhysicsBody2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "constant_linear_velocity", _gcType = CoreType "Vector2", _gcGetter = "get_constant_linear_velocity", _gcSetter = "set_constant_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "constant_angular_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_constant_angular_velocity", _gcSetter = "set_constant_angular_velocity", _gcIndex = -1},GodotProperty {_gpName = "friction", _gcType = PrimitiveType FloatType, _gcGetter = "get_friction", _gcSetter = "set_friction", _gcIndex = -1},GodotProperty {_gpName = "bounce", _gcType = PrimitiveType FloatType, _gcGetter = "get_bounce", _gcSetter = "set_bounce", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_constant_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vel", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_constant_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vel", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant_linear_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_constant_angular_velocity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_friction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "friction", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_friction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bounce", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounce", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounce", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RigidBody2D", _gcBaseClass = "PhysicsBody2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MODE_STATIC",1),("CCD_MODE_DISABLED",0),("CCD_MODE_CAST_RAY",1),("MODE_KINEMATIC",3),("CCD_MODE_CAST_SHAPE",2),("MODE_RIGID",0),("MODE_CHARACTER",2)], _gcProperties = [GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "mass", _gcType = PrimitiveType FloatType, _gcGetter = "get_mass", _gcSetter = "set_mass", _gcIndex = -1},GodotProperty {_gpName = "inertia", _gcType = PrimitiveType FloatType, _gcGetter = "get_inertia", _gcSetter = "set_inertia", _gcIndex = -1},GodotProperty {_gpName = "weight", _gcType = PrimitiveType FloatType, _gcGetter = "get_weight", _gcSetter = "set_weight", _gcIndex = -1},GodotProperty {_gpName = "friction", _gcType = PrimitiveType FloatType, _gcGetter = "get_friction", _gcSetter = "set_friction", _gcIndex = -1},GodotProperty {_gpName = "bounce", _gcType = PrimitiveType FloatType, _gcGetter = "get_bounce", _gcSetter = "set_bounce", _gcIndex = -1},GodotProperty {_gpName = "gravity_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity_scale", _gcSetter = "set_gravity_scale", _gcIndex = -1},GodotProperty {_gpName = "custom_integrator", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_custom_integrator", _gcSetter = "set_use_custom_integrator", _gcIndex = -1},GodotProperty {_gpName = "continuous_cd", _gcType = PrimitiveType IntType, _gcGetter = "get_continuous_collision_detection_mode", _gcSetter = "set_continuous_collision_detection_mode", _gcIndex = -1},GodotProperty {_gpName = "contacts_reported", _gcType = PrimitiveType IntType, _gcGetter = "get_max_contacts_reported", _gcSetter = "set_max_contacts_reported", _gcIndex = -1},GodotProperty {_gpName = "contact_monitor", _gcType = PrimitiveType BoolType, _gcGetter = "is_contact_monitor_enabled", _gcSetter = "set_contact_monitor", _gcIndex = -1},GodotProperty {_gpName = "sleeping", _gcType = PrimitiveType BoolType, _gcGetter = "is_sleeping", _gcSetter = "set_sleeping", _gcIndex = -1},GodotProperty {_gpName = "can_sleep", _gcType = PrimitiveType BoolType, _gcGetter = "is_able_to_sleep", _gcSetter = "set_can_sleep", _gcIndex = -1},GodotProperty {_gpName = "linear_velocity", _gcType = CoreType "Vector2", _gcGetter = "get_linear_velocity", _gcSetter = "set_linear_velocity", _gcIndex = -1},GodotProperty {_gpName = "linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_linear_damp", _gcSetter = "set_linear_damp", _gcIndex = -1},GodotProperty {_gpName = "angular_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_velocity", _gcSetter = "set_angular_velocity", _gcIndex = -1},GodotProperty {_gpName = "angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_damp", _gcSetter = "set_angular_damp", _gcIndex = -1},GodotProperty {_gpName = "applied_force", _gcType = CoreType "Vector2", _gcGetter = "get_applied_force", _gcSetter = "set_applied_force", _gcIndex = -1},GodotProperty {_gpName = "applied_torque", _gcType = PrimitiveType FloatType, _gcGetter = "get_applied_torque", _gcSetter = "set_applied_torque", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "body_entered", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_entered", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "local_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "sleeping_state_changed", _gsArguments = []},GodotSignal {_gsName = "body_exited", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_exited", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "local_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_integrate_forces", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "state", _gaType = CustomType "Physics2DDirectBodyState", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.RigidBody2D::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mass", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mass", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mass", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_inertia", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_inertia", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "inertia", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_weight", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "weight", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_weight", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_friction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "friction", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_friction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bounce", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bounce", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounce", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gravity_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_velocity", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_velocity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_velocity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_contacts_reported", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_contacts_reported", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_custom_integrator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_custom_integrator", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_contact_monitor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_contact_monitor_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_continuous_collision_detection_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_continuous_collision_detection_mode", _gmReturnType = EnumType "enum.RigidBody2D::CCDMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_axis_velocity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "axis_velocity", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "apply_impulse", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "impulse", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_applied_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "force", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_applied_force", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_applied_torque", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "torque", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_applied_torque", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_force", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "force", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_sleeping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sleeping", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_sleeping", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_can_sleep", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "able_to_sleep", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_able_to_sleep", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "test_motion", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.08"},GodotArgument {_gaName = "result", _gaType = CustomType "Physics2DTestMotionResult", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "_direct_state_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_colliding_bodies", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_STATIC",1),("MODE_KINEMATIC",3),("MODE_RIGID",0),("MODE_CHARACTER",2)]},GodotEnum {_geName = CustomType "CCDMode", _geValues = fromList [("CCD_MODE_DISABLED",0),("CCD_MODE_CAST_RAY",1),("CCD_MODE_CAST_SHAPE",2)]}]},GodotClass {_gcName = "KinematicBody2D", _gcBaseClass = "PhysicsBody2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "collision/safe_margin", _gcType = PrimitiveType FloatType, _gcGetter = "get_safe_margin", _gcSetter = "set_safe_margin", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "move_and_collide", _gmReturnType = CustomType "KinematicCollision2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rel_vec", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "move_and_slide", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_velocity", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "floor_normal", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"},GodotArgument {_gaName = "slope_stop_min_velocity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "5"},GodotArgument {_gaName = "max_bounces", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "4"},GodotArgument {_gaName = "floor_max_angle", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.785398"}]},GodotMethod {_gmName = "test_move", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rel_vec", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_on_floor", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_ceiling", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_wall", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_floor_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_safe_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pixels", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_safe_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_slide_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_slide_collision", _gmReturnType = CustomType "KinematicCollision2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "slide_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "KinematicCollision2D", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "position", _gcType = CoreType "Vector2", _gcGetter = "get_position", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "normal", _gcType = CoreType "Vector2", _gcGetter = "get_normal", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "travel", _gcType = CoreType "Vector2", _gcGetter = "get_travel", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "remainder", _gcType = CoreType "Vector2", _gcGetter = "get_remainder", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "local_shape", _gcType = CoreType "Object", _gcGetter = "get_local_shape", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider", _gcType = CoreType "Object", _gcGetter = "get_collider", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_id", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_id", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_shape", _gcType = CoreType "Object", _gcGetter = "get_collider_shape", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_shape_index", _gcType = PrimitiveType IntType, _gcGetter = "get_collider_shape_index", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_velocity", _gcType = CoreType "Vector2", _gcGetter = "get_collider_velocity", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "collider_metadata", _gcType = CoreType "Variant", _gcGetter = "get_collider_metadata", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_normal", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_travel", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_remainder", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_local_shape", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_velocity", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_metadata", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Area2D", _gcBaseClass = "CollisionObject2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SPACE_OVERRIDE_REPLACE",3),("SPACE_OVERRIDE_DISABLED",0),("SPACE_OVERRIDE_COMBINE_REPLACE",2),("SPACE_OVERRIDE_REPLACE_COMBINE",4),("SPACE_OVERRIDE_COMBINE",1)], _gcProperties = [GodotProperty {_gpName = "space_override", _gcType = PrimitiveType IntType, _gcGetter = "get_space_override_mode", _gcSetter = "set_space_override_mode", _gcIndex = -1},GodotProperty {_gpName = "gravity_point", _gcType = PrimitiveType BoolType, _gcGetter = "is_gravity_a_point", _gcSetter = "set_gravity_is_point", _gcIndex = -1},GodotProperty {_gpName = "gravity_distance_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity_distance_scale", _gcSetter = "set_gravity_distance_scale", _gcIndex = -1},GodotProperty {_gpName = "gravity_vec", _gcType = CoreType "Vector2", _gcGetter = "get_gravity_vector", _gcSetter = "set_gravity_vector", _gcIndex = -1},GodotProperty {_gpName = "gravity", _gcType = PrimitiveType FloatType, _gcGetter = "get_gravity", _gcSetter = "set_gravity", _gcIndex = -1},GodotProperty {_gpName = "linear_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_linear_damp", _gcSetter = "set_linear_damp", _gcIndex = -1},GodotProperty {_gpName = "angular_damp", _gcType = PrimitiveType FloatType, _gcGetter = "get_angular_damp", _gcSetter = "set_angular_damp", _gcIndex = -1},GodotProperty {_gpName = "priority", _gcType = PrimitiveType IntType, _gcGetter = "get_priority", _gcSetter = "set_priority", _gcIndex = -1},GodotProperty {_gpName = "monitoring", _gcType = PrimitiveType BoolType, _gcGetter = "is_monitoring", _gcSetter = "set_monitoring", _gcIndex = -1},GodotProperty {_gpName = "monitorable", _gcType = PrimitiveType BoolType, _gcGetter = "is_monitorable", _gcSetter = "set_monitorable", _gcIndex = -1},GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1},GodotProperty {_gpName = "audio_bus_override", _gcType = PrimitiveType BoolType, _gcGetter = "is_overriding_audio_bus", _gcSetter = "set_audio_bus_override", _gcIndex = -1},GodotProperty {_gpName = "audio_bus_name", _gcType = CoreType "String", _gcGetter = "get_audio_bus_name", _gcSetter = "set_audio_bus_name", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "area_exited", _gsArguments = [GodotArgument {_gaName = "area", _gaType = CustomType "Area2D", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_shape_exited", _gsArguments = [GodotArgument {_gaName = "area_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area", _gaType = CustomType "Area2D", _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "self_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_entered", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CustomType "PhysicsBody2D", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_entered", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CustomType "PhysicsBody2D", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_entered", _gsArguments = [GodotArgument {_gaName = "area", _gaType = CustomType "Area2D", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "area_shape_entered", _gsArguments = [GodotArgument {_gaName = "area_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area", _gaType = CustomType "Area2D", _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "self_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_exited", _gsArguments = [GodotArgument {_gaName = "body", _gaType = CustomType "PhysicsBody2D", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "body_shape_exited", _gsArguments = [GodotArgument {_gaName = "body_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "body", _gaType = CustomType "PhysicsBody2D", _gaDefaultValue = Just ""},GodotArgument {_gaName = "body_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""},GodotArgument {_gaName = "area_shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_body_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_body_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_enter_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_exit_tree", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_space_override_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "space_override_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_space_override_mode", _gmReturnType = EnumType "enum.Area2D::SpaceOverride", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_is_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_gravity_a_point", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_distance_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_distance_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity_vector", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vector", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity_vector", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gravity", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gravity", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_linear_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "linear_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_linear_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_angular_damp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "angular_damp", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_angular_damp", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_priority", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "priority", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_priority", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "collision_layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_monitoring", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_monitoring", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_monitorable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_monitorable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_overlapping_bodies", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_overlapping_areas", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "overlaps_body", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "body", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "overlaps_area", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "area", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_audio_bus_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_audio_bus_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_audio_bus_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_overriding_audio_bus", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_body_inout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg4", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_area_inout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg4", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "SpaceOverride", _geValues = fromList [("SPACE_OVERRIDE_REPLACE",3),("SPACE_OVERRIDE_DISABLED",0),("SPACE_OVERRIDE_COMBINE_REPLACE",2),("SPACE_OVERRIDE_REPLACE_COMBINE",4),("SPACE_OVERRIDE_COMBINE",1)]}]},GodotClass {_gcName = "CollisionShape2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "shape", _gcType = CustomType "Shape2D", _gcGetter = "get_shape", _gcSetter = "set_shape", _gcIndex = -1},GodotProperty {_gpName = "disabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_disabled", _gcSetter = "set_disabled", _gcIndex = -1},GodotProperty {_gpName = "one_way_collision", _gcType = PrimitiveType BoolType, _gcGetter = "is_one_way_collision_enabled", _gcSetter = "set_one_way_collision", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape", _gmReturnType = CustomType "Shape2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_one_way_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_one_way_collision_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_shape_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Shape2D", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "custom_solver_bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_custom_solver_bias", _gcSetter = "set_custom_solver_bias", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_custom_solver_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_solver_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "collide", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "with_shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "collide_with_motion", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "with_shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "collide_and_get_contacts", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "with_shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "collide_with_motion_and_get_contacts", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "local_motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "with_shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_motion", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "CollisionPolygon2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("BUILD_SOLIDS",0),("BUILD_SEGMENTS",1)], _gcProperties = [GodotProperty {_gpName = "build_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_build_mode", _gcSetter = "set_build_mode", _gcIndex = -1},GodotProperty {_gpName = "polygon", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_polygon", _gcSetter = "set_polygon", _gcIndex = -1},GodotProperty {_gpName = "disabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_disabled", _gcSetter = "set_disabled", _gcIndex = -1},GodotProperty {_gpName = "one_way_collision", _gcType = PrimitiveType BoolType, _gcGetter = "is_one_way_collision_enabled", _gcSetter = "set_one_way_collision", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_build_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "build_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_build_mode", _gmReturnType = EnumType "enum.CollisionPolygon2D::BuildMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_disabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_one_way_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_one_way_collision_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "BuildMode", _geValues = fromList [("BUILD_SOLIDS",0),("BUILD_SEGMENTS",1)]}]},GodotClass {_gcName = "RayCast2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabled", _gcSetter = "set_enabled", _gcIndex = -1},GodotProperty {_gpName = "exclude_parent", _gcType = PrimitiveType BoolType, _gcGetter = "get_exclude_parent_body", _gcSetter = "set_exclude_parent_body", _gcIndex = -1},GodotProperty {_gpName = "cast_to", _gcType = CoreType "Vector2", _gcGetter = "get_cast_to", _gcSetter = "set_cast_to", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cast_to", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "local_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cast_to", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_colliding", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "force_raycast_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collider_shape", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_point", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_collision_normal", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_exception_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_exception_rid", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_exception", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_exceptions", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_exclude_parent_body", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude_parent_body", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisibilityNotifier2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "rect", _gcType = CoreType "Rect2", _gcGetter = "get_rect", _gcSetter = "set_rect", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "screen_entered", _gsArguments = []},GodotSignal {_gsName = "viewport_entered", _gsArguments = [GodotArgument {_gaName = "viewport", _gaType = CustomType "Viewport", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "screen_exited", _gsArguments = []},GodotSignal {_gsName = "viewport_exited", _gsArguments = [GodotArgument {_gaName = "viewport", _gaType = CustomType "Viewport", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "set_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_on_screen", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisibilityEnabler2D", _gcBaseClass = "VisibilityNotifier2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ENABLER_PARENT_PROCESS",3),("ENABLER_MAX",6),("ENABLER_PARENT_PHYSICS_PROCESS",4),("ENABLER_PAUSE_ANIMATIONS",0),("ENABLER_PAUSE_ANIMATED_SPRITES",5),("ENABLER_PAUSE_PARTICLES",2),("ENABLER_FREEZE_BODIES",1)], _gcProperties = [GodotProperty {_gpName = "pause_animations", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 0},GodotProperty {_gpName = "freeze_bodies", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 1},GodotProperty {_gpName = "pause_particles", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 2},GodotProperty {_gpName = "pause_animated_sprites", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 5},GodotProperty {_gpName = "process_parent", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 3},GodotProperty {_gpName = "physics_process_parent", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabler_enabled", _gcSetter = "set_enabler", _gcIndex = 4}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_enabler", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabler", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabler_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabler", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_node_removed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Enabler", _geValues = fromList [("ENABLER_PARENT_PROCESS",3),("ENABLER_MAX",6),("ENABLER_PARENT_PHYSICS_PROCESS",4),("ENABLER_PAUSE_ANIMATIONS",0),("ENABLER_PAUSE_ANIMATED_SPRITES",5),("ENABLER_PAUSE_PARTICLES",2),("ENABLER_FREEZE_BODIES",1)]}]},GodotClass {_gcName = "Polygon2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "polygon", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_polygon", _gcSetter = "set_polygon", _gcIndex = -1},GodotProperty {_gpName = "uv", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_uv", _gcSetter = "set_uv", _gcIndex = -1},GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1},GodotProperty {_gpName = "vertex_colors", _gcType = CoreType "PoolColorArray", _gcGetter = "get_vertex_colors", _gcSetter = "set_vertex_colors", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "antialiased", _gcType = PrimitiveType BoolType, _gcGetter = "get_antialiased", _gcSetter = "set_antialiased", _gcIndex = -1},GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "texture_offset", _gcType = CoreType "Vector2", _gcGetter = "get_texture_offset", _gcSetter = "set_texture_offset", _gcIndex = -1},GodotProperty {_gpName = "texture_scale", _gcType = CoreType "Vector2", _gcGetter = "get_texture_scale", _gcSetter = "set_texture_scale", _gcIndex = -1},GodotProperty {_gpName = "texture_rotation_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_texture_rotation_degrees", _gcSetter = "set_texture_rotation_degrees", _gcIndex = -1},GodotProperty {_gpName = "texture_rotation", _gcType = PrimitiveType FloatType, _gcGetter = "get_texture_rotation", _gcSetter = "set_texture_rotation", _gcIndex = -1},GodotProperty {_gpName = "invert_enable", _gcType = PrimitiveType BoolType, _gcGetter = "get_invert", _gcSetter = "set_invert", _gcIndex = -1},GodotProperty {_gpName = "invert_border", _gcType = PrimitiveType FloatType, _gcGetter = "get_invert_border", _gcSetter = "set_invert_border", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uv", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vertex_colors", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertex_colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_colors", _gmReturnType = CoreType "PoolColorArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_rotation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_rotation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_rotation_degrees", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_rotation", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_rotation_degrees", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_invert", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "invert", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_invert", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_antialiased", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "antialiased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_antialiased", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_invert_border", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "invert_border", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_invert_border", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Light2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("SHADOW_FILTER_PCF7",3),("MODE_ADD",0),("MODE_SUB",1),("SHADOW_FILTER_PCF5",2),("SHADOW_FILTER_NONE",0),("SHADOW_FILTER_PCF9",4),("MODE_MASK",3),("MODE_MIX",2),("SHADOW_FILTER_PCF3",1),("SHADOW_FILTER_PCF13",5)], _gcProperties = [GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabled", _gcSetter = "set_enabled", _gcIndex = -1},GodotProperty {_gpName = "editor_only", _gcType = PrimitiveType BoolType, _gcGetter = "is_editor_only", _gcSetter = "set_editor_only", _gcIndex = -1},GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_texture_offset", _gcSetter = "set_texture_offset", _gcIndex = -1},GodotProperty {_gpName = "texture_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_texture_scale", _gcSetter = "set_texture_scale", _gcIndex = -1},GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1},GodotProperty {_gpName = "energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_energy", _gcSetter = "set_energy", _gcIndex = -1},GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "range_height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1},GodotProperty {_gpName = "range_z_min", _gcType = PrimitiveType IntType, _gcGetter = "get_z_range_min", _gcSetter = "set_z_range_min", _gcIndex = -1},GodotProperty {_gpName = "range_z_max", _gcType = PrimitiveType IntType, _gcGetter = "get_z_range_max", _gcSetter = "set_z_range_max", _gcIndex = -1},GodotProperty {_gpName = "range_layer_min", _gcType = PrimitiveType IntType, _gcGetter = "get_layer_range_min", _gcSetter = "set_layer_range_min", _gcIndex = -1},GodotProperty {_gpName = "range_layer_max", _gcType = PrimitiveType IntType, _gcGetter = "get_layer_range_max", _gcSetter = "set_layer_range_max", _gcIndex = -1},GodotProperty {_gpName = "range_item_cull_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_item_cull_mask", _gcSetter = "set_item_cull_mask", _gcIndex = -1},GodotProperty {_gpName = "shadow_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_shadow_enabled", _gcSetter = "set_shadow_enabled", _gcIndex = -1},GodotProperty {_gpName = "shadow_color", _gcType = CoreType "Color", _gcGetter = "get_shadow_color", _gcSetter = "set_shadow_color", _gcIndex = -1},GodotProperty {_gpName = "shadow_buffer_size", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_buffer_size", _gcSetter = "set_shadow_buffer_size", _gcIndex = -1},GodotProperty {_gpName = "shadow_gradient_length", _gcType = PrimitiveType FloatType, _gcGetter = "get_shadow_gradient_length", _gcSetter = "set_shadow_gradient_length", _gcIndex = -1},GodotProperty {_gpName = "shadow_filter", _gcType = PrimitiveType FloatType, _gcGetter = "get_shadow_filter", _gcSetter = "set_shadow_filter", _gcIndex = -1},GodotProperty {_gpName = "shadow_filter_smooth", _gcType = PrimitiveType FloatType, _gcGetter = "get_shadow_smooth", _gcSetter = "set_shadow_smooth", _gcIndex = -1},GodotProperty {_gpName = "shadow_item_cull_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_item_shadow_cull_mask", _gcSetter = "set_item_shadow_cull_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_editor_only", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "editor_only", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_editor_only", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_z_range_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_z_range_min", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_z_range_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_z_range_max", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_layer_range_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_layer_range_min", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_layer_range_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_layer_range_max", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_item_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item_cull_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_cull_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_item_shadow_cull_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item_shadow_cull_mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_item_shadow_cull_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.Light2D::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shadow_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_buffer_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_buffer_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_smooth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "smooth", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_smooth", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_gradient_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "multiplier", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_gradient_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_filter", _gmReturnType = EnumType "enum.Light2D::ShadowFilter", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shadow_color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ShadowFilter", _geValues = fromList [("SHADOW_FILTER_PCF7",3),("SHADOW_FILTER_PCF5",2),("SHADOW_FILTER_NONE",0),("SHADOW_FILTER_PCF9",4),("SHADOW_FILTER_PCF3",1),("SHADOW_FILTER_PCF13",5)]},GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_ADD",0),("MODE_SUB",1),("MODE_MASK",3),("MODE_MIX",2)]}]},GodotClass {_gcName = "LightOccluder2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "occluder", _gcType = CustomType "OccluderPolygon2D", _gcGetter = "get_occluder_polygon", _gcSetter = "set_occluder_polygon", _gcIndex = -1},GodotProperty {_gpName = "light_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_occluder_light_mask", _gcSetter = "set_occluder_light_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_occluder_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CustomType "OccluderPolygon2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_occluder_polygon", _gmReturnType = CustomType "OccluderPolygon2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_occluder_light_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_occluder_light_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_poly_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "OccluderPolygon2D", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("CULL_CLOCKWISE",1),("CULL_DISABLED",0),("CULL_COUNTER_CLOCKWISE",2)], _gcProperties = [GodotProperty {_gpName = "closed", _gcType = PrimitiveType BoolType, _gcGetter = "is_closed", _gcSetter = "set_closed", _gcIndex = -1},GodotProperty {_gpName = "cull_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_cull_mode", _gcSetter = "set_cull_mode", _gcIndex = -1},GodotProperty {_gpName = "polygon", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_polygon", _gcSetter = "set_polygon", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_closed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "closed", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_closed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cull_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cull_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cull_mode", _gmReturnType = EnumType "enum.OccluderPolygon2D::CullMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "CullMode", _geValues = fromList [("CULL_CLOCKWISE",1),("CULL_DISABLED",0),("CULL_COUNTER_CLOCKWISE",2)]}]},GodotClass {_gcName = "YSort", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "sort_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_sort_enabled", _gcSetter = "set_sort_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_sort_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_sort_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BackBufferCopy", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("COPY_MODE_VIEWPORT",2),("COPY_MODE_RECT",1),("COPY_MODE_DISABLED",0)], _gcProperties = [GodotProperty {_gpName = "copy_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_copy_mode", _gcSetter = "set_copy_mode", _gcIndex = -1},GodotProperty {_gpName = "rect", _gcType = CoreType "Rect2", _gcGetter = "get_rect", _gcSetter = "set_rect", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_copy_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "copy_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_copy_mode", _gmReturnType = EnumType "enum.BackBufferCopy::CopyMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "CopyMode", _geValues = fromList [("COPY_MODE_VIEWPORT",2),("COPY_MODE_RECT",1),("COPY_MODE_DISABLED",0)]}]},GodotClass {_gcName = "Camera2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ANCHOR_MODE_FIXED_TOP_LEFT",0),("ANCHOR_MODE_DRAG_CENTER",1)], _gcProperties = [GodotProperty {_gpName = "offset", _gcType = CoreType "Vector2", _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "anchor_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_anchor_mode", _gcSetter = "set_anchor_mode", _gcIndex = -1},GodotProperty {_gpName = "rotating", _gcType = PrimitiveType BoolType, _gcGetter = "is_rotating", _gcSetter = "set_rotating", _gcIndex = -1},GodotProperty {_gpName = "current", _gcType = PrimitiveType BoolType, _gcGetter = "is_current", _gcSetter = "_set_current", _gcIndex = -1},GodotProperty {_gpName = "zoom", _gcType = CoreType "Vector2", _gcGetter = "get_zoom", _gcSetter = "set_zoom", _gcIndex = -1},GodotProperty {_gpName = "custom_viewport", _gcType = CustomType "Viewport", _gcGetter = "get_custom_viewport", _gcSetter = "set_custom_viewport", _gcIndex = -1},GodotProperty {_gpName = "limit_left", _gcType = PrimitiveType IntType, _gcGetter = "get_limit", _gcSetter = "set_limit", _gcIndex = 0},GodotProperty {_gpName = "limit_top", _gcType = PrimitiveType IntType, _gcGetter = "get_limit", _gcSetter = "set_limit", _gcIndex = 1},GodotProperty {_gpName = "limit_right", _gcType = PrimitiveType IntType, _gcGetter = "get_limit", _gcSetter = "set_limit", _gcIndex = 2},GodotProperty {_gpName = "limit_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_limit", _gcSetter = "set_limit", _gcIndex = 3},GodotProperty {_gpName = "limit_smoothed", _gcType = PrimitiveType BoolType, _gcGetter = "is_limit_smoothing_enabled", _gcSetter = "set_limit_smoothing_enabled", _gcIndex = -1},GodotProperty {_gpName = "drag_margin_h_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_h_drag_enabled", _gcSetter = "set_h_drag_enabled", _gcIndex = -1},GodotProperty {_gpName = "drag_margin_v_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_v_drag_enabled", _gcSetter = "set_v_drag_enabled", _gcIndex = -1},GodotProperty {_gpName = "smoothing_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_follow_smoothing_enabled", _gcSetter = "set_enable_follow_smoothing", _gcIndex = -1},GodotProperty {_gpName = "smoothing_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_follow_smoothing", _gcSetter = "set_follow_smoothing", _gcIndex = -1},GodotProperty {_gpName = "offset_v", _gcType = PrimitiveType FloatType, _gcGetter = "get_v_offset", _gcSetter = "set_v_offset", _gcIndex = -1},GodotProperty {_gpName = "offset_h", _gcType = PrimitiveType FloatType, _gcGetter = "get_h_offset", _gcSetter = "set_h_offset", _gcIndex = -1},GodotProperty {_gpName = "drag_margin_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_drag_margin", _gcSetter = "set_drag_margin", _gcIndex = 0},GodotProperty {_gpName = "drag_margin_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_drag_margin", _gcSetter = "set_drag_margin", _gcIndex = 1},GodotProperty {_gpName = "drag_margin_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_drag_margin", _gcSetter = "set_drag_margin", _gcIndex = 2},GodotProperty {_gpName = "drag_margin_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_drag_margin", _gcSetter = "set_drag_margin", _gcIndex = 3},GodotProperty {_gpName = "editor_draw_screen", _gcType = PrimitiveType BoolType, _gcGetter = "is_screen_drawing_enabled", _gcSetter = "set_screen_drawing_enabled", _gcIndex = -1},GodotProperty {_gpName = "editor_draw_limits", _gcType = PrimitiveType BoolType, _gcGetter = "is_limit_drawing_enabled", _gcSetter = "set_limit_drawing_enabled", _gcIndex = -1},GodotProperty {_gpName = "editor_draw_drag_margin", _gcType = PrimitiveType BoolType, _gcGetter = "is_margin_drawing_enabled", _gcSetter = "set_margin_drawing_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_anchor_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anchor_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_anchor_mode", _gmReturnType = EnumType "enum.Camera2D::AnchorMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotating", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rotating", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_rotating", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_make_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_update_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_current", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "current", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_current", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_limit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "limit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_limit", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_limit_smoothing_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "limit_smoothing_enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_limit_smoothing_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_drag_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_v_drag_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_drag_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_h_drag_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_drag_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "drag_margin", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_drag_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_camera_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_camera_screen_center", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_zoom", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "zoom", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_zoom", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_custom_viewport", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "viewport", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_viewport", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_follow_smoothing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "follow_smoothing", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_follow_smoothing", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enable_follow_smoothing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "follow_smoothing", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_follow_smoothing_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "force_update_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "reset_smoothing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "align", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_old_smoothing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "follow_smoothing", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_screen_drawing_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "screen_drawing_enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_screen_drawing_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_limit_drawing_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "limit_drawing_enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_limit_drawing_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_margin_drawing_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin_drawing_enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_margin_drawing_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AnchorMode", _geValues = fromList [("ANCHOR_MODE_FIXED_TOP_LEFT",0),("ANCHOR_MODE_DRAG_CENTER",1)]}]},GodotClass {_gcName = "Joint2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "node_a", _gcType = CoreType "NodePath", _gcGetter = "get_node_a", _gcSetter = "set_node_a", _gcIndex = -1},GodotProperty {_gpName = "node_b", _gcType = CoreType "NodePath", _gcGetter = "get_node_b", _gcSetter = "set_node_b", _gcIndex = -1},GodotProperty {_gpName = "bias", _gcType = PrimitiveType FloatType, _gcGetter = "get_bias", _gcSetter = "set_bias", _gcIndex = -1},GodotProperty {_gpName = "disable_collision", _gcType = PrimitiveType BoolType, _gcGetter = "get_exclude_nodes_from_collision", _gcSetter = "set_exclude_nodes_from_collision", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_node_a", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_a", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_node_b", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_b", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bias", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bias", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bias", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_exclude_nodes_from_collision", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_exclude_nodes_from_collision", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PinJoint2D", _gcBaseClass = "Joint2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "softness", _gcType = PrimitiveType FloatType, _gcGetter = "get_softness", _gcSetter = "set_softness", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_softness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "softness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_softness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "GrooveJoint2D", _gcBaseClass = "Joint2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "length", _gcType = PrimitiveType FloatType, _gcGetter = "get_length", _gcSetter = "set_length", _gcIndex = -1},GodotProperty {_gpName = "initial_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_initial_offset", _gcSetter = "set_initial_offset", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_initial_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_initial_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "DampedSpringJoint2D", _gcBaseClass = "Joint2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "length", _gcType = PrimitiveType FloatType, _gcGetter = "get_length", _gcSetter = "set_length", _gcIndex = -1},GodotProperty {_gpName = "rest_length", _gcType = PrimitiveType FloatType, _gcGetter = "get_rest_length", _gcSetter = "set_rest_length", _gcIndex = -1},GodotProperty {_gpName = "stiffness", _gcType = PrimitiveType FloatType, _gcGetter = "get_stiffness", _gcSetter = "set_stiffness", _gcIndex = -1},GodotProperty {_gpName = "damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_damping", _gcSetter = "set_damping", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rest_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rest_length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rest_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stiffness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stiffness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stiffness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_damping", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "damping", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_damping", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "TileSet", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("BITMASK_2X2",0),("BITMASK_3X3",1),("BIND_BOTTOMLEFT",64),("BIND_LEFT",8),("BIND_RIGHT",32),("BIND_TOPLEFT",1),("BIND_BOTTOM",128),("BIND_BOTTOMRIGHT",256),("BIND_TOP",2),("BIND_TOPRIGHT",4)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_is_tile_bound", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "drawn_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "neighbor_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_forward_subtile_selection", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "autotile_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bitmask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tilemap", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile_location", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "create_tile", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "autotile_set_bitmask_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "autotile_get_bitmask_mode", _gmReturnType = EnumType "enum.TileSet::BitmaskMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_normal_map", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "normal_map", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_normal_map", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CustomType "ShaderMaterial", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_material", _gmReturnType = CustomType "ShaderMaterial", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_texture_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_texture_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "region", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_region", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_shape", _gmReturnType = CustomType "Shape2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_shape_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_shape_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_shape_one_way", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "one_way", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_shape_one_way", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_add_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shape_transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "one_way", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "autotile_coord", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "tile_get_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "shapes", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_shapes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_navigation_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "navigation_polygon", _gaType = CustomType "NavigationPolygon", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_navigation_polygon", _gmReturnType = CustomType "NavigationPolygon", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_navigation_polygon_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "navigation_polygon_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_navigation_polygon_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_light_occluder", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "light_occluder", _gaType = CustomType "OccluderPolygon2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_light_occluder", _gmReturnType = CustomType "OccluderPolygon2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_set_occluder_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "occluder_offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "tile_get_occluder_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_tile", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_last_unused_tile_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_tile_by_name", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tiles_ids", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AutotileBindings", _geValues = fromList [("BIND_BOTTOMLEFT",64),("BIND_LEFT",8),("BIND_RIGHT",32),("BIND_TOPLEFT",1),("BIND_BOTTOM",128),("BIND_BOTTOMRIGHT",256),("BIND_TOP",2),("BIND_TOPRIGHT",4)]},GodotEnum {_geName = CustomType "BitmaskMode", _geValues = fromList [("BITMASK_2X2",0),("BITMASK_3X3",1)]}]},GodotClass {_gcName = "TileMap", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MODE_CUSTOM",2),("HALF_OFFSET_Y",1),("MODE_SQUARE",0),("TILE_ORIGIN_BOTTOM_LEFT",2),("TILE_ORIGIN_CENTER",1),("HALF_OFFSET_DISABLED",2),("TILE_ORIGIN_TOP_LEFT",0),("MODE_ISOMETRIC",1),("INVALID_CELL",-1),("HALF_OFFSET_X",0)], _gcProperties = [GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "tile_set", _gcType = CustomType "TileSet", _gcGetter = "get_tileset", _gcSetter = "set_tileset", _gcIndex = -1},GodotProperty {_gpName = "cell_size", _gcType = CoreType "Vector2", _gcGetter = "get_cell_size", _gcSetter = "set_cell_size", _gcIndex = -1},GodotProperty {_gpName = "cell_quadrant_size", _gcType = PrimitiveType IntType, _gcGetter = "get_quadrant_size", _gcSetter = "set_quadrant_size", _gcIndex = -1},GodotProperty {_gpName = "cell_custom_transform", _gcType = CoreType "Transform2D", _gcGetter = "get_custom_transform", _gcSetter = "set_custom_transform", _gcIndex = -1},GodotProperty {_gpName = "cell_half_offset", _gcType = PrimitiveType IntType, _gcGetter = "get_half_offset", _gcSetter = "set_half_offset", _gcIndex = -1},GodotProperty {_gpName = "cell_tile_origin", _gcType = PrimitiveType IntType, _gcGetter = "get_tile_origin", _gcSetter = "set_tile_origin", _gcIndex = -1},GodotProperty {_gpName = "cell_y_sort", _gcType = PrimitiveType BoolType, _gcGetter = "is_y_sort_mode_enabled", _gcSetter = "set_y_sort_mode", _gcIndex = -1},GodotProperty {_gpName = "cell_clip_uv", _gcType = PrimitiveType BoolType, _gcGetter = "get_clip_uv", _gcSetter = "set_clip_uv", _gcIndex = -1},GodotProperty {_gpName = "collision_use_kinematic", _gcType = PrimitiveType BoolType, _gcGetter = "get_collision_use_kinematic", _gcSetter = "set_collision_use_kinematic", _gcIndex = -1},GodotProperty {_gpName = "collision_friction", _gcType = PrimitiveType FloatType, _gcGetter = "get_collision_friction", _gcSetter = "set_collision_friction", _gcIndex = -1},GodotProperty {_gpName = "collision_bounce", _gcType = PrimitiveType FloatType, _gcGetter = "get_collision_bounce", _gcSetter = "set_collision_bounce", _gcIndex = -1},GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1},GodotProperty {_gpName = "occluder_light_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_occluder_light_mask", _gcSetter = "set_occluder_light_mask", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "settings_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_tileset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tileset", _gaType = CustomType "TileSet", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tileset", _gmReturnType = CustomType "TileSet", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.TileMap::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_half_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "half_offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_half_offset", _gmReturnType = EnumType "enum.TileMap::HalfOffset", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_custom_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "custom_transform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_transform", _gmReturnType = CoreType "Transform2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_old_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_old_cell_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_quadrant_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_quadrant_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_tile_origin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "origin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tile_origin", _gmReturnType = EnumType "enum.TileMap::TileOrigin", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clip_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clip_uv", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_y_sort_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_y_sort_mode_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_use_kinematic", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "use_kinematic", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_use_kinematic", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_friction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_friction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_bounce", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_bounce", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_occluder_light_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_occluder_light_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flip_x", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "flip_y", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "autotile_coord", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "set_cellv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tile", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flip_x", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "flip_y", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "transpose", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_cell", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cellv", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_cell_x_flipped", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_cell_y_flipped", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_cell_transposed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_used_cells", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_used_cells_by_id", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_used_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "map_to_world", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "map_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ignore_half_ofs", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "world_to_map", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "world_position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_clear_quadrants", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_recreate_quadrants", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_dirty_quadrants", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "update_bitmask_area", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "update_bitmask_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "start", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"},GodotArgument {_gaName = "end", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "_set_tile_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_tile_data", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_CUSTOM",2),("MODE_SQUARE",0),("MODE_ISOMETRIC",1)]},GodotEnum {_geName = CustomType "TileOrigin", _geValues = fromList [("TILE_ORIGIN_BOTTOM_LEFT",2),("TILE_ORIGIN_CENTER",1),("TILE_ORIGIN_TOP_LEFT",0)]},GodotEnum {_geName = CustomType "HalfOffset", _geValues = fromList [("HALF_OFFSET_Y",1),("HALF_OFFSET_DISABLED",2),("HALF_OFFSET_X",0)]}]},GodotClass {_gcName = "ParallaxBackground", _gcBaseClass = "CanvasLayer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "scroll_offset", _gcType = CoreType "Vector2", _gcGetter = "get_scroll_offset", _gcSetter = "set_scroll_offset", _gcIndex = -1},GodotProperty {_gpName = "scroll_base_offset", _gcType = CoreType "Vector2", _gcGetter = "get_scroll_base_offset", _gcSetter = "set_scroll_base_offset", _gcIndex = -1},GodotProperty {_gpName = "scroll_base_scale", _gcType = CoreType "Vector2", _gcGetter = "get_scroll_base_scale", _gcSetter = "set_scroll_base_scale", _gcIndex = -1},GodotProperty {_gpName = "scroll_limit_begin", _gcType = CoreType "Vector2", _gcGetter = "get_limit_begin", _gcSetter = "set_limit_begin", _gcIndex = -1},GodotProperty {_gpName = "scroll_limit_end", _gcType = CoreType "Vector2", _gcGetter = "get_limit_end", _gcSetter = "set_limit_end", _gcIndex = -1},GodotProperty {_gpName = "scroll_ignore_camera_zoom", _gcType = PrimitiveType BoolType, _gcGetter = "is_ignore_camera_zoom", _gcSetter = "set_ignore_camera_zoom", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_camera_moved", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_scroll_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scroll_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scroll_base_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scroll_base_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_scroll_base_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scroll_base_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_limit_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_limit_begin", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_limit_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_limit_end", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ignore_camera_zoom", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ignore", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_ignore_camera_zoom", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ParallaxLayer", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "motion_scale", _gcType = CoreType "Vector2", _gcGetter = "get_motion_scale", _gcSetter = "set_motion_scale", _gcIndex = -1},GodotProperty {_gpName = "motion_offset", _gcType = CoreType "Vector2", _gcGetter = "get_motion_offset", _gcSetter = "set_motion_offset", _gcIndex = -1},GodotProperty {_gpName = "motion_mirroring", _gcType = CoreType "Vector2", _gcGetter = "get_mirroring", _gcSetter = "set_mirroring", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_motion_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_motion_scale", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_motion_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_motion_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mirroring", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mirror", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mirroring", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "TouchScreenButton", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("VISIBILITY_ALWAYS",0),("VISIBILITY_TOUCHSCREEN_ONLY",1)], _gcProperties = [GodotProperty {_gpName = "normal", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "pressed", _gcType = CustomType "Texture", _gcGetter = "get_texture_pressed", _gcSetter = "set_texture_pressed", _gcIndex = -1},GodotProperty {_gpName = "bitmask", _gcType = CustomType "BitMap", _gcGetter = "get_bitmask", _gcSetter = "set_bitmask", _gcIndex = -1},GodotProperty {_gpName = "shape", _gcType = CustomType "Shape2D", _gcGetter = "get_shape", _gcSetter = "set_shape", _gcIndex = -1},GodotProperty {_gpName = "shape_centered", _gcType = PrimitiveType BoolType, _gcGetter = "is_shape_centered", _gcSetter = "set_shape_centered", _gcIndex = -1},GodotProperty {_gpName = "shape_visible", _gcType = PrimitiveType BoolType, _gcGetter = "is_shape_visible", _gcSetter = "set_shape_visible", _gcIndex = -1},GodotProperty {_gpName = "passby_press", _gcType = PrimitiveType BoolType, _gcGetter = "is_passby_press_enabled", _gcSetter = "set_passby_press", _gcIndex = -1},GodotProperty {_gpName = "action", _gcType = CoreType "String", _gcGetter = "get_action", _gcSetter = "set_action", _gcIndex = -1},GodotProperty {_gpName = "visibility_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_visibility_mode", _gcSetter = "set_visibility_mode", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "released", _gsArguments = []},GodotSignal {_gsName = "pressed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture_pressed", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_pressed", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bitmask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bitmask", _gaType = CustomType "BitMap", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bitmask", _gmReturnType = CustomType "BitMap", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = CustomType "Shape2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shape", _gmReturnType = CustomType "Shape2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shape_centered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bool", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shape_centered", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shape_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bool", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_shape_visible", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "action", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_visibility_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_visibility_mode", _gmReturnType = EnumType "enum.TouchScreenButton::VisibilityMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_passby_press", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_passby_press_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_pressed", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "VisibilityMode", _geValues = fromList [("VISIBILITY_ALWAYS",0),("VISIBILITY_TOUCHSCREEN_ONLY",1)]}]},GodotClass {_gcName = "RemoteTransform2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "remote_path", _gcType = CoreType "NodePath", _gcGetter = "get_remote_node", _gcSetter = "set_remote_node", _gcIndex = -1},GodotProperty {_gpName = "use_global_coordinates", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_global_coordinates", _gcSetter = "set_use_global_coordinates", _gcIndex = -1},GodotProperty {_gpName = "update_position", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_position", _gcSetter = "set_update_position", _gcIndex = -1},GodotProperty {_gpName = "update_rotation", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_rotation", _gcSetter = "set_update_rotation", _gcIndex = -1},GodotProperty {_gpName = "update_scale", _gcType = PrimitiveType BoolType, _gcGetter = "get_update_scale", _gcSetter = "set_update_scale", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_remote_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_remote_node", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_global_coordinates", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "use_global_coordinates", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_global_coordinates", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_position", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_position", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_rotation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_rotation", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_rotation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_update_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "update_remote_scale", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_update_scale", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ArrayMesh", _gcBaseClass = "Mesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("ARRAY_FORMAT_INDEX",256),("ARRAY_FORMAT_COLOR",8),("ARRAY_FORMAT_TEX_UV",16),("ARRAY_FORMAT_VERTEX",1),("ARRAY_MAX",9),("ARRAY_NORMAL",1),("ARRAY_FORMAT_TEX_UV2",32),("ARRAY_INDEX",8),("ARRAY_COLOR",3),("ARRAY_TEX_UV",4),("ARRAY_FORMAT_NORMAL",2),("ARRAY_TEX_UV2",5),("ARRAY_FORMAT_BONES",64),("ARRAY_WEIGHTS_SIZE",4),("ARRAY_WEIGHTS",7),("ARRAY_TANGENT",2),("ARRAY_BONES",6),("NO_INDEX_ARRAY",-1),("ARRAY_VERTEX",0),("ARRAY_FORMAT_WEIGHTS",128),("ARRAY_FORMAT_TANGENT",4)], _gcProperties = [GodotProperty {_gpName = "blend_shape_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_blend_shape_mode", _gcSetter = "set_blend_shape_mode", _gcIndex = -1},GodotProperty {_gpName = "custom_aabb", _gcType = CoreType "AABB", _gcGetter = "get_custom_aabb", _gcSetter = "set_custom_aabb", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_blend_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_blend_shape_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_blend_shape_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_blend_shapes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_blend_shape_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_blend_shape_mode", _gmReturnType = EnumType "enum.Mesh::BlendShapeMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_surface_from_arrays", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "primitive", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arrays", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "blend_shapes", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "compress_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "97792"}]},GodotMethod {_gmName = "get_surface_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "surface_remove", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_update_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_array_len", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_array_index_len", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_format", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_primitive_type", _gmReturnType = EnumType "enum.Mesh::PrimitiveType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_set_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_arrays", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "surface_get_blend_shape_arrays", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "surf_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "center_geometry", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "regen_normalmaps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "lightmap_unwrap", _gmReturnType = EnumType "enum.Error", _gmIsEditor = True, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Transform", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_custom_aabb", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "aabb", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_custom_aabb", _gmReturnType = CoreType "AABB", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "ArrayFormat", _geValues = fromList [("ARRAY_FORMAT_INDEX",256),("ARRAY_FORMAT_COLOR",8),("ARRAY_FORMAT_TEX_UV",16),("ARRAY_FORMAT_VERTEX",1),("ARRAY_FORMAT_TEX_UV2",32),("ARRAY_FORMAT_NORMAL",2),("ARRAY_FORMAT_BONES",64),("ARRAY_FORMAT_WEIGHTS",128),("ARRAY_FORMAT_TANGENT",4)]},GodotEnum {_geName = CustomType "ArrayType", _geValues = fromList [("ARRAY_MAX",9),("ARRAY_NORMAL",1),("ARRAY_INDEX",8),("ARRAY_COLOR",3),("ARRAY_TEX_UV",4),("ARRAY_TEX_UV2",5),("ARRAY_WEIGHTS",7),("ARRAY_TANGENT",2),("ARRAY_BONES",6),("ARRAY_VERTEX",0)]}]},GodotClass {_gcName = "PrimitiveMesh", _gcBaseClass = "Mesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "material", _gcType = CustomType "SpatialMaterial,ShaderMaterial", _gcGetter = "get_material", _gcSetter = "set_material", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_mesh_arrays", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CapsuleMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1},GodotProperty {_gpName = "mid_height", _gcType = PrimitiveType FloatType, _gcGetter = "get_mid_height", _gcSetter = "set_mid_height", _gcIndex = -1},GodotProperty {_gpName = "radial_segments", _gcType = PrimitiveType IntType, _gcGetter = "get_radial_segments", _gcSetter = "set_radial_segments", _gcIndex = -1},GodotProperty {_gpName = "rings", _gcType = PrimitiveType IntType, _gcGetter = "get_rings", _gcSetter = "set_rings", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mid_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mid_height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mid_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_radial_segments", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radial_segments", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rings", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rings", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rings", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CubeMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "subdivide_width", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_width", _gcSetter = "set_subdivide_width", _gcIndex = -1},GodotProperty {_gpName = "subdivide_height", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_height", _gcSetter = "set_subdivide_height", _gcIndex = -1},GodotProperty {_gpName = "subdivide_depth", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_depth", _gcSetter = "set_subdivide_depth", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subdivide", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "divisions", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "divisions", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_depth", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CylinderMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "top_radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_top_radius", _gcSetter = "set_top_radius", _gcIndex = -1},GodotProperty {_gpName = "bottom_radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_bottom_radius", _gcSetter = "set_bottom_radius", _gcIndex = -1},GodotProperty {_gpName = "height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1},GodotProperty {_gpName = "radial_segments", _gcType = PrimitiveType IntType, _gcGetter = "get_radial_segments", _gcSetter = "set_radial_segments", _gcIndex = -1},GodotProperty {_gpName = "rings", _gcType = PrimitiveType IntType, _gcGetter = "get_rings", _gcSetter = "set_rings", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_top_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_top_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bottom_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bottom_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_radial_segments", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radial_segments", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rings", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rings", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rings", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PlaneMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "subdivide_width", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_width", _gcSetter = "set_subdivide_width", _gcIndex = -1},GodotProperty {_gpName = "subdivide_depth", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_depth", _gcSetter = "set_subdivide_depth", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subdivide", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subdivide", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_depth", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PrismMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "left_to_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_left_to_right", _gcSetter = "set_left_to_right", _gcIndex = -1},GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "subdivide_width", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_width", _gcSetter = "set_subdivide_width", _gcIndex = -1},GodotProperty {_gpName = "subdivide_height", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_height", _gcSetter = "set_subdivide_height", _gcIndex = -1},GodotProperty {_gpName = "subdivide_depth", _gcType = PrimitiveType IntType, _gcGetter = "get_subdivide_depth", _gcSetter = "set_subdivide_depth", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_left_to_right", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "left_to_right", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_left_to_right", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subdivide_depth", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subdivide_depth", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "QuadMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SphereMesh", _gcBaseClass = "PrimitiveMesh", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1},GodotProperty {_gpName = "height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1},GodotProperty {_gpName = "radial_segments", _gcType = PrimitiveType IntType, _gcGetter = "get_radial_segments", _gcSetter = "set_radial_segments", _gcIndex = -1},GodotProperty {_gpName = "rings", _gcType = PrimitiveType IntType, _gcGetter = "get_rings", _gcSetter = "set_rings", _gcIndex = -1},GodotProperty {_gpName = "is_hemisphere", _gcType = PrimitiveType BoolType, _gcGetter = "get_is_hemisphere", _gcSetter = "set_is_hemisphere", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_radial_segments", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radial_segments", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radial_segments", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rings", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rings", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rings", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_is_hemisphere", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "is_hemisphere", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_is_hemisphere", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SpatialMaterial", _gcBaseClass = "Material", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("DIFFUSE_BURLEY",0),("DEPTH_DRAW_ALWAYS",1),("FLAG_DISABLE_DEPTH_TEST",2),("TEXTURE_MAX",16),("TEXTURE_METALLIC",1),("FEATURE_MAX",12),("TEXTURE_DETAIL_ALBEDO",14),("TEXTURE_CHANNEL_RED",0),("SPECULAR_TOON",3),("FEATURE_EMISSION",1),("TEXTURE_CHANNEL_BLUE",2),("TEXTURE_AMBIENT_OCCLUSION",8),("TEXTURE_DETAIL_MASK",13),("FEATURE_DETAIL",11),("SPECULAR_SCHLICK_GGX",0),("FEATURE_SUBSURACE_SCATTERING",8),("FEATURE_DEPTH_MAPPING",7),("TEXTURE_REFRACTION",12),("FEATURE_TRANSPARENT",0),("FEATURE_TRANSMISSION",9),("FLAG_TRIPLANAR_USE_WORLD",9),("DEPTH_DRAW_ALPHA_OPAQUE_PREPASS",3),("FLAG_USE_ALPHA_SCISSOR",12),("DIFFUSE_LAMBERT",1),("DETAIL_UV_2",1),("DIFFUSE_LAMBERT_WRAP",2),("BLEND_MODE_ADD",1),("BILLBOARD_ENABLED",1),("TEXTURE_NORMAL",4),("FEATURE_NORMAL_MAPPING",2),("TEXTURE_TRANSMISSION",11),("FLAG_ALBEDO_FROM_VERTEX_COLOR",3),("FEATURE_REFRACTION",10),("BLEND_MODE_MIX",0),("BILLBOARD_FIXED_Y",2),("TEXTURE_FLOWMAP",7),("TEXTURE_RIM",5),("FEATURE_AMBIENT_OCCLUSION",6),("DEPTH_DRAW_OPAQUE_ONLY",0),("FLAG_USE_POINT_SIZE",5),("CULL_DISABLED",2),("FEATURE_ANISOTROPY",5),("TEXTURE_ROUGHNESS",2),("EMISSION_OP_ADD",0),("FLAG_MAX",14),("FLAG_FIXED_SIZE",6),("FLAG_UNSHADED",0),("TEXTURE_CHANNEL_GREEN",1),("SPECULAR_BLINN",1),("CULL_BACK",0),("EMISSION_OP_MULTIPLY",1),("FLAG_SRGB_VERTEX_COLOR",4),("FLAG_EMISSION_ON_UV2",11),("FLAG_AO_ON_UV2",10),("TEXTURE_DEPTH",9),("DIFFUSE_OREN_NAYAR",3),("FLAG_UV1_USE_TRIPLANAR",7),("DEPTH_DRAW_DISABLED",2),("TEXTURE_DETAIL_NORMAL",15),("FEATURE_RIM",3),("SPECULAR_DISABLED",4),("CULL_FRONT",1),("TEXTURE_SUBSURFACE_SCATTERING",10),("TEXTURE_CLEARCOAT",6),("TEXTURE_CHANNEL_ALPHA",3),("FEATURE_CLEARCOAT",4),("FLAG_ALBEDO_TEXTURE_FORCE_SRGB",13),("DIFFUSE_TOON",4),("DETAIL_UV_1",0),("BILLBOARD_DISABLED",0),("BLEND_MODE_MUL",3),("FLAG_USE_VERTEX_LIGHTING",1),("FLAG_UV2_USE_TRIPLANAR",8),("BLEND_MODE_SUB",2),("SPECULAR_PHONG",2),("BILLBOARD_PARTICLES",3),("TEXTURE_EMISSION",3),("TEXTURE_CHANNEL_GRAYSCALE",4),("TEXTURE_ALBEDO",0)], _gcProperties = [GodotProperty {_gpName = "flags_transparent", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 0},GodotProperty {_gpName = "flags_unshaded", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 0},GodotProperty {_gpName = "flags_vertex_lighting", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 1},GodotProperty {_gpName = "flags_no_depth_test", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 2},GodotProperty {_gpName = "flags_use_point_size", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 5},GodotProperty {_gpName = "flags_world_triplanar", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 9},GodotProperty {_gpName = "flags_fixed_size", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 6},GodotProperty {_gpName = "flags_albedo_tex_force_srgb", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 13},GodotProperty {_gpName = "vertex_color_use_as_albedo", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 3},GodotProperty {_gpName = "vertex_color_is_srgb", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 4},GodotProperty {_gpName = "params_diffuse_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_diffuse_mode", _gcSetter = "set_diffuse_mode", _gcIndex = -1},GodotProperty {_gpName = "params_specular_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_specular_mode", _gcSetter = "set_specular_mode", _gcIndex = -1},GodotProperty {_gpName = "params_blend_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_blend_mode", _gcSetter = "set_blend_mode", _gcIndex = -1},GodotProperty {_gpName = "params_cull_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_cull_mode", _gcSetter = "set_cull_mode", _gcIndex = -1},GodotProperty {_gpName = "params_depth_draw_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_depth_draw_mode", _gcSetter = "set_depth_draw_mode", _gcIndex = -1},GodotProperty {_gpName = "params_line_width", _gcType = PrimitiveType FloatType, _gcGetter = "get_line_width", _gcSetter = "set_line_width", _gcIndex = -1},GodotProperty {_gpName = "params_point_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_point_size", _gcSetter = "set_point_size", _gcIndex = -1},GodotProperty {_gpName = "params_billboard_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_billboard_mode", _gcSetter = "set_billboard_mode", _gcIndex = -1},GodotProperty {_gpName = "params_grow", _gcType = PrimitiveType BoolType, _gcGetter = "is_grow_enabled", _gcSetter = "set_grow_enabled", _gcIndex = -1},GodotProperty {_gpName = "params_grow_amount", _gcType = PrimitiveType FloatType, _gcGetter = "get_grow", _gcSetter = "set_grow", _gcIndex = -1},GodotProperty {_gpName = "params_use_alpha_scissor", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 12},GodotProperty {_gpName = "params_alpha_scissor_threshold", _gcType = PrimitiveType FloatType, _gcGetter = "get_alpha_scissor_threshold", _gcSetter = "set_alpha_scissor_threshold", _gcIndex = -1},GodotProperty {_gpName = "particles_anim_h_frames", _gcType = PrimitiveType IntType, _gcGetter = "get_particles_anim_h_frames", _gcSetter = "set_particles_anim_h_frames", _gcIndex = -1},GodotProperty {_gpName = "particles_anim_v_frames", _gcType = PrimitiveType IntType, _gcGetter = "get_particles_anim_v_frames", _gcSetter = "set_particles_anim_v_frames", _gcIndex = -1},GodotProperty {_gpName = "particles_anim_loop", _gcType = PrimitiveType BoolType, _gcGetter = "get_particles_anim_loop", _gcSetter = "set_particles_anim_loop", _gcIndex = -1},GodotProperty {_gpName = "albedo_color", _gcType = CoreType "Color", _gcGetter = "get_albedo", _gcSetter = "set_albedo", _gcIndex = -1},GodotProperty {_gpName = "albedo_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 0},GodotProperty {_gpName = "metallic", _gcType = PrimitiveType FloatType, _gcGetter = "get_metallic", _gcSetter = "set_metallic", _gcIndex = -1},GodotProperty {_gpName = "metallic_specular", _gcType = PrimitiveType FloatType, _gcGetter = "get_specular", _gcSetter = "set_specular", _gcIndex = -1},GodotProperty {_gpName = "metallic_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 1},GodotProperty {_gpName = "metallic_texture_channel", _gcType = PrimitiveType IntType, _gcGetter = "get_metallic_texture_channel", _gcSetter = "set_metallic_texture_channel", _gcIndex = -1},GodotProperty {_gpName = "roughness", _gcType = PrimitiveType FloatType, _gcGetter = "get_roughness", _gcSetter = "set_roughness", _gcIndex = -1},GodotProperty {_gpName = "roughness_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 2},GodotProperty {_gpName = "roughness_texture_channel", _gcType = PrimitiveType IntType, _gcGetter = "get_roughness_texture_channel", _gcSetter = "set_roughness_texture_channel", _gcIndex = -1},GodotProperty {_gpName = "emission_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 1},GodotProperty {_gpName = "emission", _gcType = CoreType "Color", _gcGetter = "get_emission", _gcSetter = "set_emission", _gcIndex = -1},GodotProperty {_gpName = "emission_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_emission_energy", _gcSetter = "set_emission_energy", _gcIndex = -1},GodotProperty {_gpName = "emission_operator", _gcType = PrimitiveType IntType, _gcGetter = "get_emission_operator", _gcSetter = "set_emission_operator", _gcIndex = -1},GodotProperty {_gpName = "emission_on_uv2", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 11},GodotProperty {_gpName = "emission_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 3},GodotProperty {_gpName = "normal_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 2},GodotProperty {_gpName = "normal_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_normal_scale", _gcSetter = "set_normal_scale", _gcIndex = -1},GodotProperty {_gpName = "normal_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 4},GodotProperty {_gpName = "rim_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 3},GodotProperty {_gpName = "rim", _gcType = PrimitiveType FloatType, _gcGetter = "get_rim", _gcSetter = "set_rim", _gcIndex = -1},GodotProperty {_gpName = "rim_tint", _gcType = PrimitiveType FloatType, _gcGetter = "get_rim_tint", _gcSetter = "set_rim_tint", _gcIndex = -1},GodotProperty {_gpName = "rim_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 5},GodotProperty {_gpName = "clearcoat_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 4},GodotProperty {_gpName = "clearcoat", _gcType = PrimitiveType FloatType, _gcGetter = "get_clearcoat", _gcSetter = "set_clearcoat", _gcIndex = -1},GodotProperty {_gpName = "clearcoat_gloss", _gcType = PrimitiveType FloatType, _gcGetter = "get_clearcoat_gloss", _gcSetter = "set_clearcoat_gloss", _gcIndex = -1},GodotProperty {_gpName = "clearcoat_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 6},GodotProperty {_gpName = "anisotropy_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 5},GodotProperty {_gpName = "anisotropy", _gcType = PrimitiveType FloatType, _gcGetter = "get_anisotropy", _gcSetter = "set_anisotropy", _gcIndex = -1},GodotProperty {_gpName = "anisotropy_flowmap", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 7},GodotProperty {_gpName = "ao_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 6},GodotProperty {_gpName = "ao_light_affect", _gcType = PrimitiveType FloatType, _gcGetter = "get_ao_light_affect", _gcSetter = "set_ao_light_affect", _gcIndex = -1},GodotProperty {_gpName = "ao_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 8},GodotProperty {_gpName = "ao_on_uv2", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 10},GodotProperty {_gpName = "ao_texture_channel", _gcType = PrimitiveType IntType, _gcGetter = "get_ao_texture_channel", _gcSetter = "set_ao_texture_channel", _gcIndex = -1},GodotProperty {_gpName = "depth_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 7},GodotProperty {_gpName = "depth_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_depth_scale", _gcSetter = "set_depth_scale", _gcIndex = -1},GodotProperty {_gpName = "depth_deep_parallax", _gcType = PrimitiveType BoolType, _gcGetter = "is_depth_deep_parallax_enabled", _gcSetter = "set_depth_deep_parallax", _gcIndex = -1},GodotProperty {_gpName = "depth_min_layers", _gcType = PrimitiveType IntType, _gcGetter = "get_depth_deep_parallax_min_layers", _gcSetter = "set_depth_deep_parallax_min_layers", _gcIndex = -1},GodotProperty {_gpName = "depth_max_layers", _gcType = PrimitiveType IntType, _gcGetter = "get_depth_deep_parallax_max_layers", _gcSetter = "set_depth_deep_parallax_max_layers", _gcIndex = -1},GodotProperty {_gpName = "depth_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 9},GodotProperty {_gpName = "subsurf_scatter_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 8},GodotProperty {_gpName = "subsurf_scatter_strength", _gcType = PrimitiveType FloatType, _gcGetter = "get_subsurface_scattering_strength", _gcSetter = "set_subsurface_scattering_strength", _gcIndex = -1},GodotProperty {_gpName = "subsurf_scatter_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 10},GodotProperty {_gpName = "transmission_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 9},GodotProperty {_gpName = "transmission", _gcType = CoreType "Color", _gcGetter = "get_transmission", _gcSetter = "set_transmission", _gcIndex = -1},GodotProperty {_gpName = "transmission_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 11},GodotProperty {_gpName = "refraction_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 10},GodotProperty {_gpName = "refraction_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_refraction", _gcSetter = "set_refraction", _gcIndex = -1},GodotProperty {_gpName = "refraction_texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 12},GodotProperty {_gpName = "refraction_texture_channel", _gcType = PrimitiveType IntType, _gcGetter = "get_refraction_texture_channel", _gcSetter = "set_refraction_texture_channel", _gcIndex = -1},GodotProperty {_gpName = "detail_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "get_feature", _gcSetter = "set_feature", _gcIndex = 11},GodotProperty {_gpName = "detail_mask", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 13},GodotProperty {_gpName = "detail_blend_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_detail_blend_mode", _gcSetter = "set_detail_blend_mode", _gcIndex = -1},GodotProperty {_gpName = "detail_uv_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_detail_uv", _gcSetter = "set_detail_uv", _gcIndex = -1},GodotProperty {_gpName = "detail_albedo", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 14},GodotProperty {_gpName = "detail_normal", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = 15},GodotProperty {_gpName = "uv1_scale", _gcType = CoreType "Vector3", _gcGetter = "get_uv1_scale", _gcSetter = "set_uv1_scale", _gcIndex = -1},GodotProperty {_gpName = "uv1_offset", _gcType = CoreType "Vector3", _gcGetter = "get_uv1_offset", _gcSetter = "set_uv1_offset", _gcIndex = -1},GodotProperty {_gpName = "uv1_triplanar", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 7},GodotProperty {_gpName = "uv1_triplanar_sharpness", _gcType = PrimitiveType FloatType, _gcGetter = "get_uv1_triplanar_blend_sharpness", _gcSetter = "set_uv1_triplanar_blend_sharpness", _gcIndex = -1},GodotProperty {_gpName = "uv2_scale", _gcType = CoreType "Vector3", _gcGetter = "get_uv2_scale", _gcSetter = "set_uv2_scale", _gcIndex = -1},GodotProperty {_gpName = "uv2_offset", _gcType = CoreType "Vector3", _gcGetter = "get_uv2_offset", _gcSetter = "set_uv2_offset", _gcIndex = -1},GodotProperty {_gpName = "uv2_triplanar", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 8},GodotProperty {_gpName = "uv2_triplanar_sharpness", _gcType = PrimitiveType FloatType, _gcGetter = "get_uv2_triplanar_blend_sharpness", _gcSetter = "set_uv2_triplanar_blend_sharpness", _gcIndex = -1},GodotProperty {_gpName = "proximity_fade_enable", _gcType = PrimitiveType BoolType, _gcGetter = "is_proximity_fade_enabled", _gcSetter = "set_proximity_fade", _gcIndex = -1},GodotProperty {_gpName = "proximity_fade_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_proximity_fade_distance", _gcSetter = "set_proximity_fade_distance", _gcIndex = -1},GodotProperty {_gpName = "distance_fade_enable", _gcType = PrimitiveType BoolType, _gcGetter = "is_distance_fade_enabled", _gcSetter = "set_distance_fade", _gcIndex = -1},GodotProperty {_gpName = "distance_fade_min_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_distance_fade_min_distance", _gcSetter = "set_distance_fade_min_distance", _gcIndex = -1},GodotProperty {_gpName = "distance_fade_max_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_distance_fade_max_distance", _gcSetter = "set_distance_fade_max_distance", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_albedo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "albedo", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_albedo", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_specular", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "specular", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_specular", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_metallic", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "metallic", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_metallic", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_roughness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "roughness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_roughness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "emission", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "emission_energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rim", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rim", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rim", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rim_tint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rim_tint", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rim_tint", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clearcoat", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "clearcoat", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clearcoat", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clearcoat_gloss", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "clearcoat_gloss", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_clearcoat_gloss", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_anisotropy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anisotropy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_anisotropy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "depth_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_subsurface_scattering_strength", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "strength", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_subsurface_scattering_strength", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_transmission", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "transmission", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_transmission", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_refraction", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "refraction", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_refraction", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_line_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "line_width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_line_width", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_point_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_detail_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail_uv", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_detail_uv", _gmReturnType = EnumType "enum.SpatialMaterial::DetailUV", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_blend_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "blend_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_blend_mode", _gmReturnType = EnumType "enum.SpatialMaterial::BlendMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth_draw_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "depth_draw_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth_draw_mode", _gmReturnType = EnumType "enum.SpatialMaterial::DepthDrawMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cull_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "cull_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cull_mode", _gmReturnType = EnumType "enum.SpatialMaterial::CullMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_diffuse_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "diffuse_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_diffuse_mode", _gmReturnType = EnumType "enum.SpatialMaterial::DiffuseMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_specular_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "specular_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_specular_mode", _gmReturnType = EnumType "enum.SpatialMaterial::SpecularMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_feature", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "feature", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_feature", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "feature", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_detail_blend_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail_blend_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_detail_blend_mode", _gmReturnType = EnumType "enum.SpatialMaterial::BlendMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv1_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv1_scale", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv1_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv1_offset", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv1_triplanar_blend_sharpness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sharpness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv1_triplanar_blend_sharpness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv2_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv2_scale", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv2_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv2_offset", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_uv2_triplanar_blend_sharpness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sharpness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_uv2_triplanar_blend_sharpness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_billboard_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_billboard_mode", _gmReturnType = EnumType "enum.SpatialMaterial::BillboardMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_particles_anim_h_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_particles_anim_h_frames", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_particles_anim_v_frames", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_particles_anim_v_frames", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_particles_anim_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "frames", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_particles_anim_loop", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth_deep_parallax", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_depth_deep_parallax_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth_deep_parallax_min_layers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth_deep_parallax_min_layers", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_depth_deep_parallax_max_layers", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_depth_deep_parallax_max_layers", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_grow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_grow", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_operator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "operator", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_operator", _gmReturnType = EnumType "enum.SpatialMaterial::EmissionOperator", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ao_light_affect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ao_light_affect", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_alpha_scissor_threshold", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "threshold", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_alpha_scissor_threshold", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_grow_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_grow_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_metallic_texture_channel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_metallic_texture_channel", _gmReturnType = EnumType "enum.SpatialMaterial::TextureChannel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_roughness_texture_channel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_roughness_texture_channel", _gmReturnType = EnumType "enum.SpatialMaterial::TextureChannel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ao_texture_channel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ao_texture_channel", _gmReturnType = EnumType "enum.SpatialMaterial::TextureChannel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_refraction_texture_channel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "channel", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_refraction_texture_channel", _gmReturnType = EnumType "enum.SpatialMaterial::TextureChannel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_proximity_fade", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_proximity_fade_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_proximity_fade_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_proximity_fade_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_distance_fade", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_distance_fade_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_distance_fade_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_distance_fade_max_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_distance_fade_min_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_distance_fade_min_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "EmissionOperator", _geValues = fromList [("EMISSION_OP_ADD",0),("EMISSION_OP_MULTIPLY",1)]},GodotEnum {_geName = CustomType "DiffuseMode", _geValues = fromList [("DIFFUSE_BURLEY",0),("DIFFUSE_LAMBERT",1),("DIFFUSE_LAMBERT_WRAP",2),("DIFFUSE_OREN_NAYAR",3),("DIFFUSE_TOON",4)]},GodotEnum {_geName = CustomType "SpecularMode", _geValues = fromList [("SPECULAR_TOON",3),("SPECULAR_SCHLICK_GGX",0),("SPECULAR_BLINN",1),("SPECULAR_DISABLED",4),("SPECULAR_PHONG",2)]},GodotEnum {_geName = CustomType "Feature", _geValues = fromList [("FEATURE_MAX",12),("FEATURE_EMISSION",1),("FEATURE_DETAIL",11),("FEATURE_SUBSURACE_SCATTERING",8),("FEATURE_DEPTH_MAPPING",7),("FEATURE_TRANSPARENT",0),("FEATURE_TRANSMISSION",9),("FEATURE_NORMAL_MAPPING",2),("FEATURE_REFRACTION",10),("FEATURE_AMBIENT_OCCLUSION",6),("FEATURE_ANISOTROPY",5),("FEATURE_RIM",3),("FEATURE_CLEARCOAT",4)]},GodotEnum {_geName = CustomType "Flags", _geValues = fromList [("FLAG_DISABLE_DEPTH_TEST",2),("FLAG_TRIPLANAR_USE_WORLD",9),("FLAG_USE_ALPHA_SCISSOR",12),("FLAG_ALBEDO_FROM_VERTEX_COLOR",3),("FLAG_USE_POINT_SIZE",5),("FLAG_MAX",14),("FLAG_FIXED_SIZE",6),("FLAG_UNSHADED",0),("FLAG_SRGB_VERTEX_COLOR",4),("FLAG_EMISSION_ON_UV2",11),("FLAG_AO_ON_UV2",10),("FLAG_UV1_USE_TRIPLANAR",7),("FLAG_ALBEDO_TEXTURE_FORCE_SRGB",13),("FLAG_USE_VERTEX_LIGHTING",1),("FLAG_UV2_USE_TRIPLANAR",8)]},GodotEnum {_geName = CustomType "CullMode", _geValues = fromList [("CULL_DISABLED",2),("CULL_BACK",0),("CULL_FRONT",1)]},GodotEnum {_geName = CustomType "DetailUV", _geValues = fromList [("DETAIL_UV_2",1),("DETAIL_UV_1",0)]},GodotEnum {_geName = CustomType "BillboardMode", _geValues = fromList [("BILLBOARD_ENABLED",1),("BILLBOARD_FIXED_Y",2),("BILLBOARD_DISABLED",0),("BILLBOARD_PARTICLES",3)]},GodotEnum {_geName = CustomType "DepthDrawMode", _geValues = fromList [("DEPTH_DRAW_ALWAYS",1),("DEPTH_DRAW_ALPHA_OPAQUE_PREPASS",3),("DEPTH_DRAW_OPAQUE_ONLY",0),("DEPTH_DRAW_DISABLED",2)]},GodotEnum {_geName = CustomType "TextureChannel", _geValues = fromList [("TEXTURE_CHANNEL_RED",0),("TEXTURE_CHANNEL_BLUE",2),("TEXTURE_CHANNEL_GREEN",1),("TEXTURE_CHANNEL_ALPHA",3),("TEXTURE_CHANNEL_GRAYSCALE",4)]},GodotEnum {_geName = CustomType "BlendMode", _geValues = fromList [("BLEND_MODE_ADD",1),("BLEND_MODE_MIX",0),("BLEND_MODE_MUL",3),("BLEND_MODE_SUB",2)]},GodotEnum {_geName = CustomType "TextureParam", _geValues = fromList [("TEXTURE_MAX",16),("TEXTURE_METALLIC",1),("TEXTURE_DETAIL_ALBEDO",14),("TEXTURE_AMBIENT_OCCLUSION",8),("TEXTURE_DETAIL_MASK",13),("TEXTURE_REFRACTION",12),("TEXTURE_NORMAL",4),("TEXTURE_TRANSMISSION",11),("TEXTURE_FLOWMAP",7),("TEXTURE_RIM",5),("TEXTURE_ROUGHNESS",2),("TEXTURE_DEPTH",9),("TEXTURE_DETAIL_NORMAL",15),("TEXTURE_SUBSURFACE_SCATTERING",10),("TEXTURE_CLEARCOAT",6),("TEXTURE_EMISSION",3),("TEXTURE_ALBEDO",0)]}]},GodotClass {_gcName = "ParticlesMaterial", _gcBaseClass = "Material", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("FLAG_ALIGN_Y_TO_VELOCITY",0),("PARAM_RADIAL_ACCEL",4),("FLAG_ROTATE_Y",1),("EMISSION_SHAPE_SPHERE",1),("PARAM_ANGULAR_VELOCITY",1),("PARAM_TANGENTIAL_ACCEL",5),("PARAM_ANIM_SPEED",10),("EMISSION_SHAPE_BOX",2),("EMISSION_SHAPE_POINTS",3),("PARAM_MAX",12),("PARAM_INITIAL_LINEAR_VELOCITY",0),("FLAG_MAX",4),("PARAM_LINEAR_ACCEL",3),("EMISSION_SHAPE_DIRECTED_POINTS",4),("EMISSION_SHAPE_POINT",0),("PARAM_ORBIT_VELOCITY",2),("PARAM_SCALE",8),("PARAM_DAMPING",6),("PARAM_HUE_VARIATION",9),("PARAM_ANIM_OFFSET",11),("PARAM_ANGLE",7)], _gcProperties = [GodotProperty {_gpName = "trail_divisor", _gcType = PrimitiveType IntType, _gcGetter = "get_trail_divisor", _gcSetter = "set_trail_divisor", _gcIndex = -1},GodotProperty {_gpName = "trail_size_modifier", _gcType = CustomType "CurveTexture", _gcGetter = "get_trail_size_modifier", _gcSetter = "set_trail_size_modifier", _gcIndex = -1},GodotProperty {_gpName = "trail_color_modifier", _gcType = CustomType "GradientTexture", _gcGetter = "get_trail_color_modifier", _gcSetter = "set_trail_color_modifier", _gcIndex = -1},GodotProperty {_gpName = "emission_shape", _gcType = PrimitiveType IntType, _gcGetter = "get_emission_shape", _gcSetter = "set_emission_shape", _gcIndex = -1},GodotProperty {_gpName = "emission_sphere_radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_emission_sphere_radius", _gcSetter = "set_emission_sphere_radius", _gcIndex = -1},GodotProperty {_gpName = "emission_box_extents", _gcType = CoreType "Vector3", _gcGetter = "get_emission_box_extents", _gcSetter = "set_emission_box_extents", _gcIndex = -1},GodotProperty {_gpName = "emission_point_texture", _gcType = CustomType "Texture", _gcGetter = "get_emission_point_texture", _gcSetter = "set_emission_point_texture", _gcIndex = -1},GodotProperty {_gpName = "emission_normal_texture", _gcType = CustomType "Texture", _gcGetter = "get_emission_normal_texture", _gcSetter = "set_emission_normal_texture", _gcIndex = -1},GodotProperty {_gpName = "emission_color_texture", _gcType = CustomType "Texture", _gcGetter = "get_emission_color_texture", _gcSetter = "set_emission_color_texture", _gcIndex = -1},GodotProperty {_gpName = "emission_point_count", _gcType = PrimitiveType IntType, _gcGetter = "get_emission_point_count", _gcSetter = "set_emission_point_count", _gcIndex = -1},GodotProperty {_gpName = "flag_align_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 0},GodotProperty {_gpName = "flag_rotate_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 1},GodotProperty {_gpName = "flag_disable_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 2},GodotProperty {_gpName = "spread", _gcType = PrimitiveType FloatType, _gcGetter = "get_spread", _gcSetter = "set_spread", _gcIndex = -1},GodotProperty {_gpName = "flatness", _gcType = PrimitiveType FloatType, _gcGetter = "get_flatness", _gcSetter = "set_flatness", _gcIndex = -1},GodotProperty {_gpName = "gravity", _gcType = CoreType "Vector3", _gcGetter = "get_gravity", _gcSetter = "set_gravity", _gcIndex = -1},GodotProperty {_gpName = "initial_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 0},GodotProperty {_gpName = "initial_velocity_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 0},GodotProperty {_gpName = "angular_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 1},GodotProperty {_gpName = "angular_velocity_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 1},GodotProperty {_gpName = "angular_velocity_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 1},GodotProperty {_gpName = "orbit_velocity", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 2},GodotProperty {_gpName = "orbit_velocity_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 2},GodotProperty {_gpName = "orbit_velocity_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 2},GodotProperty {_gpName = "linear_accel", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 3},GodotProperty {_gpName = "linear_accel_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 3},GodotProperty {_gpName = "linear_accel_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 3},GodotProperty {_gpName = "radial_accel", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 4},GodotProperty {_gpName = "radial_accel_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 4},GodotProperty {_gpName = "radial_accel_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 4},GodotProperty {_gpName = "tangential_accel", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 5},GodotProperty {_gpName = "tangential_accel_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 5},GodotProperty {_gpName = "tangential_accel_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 5},GodotProperty {_gpName = "damping", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 6},GodotProperty {_gpName = "damping_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 6},GodotProperty {_gpName = "damping_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 6},GodotProperty {_gpName = "angle", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 7},GodotProperty {_gpName = "angle_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 7},GodotProperty {_gpName = "angle_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 7},GodotProperty {_gpName = "scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 8},GodotProperty {_gpName = "scale_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 8},GodotProperty {_gpName = "scale_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 8},GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1},GodotProperty {_gpName = "color_ramp", _gcType = CustomType "GradientTexture", _gcGetter = "get_color_ramp", _gcSetter = "set_color_ramp", _gcIndex = -1},GodotProperty {_gpName = "hue_variation", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 9},GodotProperty {_gpName = "hue_variation_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 9},GodotProperty {_gpName = "hue_variation_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 9},GodotProperty {_gpName = "anim_speed", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 10},GodotProperty {_gpName = "anim_speed_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 10},GodotProperty {_gpName = "anim_speed_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 10},GodotProperty {_gpName = "anim_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_param", _gcSetter = "set_param", _gcIndex = 11},GodotProperty {_gpName = "anim_offset_random", _gcType = PrimitiveType FloatType, _gcGetter = "get_param_randomness", _gcSetter = "set_param_randomness", _gcIndex = 11},GodotProperty {_gpName = "anim_offset_curve", _gcType = CustomType "CurveTexture", _gcGetter = "get_param_texture", _gcSetter = "set_param_texture", _gcIndex = 11},GodotProperty {_gpName = "anim_loop", _gcType = PrimitiveType BoolType, _gcGetter = "get_flag", _gcSetter = "set_flag", _gcIndex = 3}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_spread", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_spread", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flatness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flatness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_param", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_param_randomness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "randomness", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param_randomness", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_param_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_param_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "param", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_color_ramp", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ramp", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color_ramp", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flag", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flag", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flag", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_emission_shape", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "shape", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_shape", _gmReturnType = EnumType "enum.ParticlesMaterial::EmissionShape", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_sphere_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_sphere_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_box_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_box_extents", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_point_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_point_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_normal_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_normal_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_color_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_color_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_point_count", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point_count", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_point_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_trail_divisor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "divisor", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_trail_divisor", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_trail_size_modifier", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "CurveTexture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_trail_size_modifier", _gmReturnType = CustomType "CurveTexture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_trail_color_modifier", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "GradientTexture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_trail_color_modifier", _gmReturnType = CustomType "GradientTexture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_gravity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_gravity", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "accel_vec", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Flags", _geValues = fromList [("FLAG_ALIGN_Y_TO_VELOCITY",0),("FLAG_ROTATE_Y",1),("FLAG_MAX",4)]},GodotEnum {_geName = CustomType "EmissionShape", _geValues = fromList [("EMISSION_SHAPE_SPHERE",1),("EMISSION_SHAPE_BOX",2),("EMISSION_SHAPE_POINTS",3),("EMISSION_SHAPE_DIRECTED_POINTS",4),("EMISSION_SHAPE_POINT",0)]},GodotEnum {_geName = CustomType "Parameter", _geValues = fromList [("PARAM_RADIAL_ACCEL",4),("PARAM_ANGULAR_VELOCITY",1),("PARAM_TANGENTIAL_ACCEL",5),("PARAM_ANIM_SPEED",10),("PARAM_MAX",12),("PARAM_INITIAL_LINEAR_VELOCITY",0),("PARAM_LINEAR_ACCEL",3),("PARAM_ORBIT_VELOCITY",2),("PARAM_SCALE",8),("PARAM_DAMPING",6),("PARAM_HUE_VARIATION",9),("PARAM_ANIM_OFFSET",11),("PARAM_ANGLE",7)]}]},GodotClass {_gcName = "CurveTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "width", _gcType = PrimitiveType IntType, _gcGetter = "get_width", _gcSetter = "set_width", _gcIndex = -1},GodotProperty {_gpName = "curve", _gcType = CustomType "Curve", _gcGetter = "get_curve", _gcSetter = "set_curve", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = CustomType "Curve", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_curve", _gmReturnType = CustomType "Curve", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "GradientTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "gradient", _gcType = CustomType "Gradient", _gcGetter = "get_gradient", _gcSetter = "set_gradient", _gcIndex = -1},GodotProperty {_gpName = "width", _gcType = PrimitiveType IntType, _gcGetter = "get_width", _gcSetter = "set_width", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_gradient", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gradient", _gaType = CustomType "Gradient", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_gradient", _gmReturnType = CustomType "Gradient", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_update", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RayShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "length", _gcType = PrimitiveType FloatType, _gcGetter = "get_length", _gcSetter = "set_length", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SphereShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BoxShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "extents", _gcType = CoreType "Vector3", _gcGetter = "get_extents", _gcSetter = "set_extents", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extents", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CapsuleShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1},GodotProperty {_gpName = "height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PlaneShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "plane", _gcType = CoreType "Plane", _gcGetter = "get_plane", _gcSetter = "set_plane", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_plane", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "plane", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_plane", _gmReturnType = CoreType "Plane", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ConvexPolygonShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "points", _gcType = CoreType "Array", _gcGetter = "get_points", _gcSetter = "set_points", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_points", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ConcavePolygonShape", _gcBaseClass = "Shape", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "PoolVector3Array", _gcGetter = "get_faces", _gcSetter = "set_faces", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_faces", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "faces", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_faces", _gmReturnType = CoreType "PoolVector3Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SurfaceTool", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "primitive", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_vertex", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertex", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_normal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "tangent", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_uv2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "uv2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_bones", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bones", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_weights", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "weights", _gaType = CoreType "PoolRealArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_smooth_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "smooth", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_triangle_fan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertexes", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "uvs", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "colors", _gaType = CoreType "PoolColorArray", _gaDefaultValue = Just "[PoolColorArray]"},GodotArgument {_gaName = "uv2s", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "normals", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Just "[]"},GodotArgument {_gaName = "tangents", _gaType = CoreType "Array", _gaDefaultValue = Just "[]"}]},GodotMethod {_gmName = "add_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "deindex", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "generate_normals", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "generate_tangents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_to_format", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_from", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "existing", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "append_from", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "existing", _gaType = CustomType "Mesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transform", _gaType = CoreType "Transform", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "commit", _gmReturnType = CustomType "ArrayMesh", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "existing", _gaType = CustomType "ArrayMesh", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "97792"}]}], _gcEnums = []},GodotClass {_gcName = "MeshDataTool", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_from_surface", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "ArrayMesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "surface", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "commit_to_surface", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "ArrayMesh", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_format", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_vertex_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_edge_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_face_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vertex", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "vertex", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_normal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "normal", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tangent", _gaType = CoreType "Plane", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_tangent", _gmReturnType = CoreType "Plane", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_uv", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "uv", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_uv", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_uv2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "uv2", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_uv2", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_bones", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bones", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_bones", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_weights", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "weights", _gaType = CoreType "PoolRealArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_weights", _gmReturnType = CoreType "PoolRealArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_vertex_meta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_meta", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_edges", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertex_faces", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edge_vertex", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "vertex", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edge_faces", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_edge_meta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edge_meta", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_face_vertex", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "vertex", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_face_edge", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "edge", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_face_meta", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "meta", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_face_meta", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_face_normal", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_material", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_material", _gmReturnType = CustomType "Material", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SpatialVelocityTracker", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "track_physics_step", _gcType = PrimitiveType BoolType, _gcGetter = "is_tracking_physics_step", _gcSetter = "set_track_physics_step", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_track_physics_step", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_tracking_physics_step", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "update_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_tracked_linear_velocity", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "reset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Sky", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("RADIANCE_SIZE_128",2),("RADIANCE_SIZE_2048",6),("RADIANCE_SIZE_512",4),("RADIANCE_SIZE_1024",5),("RADIANCE_SIZE_64",1),("RADIANCE_SIZE_32",0),("RADIANCE_SIZE_256",3),("RADIANCE_SIZE_MAX",7)], _gcProperties = [GodotProperty {_gpName = "radiance_size", _gcType = PrimitiveType IntType, _gcGetter = "get_radiance_size", _gcSetter = "set_radiance_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radiance_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radiance_size", _gmReturnType = EnumType "enum.Sky::RadianceSize", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "RadianceSize", _geValues = fromList [("RADIANCE_SIZE_128",2),("RADIANCE_SIZE_2048",6),("RADIANCE_SIZE_512",4),("RADIANCE_SIZE_1024",5),("RADIANCE_SIZE_64",1),("RADIANCE_SIZE_32",0),("RADIANCE_SIZE_256",3),("RADIANCE_SIZE_MAX",7)]}]},GodotClass {_gcName = "PanoramaSky", _gcBaseClass = "Sky", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "panorama", _gcType = CustomType "Texture", _gcGetter = "get_panorama", _gcSetter = "set_panorama", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_panorama", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_panorama", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ProceduralSky", _gcBaseClass = "Sky", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("TEXTURE_SIZE_512",1),("TEXTURE_SIZE_2048",3),("TEXTURE_SIZE_1024",2),("TEXTURE_SIZE_256",0),("TEXTURE_SIZE_MAX",5),("TEXTURE_SIZE_4096",4)], _gcProperties = [GodotProperty {_gpName = "sky_top_color", _gcType = CoreType "Color", _gcGetter = "get_sky_top_color", _gcSetter = "set_sky_top_color", _gcIndex = -1},GodotProperty {_gpName = "sky_horizon_color", _gcType = CoreType "Color", _gcGetter = "get_sky_horizon_color", _gcSetter = "set_sky_horizon_color", _gcIndex = -1},GodotProperty {_gpName = "sky_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_sky_curve", _gcSetter = "set_sky_curve", _gcIndex = -1},GodotProperty {_gpName = "sky_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_sky_energy", _gcSetter = "set_sky_energy", _gcIndex = -1},GodotProperty {_gpName = "ground_bottom_color", _gcType = CoreType "Color", _gcGetter = "get_ground_bottom_color", _gcSetter = "set_ground_bottom_color", _gcIndex = -1},GodotProperty {_gpName = "ground_horizon_color", _gcType = CoreType "Color", _gcGetter = "get_ground_horizon_color", _gcSetter = "set_ground_horizon_color", _gcIndex = -1},GodotProperty {_gpName = "ground_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_ground_curve", _gcSetter = "set_ground_curve", _gcIndex = -1},GodotProperty {_gpName = "ground_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_ground_energy", _gcSetter = "set_ground_energy", _gcIndex = -1},GodotProperty {_gpName = "sun_color", _gcType = CoreType "Color", _gcGetter = "get_sun_color", _gcSetter = "set_sun_color", _gcIndex = -1},GodotProperty {_gpName = "sun_latitude", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_latitude", _gcSetter = "set_sun_latitude", _gcIndex = -1},GodotProperty {_gpName = "sun_longitude", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_longitude", _gcSetter = "set_sun_longitude", _gcIndex = -1},GodotProperty {_gpName = "sun_angle_min", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_angle_min", _gcSetter = "set_sun_angle_min", _gcIndex = -1},GodotProperty {_gpName = "sun_angle_max", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_angle_max", _gcSetter = "set_sun_angle_max", _gcIndex = -1},GodotProperty {_gpName = "sun_curve", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_curve", _gcSetter = "set_sun_curve", _gcIndex = -1},GodotProperty {_gpName = "sun_energy", _gcType = PrimitiveType FloatType, _gcGetter = "get_sun_energy", _gcSetter = "set_sun_energy", _gcIndex = -1},GodotProperty {_gpName = "texture_size", _gcType = PrimitiveType IntType, _gcGetter = "get_texture_size", _gcSetter = "set_texture_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_update_sky", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sky_top_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sky_top_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sky_horizon_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sky_horizon_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sky_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sky_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sky_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sky_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ground_bottom_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ground_bottom_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ground_horizon_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ground_horizon_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ground_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ground_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_ground_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_ground_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_latitude", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_latitude", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_longitude", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_longitude", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_angle_min", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_angle_min", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_angle_max", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_angle_max", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_curve", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_sun_energy", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "energy", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_sun_energy", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_texture_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture_size", _gmReturnType = EnumType "enum.ProceduralSky::TextureSize", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_thread_done", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "TextureSize", _geValues = fromList [("TEXTURE_SIZE_512",1),("TEXTURE_SIZE_2048",3),("TEXTURE_SIZE_1024",2),("TEXTURE_SIZE_256",0),("TEXTURE_SIZE_MAX",5),("TEXTURE_SIZE_4096",4)]}]},GodotClass {_gcName = "StreamTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "load_path", _gcType = CoreType "String", _gcGetter = "get_load_path", _gcSetter = "load", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "load", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_load_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ImageTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("STORAGE_RAW",0),("STORAGE_COMPRESS_LOSSLESS",2),("STORAGE_COMPRESS_LOSSY",1)], _gcProperties = [GodotProperty {_gpName = "storage", _gcType = PrimitiveType IntType, _gcGetter = "get_storage", _gcSetter = "set_storage", _gcIndex = -1},GodotProperty {_gpName = "lossy_quality", _gcType = PrimitiveType FloatType, _gcGetter = "get_lossy_storage_quality", _gcSetter = "set_lossy_storage_quality", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "height", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "7"}]},GodotMethod {_gmName = "create_from_image", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "7"}]},GodotMethod {_gmName = "get_format", _gmReturnType = EnumType "enum.Image::Format", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "load", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_storage", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_storage", _gmReturnType = EnumType "enum.ImageTexture::Storage", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lossy_storage_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "quality", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lossy_storage_quality", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size_override", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_reload_hook", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "rid", _gaType = CoreType "RID", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "Storage", _geValues = fromList [("STORAGE_RAW",0),("STORAGE_COMPRESS_LOSSLESS",2),("STORAGE_COMPRESS_LOSSY",1)]}]},GodotClass {_gcName = "AtlasTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "atlas", _gcType = CustomType "Texture", _gcGetter = "get_atlas", _gcSetter = "set_atlas", _gcIndex = -1},GodotProperty {_gpName = "region", _gcType = CoreType "Rect2", _gcGetter = "get_region", _gcSetter = "set_region", _gcIndex = -1},GodotProperty {_gpName = "margin", _gcType = CoreType "Rect2", _gcGetter = "get_margin", _gcSetter = "set_margin", _gcIndex = -1},GodotProperty {_gpName = "filter_clip", _gcType = PrimitiveType BoolType, _gcGetter = "has_filter_clip", _gcSetter = "set_filter_clip", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_atlas", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "atlas", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_atlas", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_region", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "region", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_filter_clip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_filter_clip", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "LargeTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "_data", _gcType = CoreType "Array", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_piece", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_piece_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_piece_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_piece_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_piece_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_piece_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Curve", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("TANGENT_LINEAR",1),("TANGENT_FREE",0),("TANGENT_MODE_COUNT",2)], _gcProperties = [GodotProperty {_gpName = "min_value", _gcType = PrimitiveType FloatType, _gcGetter = "get_min_value", _gcSetter = "set_min_value", _gcIndex = -1},GodotProperty {_gpName = "max_value", _gcType = PrimitiveType FloatType, _gcGetter = "get_max_value", _gcSetter = "set_max_value", _gcIndex = -1},GodotProperty {_gpName = "bake_resolution", _gcType = PrimitiveType IntType, _gcGetter = "get_bake_resolution", _gcSetter = "set_bake_resolution", _gcIndex = -1},GodotProperty {_gpName = "_data", _gcType = PrimitiveType IntType, _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "range_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "left_tangent", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "right_tangent", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "left_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "right_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_point_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_offset", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "interpolate", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "interpolate_baked", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_left_tangent", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_right_tangent", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_left_mode", _gmReturnType = EnumType "enum.Curve::TangentMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_right_mode", _gmReturnType = EnumType "enum.Curve::TangentMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_left_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tangent", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_right_tangent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "tangent", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_left_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_right_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_min_value", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_min_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "min", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_value", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clean_dupes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "bake", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bake_resolution", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bake_resolution", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resolution", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "TangentMode", _geValues = fromList [("TANGENT_LINEAR",1),("TANGENT_FREE",0),("TANGENT_MODE_COUNT",2)]}]},GodotClass {_gcName = "ProxyTexture", _gcBaseClass = "Texture", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "base", _gcType = CustomType "Texture", _gcGetter = "get_base", _gcSetter = "set_base", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CubeMap", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("SIDE_RIGHT",1),("SIDE_TOP",3),("SIDE_BACK",5),("STORAGE_RAW",0),("STORAGE_COMPRESS_LOSSLESS",2),("FLAGS_DEFAULT",7),("FLAG_REPEAT",2),("SIDE_LEFT",0),("SIDE_FRONT",4),("STORAGE_COMPRESS_LOSSY",1),("FLAG_MIPMAPS",1),("SIDE_BOTTOM",2),("FLAG_FILTER",4)], _gcProperties = [GodotProperty {_gpName = "flags", _gcType = PrimitiveType IntType, _gcGetter = "get_flags", _gcSetter = "set_flags", _gcIndex = -1},GodotProperty {_gpName = "storage_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_storage", _gcSetter = "set_storage", _gcIndex = -1},GodotProperty {_gpName = "lossy_storage_quality", _gcType = PrimitiveType FloatType, _gcGetter = "get_lossy_storage_quality", _gcSetter = "set_lossy_storage_quality", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_side", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "side", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "image", _gaType = CustomType "Image", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_side", _gmReturnType = CustomType "Image", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "side", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_storage", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_storage", _gmReturnType = EnumType "enum.CubeMap::Storage", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lossy_storage_quality", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "quality", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lossy_storage_quality", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Flags", _geValues = fromList [("FLAGS_DEFAULT",7),("FLAG_REPEAT",2),("FLAG_MIPMAPS",1),("FLAG_FILTER",4)]},GodotEnum {_geName = CustomType "Side", _geValues = fromList [("SIDE_RIGHT",1),("SIDE_TOP",3),("SIDE_BACK",5),("SIDE_LEFT",0),("SIDE_FRONT",4),("SIDE_BOTTOM",2)]},GodotEnum {_geName = CustomType "Storage", _geValues = fromList [("STORAGE_RAW",0),("STORAGE_COMPRESS_LOSSLESS",2),("STORAGE_COMPRESS_LOSSY",1)]}]},GodotClass {_gcName = "Animation", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("INTERPOLATION_NEAREST",0),("UPDATE_DISCRETE",1),("INTERPOLATION_LINEAR",1),("TYPE_VALUE",0),("TYPE_METHOD",2),("UPDATE_CONTINUOUS",0),("INTERPOLATION_CUBIC",2),("TYPE_TRANSFORM",1),("UPDATE_TRIGGER",2)], _gcProperties = [GodotProperty {_gpName = "length", _gcType = PrimitiveType FloatType, _gcGetter = "get_length", _gcSetter = "set_length", _gcIndex = -1},GodotProperty {_gpName = "loop", _gcType = PrimitiveType BoolType, _gcGetter = "has_loop", _gcSetter = "set_loop", _gcIndex = -1},GodotProperty {_gpName = "step", _gcType = PrimitiveType FloatType, _gcGetter = "get_step", _gcSetter = "set_step", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "add_track", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "remove_track", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_track_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "track_get_type", _gmReturnType = EnumType "enum.Animation::TrackType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_track", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_move_up", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_move_down", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_imported", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "imported", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_is_imported", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transform_track_insert_key", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "location", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rotation", _gaType = CoreType "Quat", _gaDefaultValue = Nothing},GodotArgument {_gaName = "scale", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_insert_key", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "transition", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "track_remove_key", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_remove_key_at_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_key_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_key_transition", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "transition", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_key_transition", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_key_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_key_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_key_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_find_key", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "exact", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "track_set_interpolation_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "interpolation", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_interpolation_type", _gmReturnType = EnumType "enum.Animation::InterpolationType", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_set_interpolation_loop_wrap", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "interpolation", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "track_get_interpolation_loop_wrap", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "transform_track_interpolate", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "value_track_set_update_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "value_track_get_update_mode", _gmReturnType = EnumType "enum.Animation::UpdateMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "value_track_get_key_indices", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "method_track_get_key_indices", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "delta", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "method_track_get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "method_track_get_params", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "key_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_loop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_step", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_step", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "copy_track", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "track", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_animation", _gaType = CustomType "Animation", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "TrackType", _geValues = fromList [("TYPE_VALUE",0),("TYPE_METHOD",2),("TYPE_TRANSFORM",1)]},GodotEnum {_geName = CustomType "UpdateMode", _geValues = fromList [("UPDATE_DISCRETE",1),("UPDATE_CONTINUOUS",0),("UPDATE_TRIGGER",2)]},GodotEnum {_geName = CustomType "InterpolationType", _geValues = fromList [("INTERPOLATION_NEAREST",0),("INTERPOLATION_LINEAR",1),("INTERPOLATION_CUBIC",2)]}]},GodotClass {_gcName = "Font", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "string", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"},GodotArgument {_gaName = "clip_w", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_ascent", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_descent", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_distance_field_hint", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_string_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "string", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "draw_char", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "char", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "next", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"},GodotArgument {_gaName = "modulate", _gaType = CoreType "Color", _gaDefaultValue = Just "1,1,1,1"}]},GodotMethod {_gmName = "update_changes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BitmapFont", _gcBaseClass = "Font", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "textures", _gcType = CoreType "Array", _gcGetter = "_get_textures", _gcSetter = "_set_textures", _gcIndex = -1},GodotProperty {_gpName = "chars", _gcType = CoreType "PoolIntArray", _gcGetter = "_get_chars", _gcSetter = "_set_chars", _gcIndex = -1},GodotProperty {_gpName = "kernings", _gcType = CoreType "PoolIntArray", _gcGetter = "_get_kernings", _gcSetter = "_set_kernings", _gcIndex = -1},GodotProperty {_gpName = "height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1},GodotProperty {_gpName = "ascent", _gcType = PrimitiveType FloatType, _gcGetter = "get_ascent", _gcSetter = "set_ascent", _gcIndex = -1},GodotProperty {_gpName = "distance_field", _gcType = PrimitiveType BoolType, _gcGetter = "is_distance_field_hint", _gcSetter = "set_distance_field_hint", _gcIndex = -1},GodotProperty {_gpName = "fallback", _gcType = CustomType "BitmapFont", _gcGetter = "get_fallback", _gcSetter = "set_fallback", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create_from_fnt", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "px", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_ascent", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "px", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_kerning_pair", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "char_a", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "char_b", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "kerning", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_kerning_pair", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "char_a", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "char_b", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_char", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "character", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "texture", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "align", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"},GodotArgument {_gaName = "advance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "get_texture_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_char_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "char", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "next", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "set_distance_field_hint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_chars", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_chars", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_kernings", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_kernings", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_textures", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_textures", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_fallback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fallback", _gaType = CustomType "BitmapFont", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fallback", _gmReturnType = CustomType "BitmapFont", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "DynamicFontData", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "font_path", _gcType = CoreType "String", _gcGetter = "get_font_path", _gcSetter = "set_font_path", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_font_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_font_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "DynamicFont", _gcBaseClass = "Font", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("SPACING_TOP",0),("SPACING_SPACE",3),("SPACING_CHAR",2),("SPACING_BOTTOM",1)], _gcProperties = [GodotProperty {_gpName = "size", _gcType = PrimitiveType IntType, _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1},GodotProperty {_gpName = "use_mipmaps", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_mipmaps", _gcSetter = "set_use_mipmaps", _gcIndex = -1},GodotProperty {_gpName = "use_filter", _gcType = PrimitiveType BoolType, _gcGetter = "get_use_filter", _gcSetter = "set_use_filter", _gcIndex = -1},GodotProperty {_gpName = "extra_spacing_top", _gcType = PrimitiveType IntType, _gcGetter = "get_spacing", _gcSetter = "set_spacing", _gcIndex = 0},GodotProperty {_gpName = "extra_spacing_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_spacing", _gcSetter = "set_spacing", _gcIndex = 1},GodotProperty {_gpName = "extra_spacing_char", _gcType = PrimitiveType IntType, _gcGetter = "get_spacing", _gcSetter = "set_spacing", _gcIndex = 2},GodotProperty {_gpName = "extra_spacing_space", _gcType = PrimitiveType IntType, _gcGetter = "get_spacing", _gcSetter = "set_spacing", _gcIndex = 3},GodotProperty {_gpName = "font_data", _gcType = CustomType "DynamicFontData", _gcGetter = "get_font_data", _gcSetter = "set_font_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_font_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CustomType "DynamicFontData", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_font_data", _gmReturnType = CustomType "DynamicFontData", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_mipmaps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_mipmaps", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_filter", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_spacing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_spacing", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_fallback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CustomType "DynamicFontData", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_fallback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CustomType "DynamicFontData", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fallback", _gmReturnType = CustomType "DynamicFontData", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_fallback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_fallback_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "SpacingType", _geValues = fromList [("SPACING_TOP",0),("SPACING_SPACE",3),("SPACING_CHAR",2),("SPACING_BOTTOM",1)]}]},GodotClass {_gcName = "StyleBox", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "content_margin_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_default_margin", _gcSetter = "set_default_margin", _gcIndex = 0},GodotProperty {_gpName = "content_margin_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_default_margin", _gcSetter = "set_default_margin", _gcIndex = 2},GodotProperty {_gpName = "content_margin_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_default_margin", _gcSetter = "set_default_margin", _gcIndex = 1},GodotProperty {_gpName = "content_margin_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_default_margin", _gcSetter = "set_default_margin", _gcIndex = 3}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "test_mask", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_default_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_minimum_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_center_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_offset", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "draw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "canvas_item", _gaType = CoreType "RID", _gaDefaultValue = Nothing},GodotArgument {_gaName = "rect", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "StyleBoxEmpty", _gcBaseClass = "StyleBox", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "StyleBoxTexture", _gcBaseClass = "StyleBox", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("AXIS_STRETCH_MODE_TILE_FIT",2),("AXIS_STRETCH_MODE_TILE",1),("AXIS_STRETCH_MODE_STRETCH",0)], _gcProperties = [GodotProperty {_gpName = "texture", _gcType = CustomType "Texture", _gcGetter = "get_texture", _gcSetter = "set_texture", _gcIndex = -1},GodotProperty {_gpName = "normal_map", _gcType = CustomType "Texture", _gcGetter = "get_normal_map", _gcSetter = "set_normal_map", _gcIndex = -1},GodotProperty {_gpName = "region_rect", _gcType = CoreType "Rect2", _gcGetter = "get_region_rect", _gcSetter = "set_region_rect", _gcIndex = -1},GodotProperty {_gpName = "margin_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin_size", _gcSetter = "set_margin_size", _gcIndex = 0},GodotProperty {_gpName = "margin_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin_size", _gcSetter = "set_margin_size", _gcIndex = 2},GodotProperty {_gpName = "margin_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin_size", _gcSetter = "set_margin_size", _gcIndex = 1},GodotProperty {_gpName = "margin_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_margin_size", _gcSetter = "set_margin_size", _gcIndex = 3},GodotProperty {_gpName = "expand_margin_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin_size", _gcSetter = "set_expand_margin_size", _gcIndex = 0},GodotProperty {_gpName = "expand_margin_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin_size", _gcSetter = "set_expand_margin_size", _gcIndex = 2},GodotProperty {_gpName = "expand_margin_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin_size", _gcSetter = "set_expand_margin_size", _gcIndex = 1},GodotProperty {_gpName = "expand_margin_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin_size", _gcSetter = "set_expand_margin_size", _gcIndex = 3},GodotProperty {_gpName = "axis_stretch_horizontal", _gcType = PrimitiveType IntType, _gcGetter = "get_h_axis_stretch_mode", _gcSetter = "set_h_axis_stretch_mode", _gcIndex = -1},GodotProperty {_gpName = "axis_stretch_vertical", _gcType = PrimitiveType IntType, _gcGetter = "get_v_axis_stretch_mode", _gcSetter = "set_v_axis_stretch_mode", _gcIndex = -1},GodotProperty {_gpName = "modulate_color", _gcType = CoreType "Color", _gcGetter = "get_modulate", _gcSetter = "set_modulate", _gcIndex = -1},GodotProperty {_gpName = "draw_center", _gcType = PrimitiveType BoolType, _gcGetter = "is_draw_center_enabled", _gcSetter = "set_draw_center", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "texture_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_texture", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "texture", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_texture", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_normal_map", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal_map", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal_map", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_margin_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_margin_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin_individual", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size_left", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_top", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_right", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_bottom", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_expand_margin_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_region_rect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "region", _gaType = CoreType "Rect2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_region_rect", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_draw_center", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_draw_center_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_modulate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_modulate", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_axis_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_axis_stretch_mode", _gmReturnType = EnumType "enum.StyleBoxTexture::AxisStretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_axis_stretch_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_axis_stretch_mode", _gmReturnType = EnumType "enum.StyleBoxTexture::AxisStretchMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AxisStretchMode", _geValues = fromList [("AXIS_STRETCH_MODE_TILE_FIT",2),("AXIS_STRETCH_MODE_TILE",1),("AXIS_STRETCH_MODE_STRETCH",0)]}]},GodotClass {_gcName = "StyleBoxFlat", _gcBaseClass = "StyleBox", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bg_color", _gcType = CoreType "Color", _gcGetter = "get_bg_color", _gcSetter = "set_bg_color", _gcIndex = -1},GodotProperty {_gpName = "draw_center", _gcType = PrimitiveType BoolType, _gcGetter = "is_draw_center_enabled", _gcSetter = "set_draw_center", _gcIndex = -1},GodotProperty {_gpName = "border_width_left", _gcType = PrimitiveType IntType, _gcGetter = "get_border_width", _gcSetter = "set_border_width", _gcIndex = 0},GodotProperty {_gpName = "border_width_top", _gcType = PrimitiveType IntType, _gcGetter = "get_border_width", _gcSetter = "set_border_width", _gcIndex = 1},GodotProperty {_gpName = "border_width_right", _gcType = PrimitiveType IntType, _gcGetter = "get_border_width", _gcSetter = "set_border_width", _gcIndex = 2},GodotProperty {_gpName = "border_width_bottom", _gcType = PrimitiveType IntType, _gcGetter = "get_border_width", _gcSetter = "set_border_width", _gcIndex = 3},GodotProperty {_gpName = "border_color", _gcType = CoreType "Color", _gcGetter = "get_border_color", _gcSetter = "set_border_color", _gcIndex = -1},GodotProperty {_gpName = "border_blend", _gcType = PrimitiveType BoolType, _gcGetter = "get_border_blend", _gcSetter = "set_border_blend", _gcIndex = -1},GodotProperty {_gpName = "corner_radius_top_left", _gcType = PrimitiveType IntType, _gcGetter = "get_corner_radius", _gcSetter = "set_corner_radius", _gcIndex = 0},GodotProperty {_gpName = "corner_radius_top_right", _gcType = PrimitiveType IntType, _gcGetter = "get_corner_radius", _gcSetter = "set_corner_radius", _gcIndex = 1},GodotProperty {_gpName = "corner_radius_bottom_right", _gcType = PrimitiveType IntType, _gcGetter = "get_corner_radius", _gcSetter = "set_corner_radius", _gcIndex = 2},GodotProperty {_gpName = "corner_radius_bottom_left", _gcType = PrimitiveType IntType, _gcGetter = "get_corner_radius", _gcSetter = "set_corner_radius", _gcIndex = 3},GodotProperty {_gpName = "corner_detail", _gcType = PrimitiveType IntType, _gcGetter = "get_corner_detail", _gcSetter = "set_corner_detail", _gcIndex = -1},GodotProperty {_gpName = "expand_margin_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin", _gcSetter = "set_expand_margin", _gcIndex = 0},GodotProperty {_gpName = "expand_margin_right", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin", _gcSetter = "set_expand_margin", _gcIndex = 2},GodotProperty {_gpName = "expand_margin_top", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin", _gcSetter = "set_expand_margin", _gcIndex = 1},GodotProperty {_gpName = "expand_margin_bottom", _gcType = PrimitiveType FloatType, _gcGetter = "get_expand_margin", _gcSetter = "set_expand_margin", _gcIndex = 3},GodotProperty {_gpName = "shadow_color", _gcType = CoreType "Color", _gcGetter = "get_shadow_color", _gcSetter = "set_shadow_color", _gcIndex = -1},GodotProperty {_gpName = "shadow_size", _gcType = PrimitiveType IntType, _gcGetter = "get_shadow_size", _gcSetter = "set_shadow_size", _gcIndex = -1},GodotProperty {_gpName = "anti_aliasing", _gcType = PrimitiveType BoolType, _gcGetter = "is_anti_aliased", _gcSetter = "set_anti_aliased", _gcIndex = -1},GodotProperty {_gpName = "anti_aliasing_size", _gcType = PrimitiveType IntType, _gcGetter = "get_aa_size", _gcSetter = "set_aa_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_bg_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bg_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_border_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_border_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_border_width_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_border_width_min", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_border_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "width", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_border_width", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_border_blend", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "blend", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_border_blend", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_corner_radius_individual", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius_top_left", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius_top_right", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius_bottom_right", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius_bottom_left", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_corner_radius_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_corner_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "corner", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "radius", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_corner_radius", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "corner", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin_all", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_expand_margin_individual", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size_left", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_top", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_right", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "size_bottom", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_expand_margin", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "margin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_draw_center", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "draw_center", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_draw_center_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_shadow_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_shadow_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_anti_aliased", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "anti_aliased", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_anti_aliased", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_aa_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_aa_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_corner_detail", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "detail", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_corner_detail", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "StyleBoxLine", _gcBaseClass = "StyleBox", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "color", _gcType = CoreType "Color", _gcGetter = "get_color", _gcSetter = "set_color", _gcIndex = -1},GodotProperty {_gpName = "grow", _gcType = PrimitiveType FloatType, _gcGetter = "get_grow", _gcSetter = "set_grow", _gcIndex = -1},GodotProperty {_gpName = "thickness", _gcType = PrimitiveType IntType, _gcGetter = "get_thickness", _gcSetter = "set_thickness", _gcIndex = -1},GodotProperty {_gpName = "vertical", _gcType = PrimitiveType BoolType, _gcGetter = "is_vertical", _gcSetter = "set_vertical", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_color", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "color", _gaType = CoreType "Color", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_color", _gmReturnType = CoreType "Color", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_thickness", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "thickness", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_thickness", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_grow", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "grow", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_grow", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_vertical", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertical", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_vertical", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PolygonPathFinder", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "Dictionary", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "setup", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "connections", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_path", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_intersections", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "to", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_point_inside", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_penalty", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "penalty", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_penalty", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bounds", _gmReturnType = CoreType "Rect2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioStreamPlayer", _gcBaseClass = "Node", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("MIX_TARGET_SURROUND",1),("MIX_TARGET_STEREO",0),("MIX_TARGET_CENTER",2)], _gcProperties = [GodotProperty {_gpName = "stream", _gcType = CustomType "AudioStream", _gcGetter = "get_stream", _gcSetter = "set_stream", _gcIndex = -1},GodotProperty {_gpName = "volume_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_volume_db", _gcSetter = "set_volume_db", _gcIndex = -1},GodotProperty {_gpName = "playing", _gcType = PrimitiveType BoolType, _gcGetter = "is_playing", _gcSetter = "_set_playing", _gcIndex = -1},GodotProperty {_gpName = "autoplay", _gcType = PrimitiveType BoolType, _gcGetter = "is_autoplay_enabled", _gcSetter = "set_autoplay", _gcIndex = -1},GodotProperty {_gpName = "mix_target", _gcType = PrimitiveType IntType, _gcGetter = "get_mix_target", _gcSetter = "set_mix_target", _gcIndex = -1},GodotProperty {_gpName = "bus", _gcType = CoreType "String", _gcGetter = "get_bus", _gcSetter = "set_bus", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "finished", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "AudioStream", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream", _gmReturnType = CustomType "AudioStream", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_volume_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "volume_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_volume_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_playback_position", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autoplay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_autoplay_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mix_target", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mix_target", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mix_target", _gmReturnType = EnumType "enum.AudioStreamPlayer::MixTarget", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_playing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_bus_layout_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "MixTarget", _geValues = fromList [("MIX_TARGET_SURROUND",1),("MIX_TARGET_STEREO",0),("MIX_TARGET_CENTER",2)]}]},GodotClass {_gcName = "AudioStreamPlayer2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "stream", _gcType = CustomType "AudioStream", _gcGetter = "get_stream", _gcSetter = "set_stream", _gcIndex = -1},GodotProperty {_gpName = "volume_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_volume_db", _gcSetter = "set_volume_db", _gcIndex = -1},GodotProperty {_gpName = "playing", _gcType = PrimitiveType BoolType, _gcGetter = "is_playing", _gcSetter = "_set_playing", _gcIndex = -1},GodotProperty {_gpName = "autoplay", _gcType = PrimitiveType BoolType, _gcGetter = "is_autoplay_enabled", _gcSetter = "set_autoplay", _gcIndex = -1},GodotProperty {_gpName = "max_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_max_distance", _gcSetter = "set_max_distance", _gcIndex = -1},GodotProperty {_gpName = "attenuation", _gcType = PrimitiveType FloatType, _gcGetter = "get_attenuation", _gcSetter = "set_attenuation", _gcIndex = -1},GodotProperty {_gpName = "bus", _gcType = CoreType "String", _gcGetter = "get_bus", _gcSetter = "set_bus", _gcIndex = -1},GodotProperty {_gpName = "area_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_area_mask", _gcSetter = "set_area_mask", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "finished", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "AudioStream", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream", _gmReturnType = CustomType "AudioStream", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_volume_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "volume_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_volume_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_playback_position", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autoplay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_autoplay_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_playing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pixels", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attenuation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attenuation", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_area_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_area_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_bus_layout_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "AudioStreamPlayer3D", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ATTENUATION_INVERSE_SQUARE_DISTANCE",1),("ATTENUATION_INVERSE_DISTANCE",0),("DOPPLER_TRACKING_PHYSICS_STEP",2),("DOPPLER_TRACKING_DISABLED",0),("OUT_OF_RANGE_PAUSE",1),("ATTENUATION_LOGARITHMIC",2),("OUT_OF_RANGE_MIX",0),("DOPPLER_TRACKING_IDLE_STEP",1)], _gcProperties = [GodotProperty {_gpName = "stream", _gcType = CustomType "AudioStream", _gcGetter = "get_stream", _gcSetter = "set_stream", _gcIndex = -1},GodotProperty {_gpName = "attenuation_model", _gcType = PrimitiveType IntType, _gcGetter = "get_attenuation_model", _gcSetter = "set_attenuation_model", _gcIndex = -1},GodotProperty {_gpName = "unit_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_unit_db", _gcSetter = "set_unit_db", _gcIndex = -1},GodotProperty {_gpName = "unit_size", _gcType = PrimitiveType FloatType, _gcGetter = "get_unit_size", _gcSetter = "set_unit_size", _gcIndex = -1},GodotProperty {_gpName = "max_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_max_db", _gcSetter = "set_max_db", _gcIndex = -1},GodotProperty {_gpName = "playing", _gcType = PrimitiveType BoolType, _gcGetter = "is_playing", _gcSetter = "_set_playing", _gcIndex = -1},GodotProperty {_gpName = "autoplay", _gcType = PrimitiveType BoolType, _gcGetter = "is_autoplay_enabled", _gcSetter = "set_autoplay", _gcIndex = -1},GodotProperty {_gpName = "max_distance", _gcType = PrimitiveType FloatType, _gcGetter = "get_max_distance", _gcSetter = "set_max_distance", _gcIndex = -1},GodotProperty {_gpName = "out_of_range_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_out_of_range_mode", _gcSetter = "set_out_of_range_mode", _gcIndex = -1},GodotProperty {_gpName = "bus", _gcType = CoreType "String", _gcGetter = "get_bus", _gcSetter = "set_bus", _gcIndex = -1},GodotProperty {_gpName = "area_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_area_mask", _gcSetter = "set_area_mask", _gcIndex = -1},GodotProperty {_gpName = "emission_angle_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_emission_angle_enabled", _gcSetter = "set_emission_angle_enabled", _gcIndex = -1},GodotProperty {_gpName = "emission_angle_degrees", _gcType = PrimitiveType FloatType, _gcGetter = "get_emission_angle", _gcSetter = "set_emission_angle", _gcIndex = -1},GodotProperty {_gpName = "emission_angle_filter_attenuation_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_emission_angle_filter_attenuation_db", _gcSetter = "set_emission_angle_filter_attenuation_db", _gcIndex = -1},GodotProperty {_gpName = "attenuation_filter_cutoff_hz", _gcType = PrimitiveType FloatType, _gcGetter = "get_attenuation_filter_cutoff_hz", _gcSetter = "set_attenuation_filter_cutoff_hz", _gcIndex = -1},GodotProperty {_gpName = "attenuation_filter_db", _gcType = PrimitiveType FloatType, _gcGetter = "get_attenuation_filter_db", _gcSetter = "set_attenuation_filter_db", _gcIndex = -1},GodotProperty {_gpName = "doppler_tracking", _gcType = PrimitiveType IntType, _gcGetter = "get_doppler_tracking", _gcSetter = "set_doppler_tracking", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "finished", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_stream", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stream", _gaType = CustomType "AudioStream", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_stream", _gmReturnType = CustomType "AudioStream", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_unit_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unit_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unit_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_unit_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unit_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unit_size", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "seek", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_position", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_playing", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_playback_position", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bus", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bus", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bus", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_autoplay", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_autoplay_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_playing", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_is_active", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_max_distance", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "metres", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_max_distance", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_area_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_area_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_angle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_angle", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_angle_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_emission_angle_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_emission_angle_filter_attenuation_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_emission_angle_filter_attenuation_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attenuation_filter_cutoff_hz", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attenuation_filter_cutoff_hz", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attenuation_filter_db", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "db", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attenuation_filter_db", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_attenuation_model", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "model", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_attenuation_model", _gmReturnType = EnumType "enum.AudioStreamPlayer3D::AttenuationModel", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_out_of_range_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_out_of_range_mode", _gmReturnType = EnumType "enum.AudioStreamPlayer3D::OutOfRangeMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_doppler_tracking", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_doppler_tracking", _gmReturnType = EnumType "enum.AudioStreamPlayer3D::DopplerTracking", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_bus_layout_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AttenuationModel", _geValues = fromList [("ATTENUATION_INVERSE_SQUARE_DISTANCE",1),("ATTENUATION_INVERSE_DISTANCE",0),("ATTENUATION_LOGARITHMIC",2)]},GodotEnum {_geName = CustomType "OutOfRangeMode", _geValues = fromList [("OUT_OF_RANGE_PAUSE",1),("OUT_OF_RANGE_MIX",0)]},GodotEnum {_geName = CustomType "DopplerTracking", _geValues = fromList [("DOPPLER_TRACKING_PHYSICS_STEP",2),("DOPPLER_TRACKING_DISABLED",0),("DOPPLER_TRACKING_IDLE_STEP",1)]}]},GodotClass {_gcName = "AudioStreamSample", _gcBaseClass = "AudioStream", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("FORMAT_8_BITS",0),("LOOP_PING_PONG",2),("LOOP_DISABLED",0),("FORMAT_IMA_ADPCM",2),("LOOP_FORWARD",1),("FORMAT_16_BITS",1)], _gcProperties = [GodotProperty {_gpName = "format", _gcType = PrimitiveType IntType, _gcGetter = "get_format", _gcSetter = "set_format", _gcIndex = -1},GodotProperty {_gpName = "loop_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_loop_mode", _gcSetter = "set_loop_mode", _gcIndex = -1},GodotProperty {_gpName = "loop_begin", _gcType = PrimitiveType IntType, _gcGetter = "get_loop_begin", _gcSetter = "set_loop_begin", _gcIndex = -1},GodotProperty {_gpName = "loop_end", _gcType = PrimitiveType IntType, _gcGetter = "get_loop_end", _gcSetter = "set_loop_end", _gcIndex = -1},GodotProperty {_gpName = "mix_rate", _gcType = PrimitiveType IntType, _gcGetter = "get_mix_rate", _gcSetter = "set_mix_rate", _gcIndex = -1},GodotProperty {_gpName = "stereo", _gcType = PrimitiveType BoolType, _gcGetter = "is_stereo", _gcSetter = "set_stereo", _gcIndex = -1},GodotProperty {_gpName = "data", _gcType = CoreType "PoolByteArray", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_format", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "format", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_format", _gmReturnType = EnumType "enum.AudioStreamSample::Format", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "loop_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_loop_mode", _gmReturnType = EnumType "enum.AudioStreamSample::LoopMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "loop_begin", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_loop_begin", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop_end", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "loop_end", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_loop_end", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_mix_rate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mix_rate", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mix_rate", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_stereo", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "stereo", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_stereo", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "LoopMode", _geValues = fromList [("LOOP_PING_PONG",2),("LOOP_DISABLED",0),("LOOP_FORWARD",1)]},GodotEnum {_geName = CustomType "Format", _geValues = fromList [("FORMAT_8_BITS",0),("FORMAT_IMA_ADPCM",2),("FORMAT_16_BITS",1)]}]},GodotClass {_gcName = "LineShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "normal", _gcType = CoreType "Vector2", _gcGetter = "get_normal", _gcSetter = "set_normal", _gcIndex = -1},GodotProperty {_gpName = "d", _gcType = PrimitiveType FloatType, _gcGetter = "get_d", _gcSetter = "set_d", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_normal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "normal", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_normal", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_d", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "d", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_d", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SegmentShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "a", _gcType = CoreType "Vector2", _gcGetter = "get_a", _gcSetter = "set_a", _gcIndex = -1},GodotProperty {_gpName = "b", _gcType = CoreType "Vector2", _gcGetter = "get_b", _gcSetter = "set_b", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_a", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "a", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_a", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_b", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "b", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_b", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RayShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "length", _gcType = PrimitiveType FloatType, _gcGetter = "get_length", _gcSetter = "set_length", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_length", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "length", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CircleShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RectangleShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "extents", _gcType = CoreType "Vector2", _gcGetter = "get_extents", _gcSetter = "set_extents", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_extents", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extents", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_extents", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "CapsuleShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "radius", _gcType = PrimitiveType FloatType, _gcGetter = "get_radius", _gcSetter = "set_radius", _gcIndex = -1},GodotProperty {_gpName = "height", _gcType = PrimitiveType FloatType, _gcGetter = "get_height", _gcSetter = "set_height", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_radius", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "radius", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_radius", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_height", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "height", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_height", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ConvexPolygonShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "points", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_points", _gcSetter = "set_points", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_point_cloud", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point_cloud", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "points", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_points", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ConcavePolygonShape2D", _gcBaseClass = "Shape2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "segments", _gcType = CoreType "PoolVector2Array", _gcGetter = "get_segments", _gcSetter = "set_segments", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_segments", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_segments", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Curve2D", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "bake_interval", _gcType = PrimitiveType FloatType, _gcGetter = "get_bake_interval", _gcSetter = "set_bake_interval", _gcIndex = -1},GodotProperty {_gpName = "_data", _gcType = PrimitiveType IntType, _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_point_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "in", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"},GodotArgument {_gaName = "out", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"},GodotArgument {_gaName = "at_position", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "set_point_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_in", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_in", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_point_out", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_point_out", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_point", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_points", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "interpolate", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "t", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "interpolatef", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "fofs", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_bake_interval", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "distance", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_bake_interval", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_baked_length", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "interpolate_baked", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "cubic", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_baked_points", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "tessellate", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "max_stages", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "5"},GodotArgument {_gaName = "tolerance_degrees", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "4"}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "Path2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "curve", _gcType = CustomType "Curve2D", _gcGetter = "get_curve", _gcSetter = "set_curve", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_curve", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "curve", _gaType = CustomType "Curve2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_curve", _gmReturnType = CustomType "Curve2D", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_curve_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PathFollow2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_offset", _gcSetter = "set_offset", _gcIndex = -1},GodotProperty {_gpName = "unit_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_unit_offset", _gcSetter = "set_unit_offset", _gcIndex = -1},GodotProperty {_gpName = "h_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_h_offset", _gcSetter = "set_h_offset", _gcIndex = -1},GodotProperty {_gpName = "v_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_v_offset", _gcSetter = "set_v_offset", _gcIndex = -1},GodotProperty {_gpName = "rotate", _gcType = PrimitiveType BoolType, _gcGetter = "is_rotating", _gcSetter = "set_rotate", _gcIndex = -1},GodotProperty {_gpName = "cubic_interp", _gcType = PrimitiveType BoolType, _gcGetter = "get_cubic_interpolation", _gcSetter = "set_cubic_interpolation", _gcIndex = -1},GodotProperty {_gpName = "loop", _gcType = PrimitiveType BoolType, _gcGetter = "has_loop", _gcSetter = "set_loop", _gcIndex = -1},GodotProperty {_gpName = "lookahead", _gcType = PrimitiveType FloatType, _gcGetter = "get_lookahead", _gcSetter = "set_lookahead", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_h_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "h_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_h_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_v_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "v_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_v_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_unit_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "unit_offset", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_unit_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rotate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_rotating", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cubic_interpolation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cubic_interpolation", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "loop", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_loop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_lookahead", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lookahead", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_lookahead", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "Navigation2D", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "navpoly_add", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "NavigationPolygon", _gaDefaultValue = Nothing},GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing},GodotArgument {_gaName = "owner", _gaType = CoreType "Object", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "navpoly_set_transform", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "xform", _gaType = CoreType "Transform2D", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "navpoly_remove", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_simple_path", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "start", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "end", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "optimize", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "get_closest_point", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_closest_point_owner", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "to_point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "NavigationPolygon", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "vertices", _gcType = CoreType "PoolVector3Array", _gcGetter = "get_vertices", _gcSetter = "set_vertices", _gcIndex = -1},GodotProperty {_gpName = "polygons", _gcType = CoreType "Array", _gcGetter = "_get_polygons", _gcSetter = "_set_polygons", _gcIndex = -1},GodotProperty {_gpName = "outlines", _gcType = CoreType "Array", _gcGetter = "_get_outlines", _gcSetter = "_set_outlines", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_vertices", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "vertices", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_vertices", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygon", _gaType = CoreType "PoolIntArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_polygon_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_polygon", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_polygons", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_outline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "outline", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_outline_at_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "outline", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_outline_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_outline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "outline", _gaType = CoreType "PoolVector2Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_outline", _gmReturnType = CoreType "PoolVector2Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_outline", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_outlines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_polygons_from_outlines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_polygons", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "polygons", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_polygons", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_outlines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "outlines", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_outlines", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "NavigationPolygonInstance", _gcBaseClass = "Node2D", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "navpoly", _gcType = CustomType "NavigationPolygon", _gcGetter = "get_navigation_polygon", _gcSetter = "set_navigation_polygon", _gcIndex = -1},GodotProperty {_gpName = "enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_enabled", _gcSetter = "set_enabled", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_navigation_polygon", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "navpoly", _gaType = CustomType "NavigationPolygon", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_navigation_polygon", _gmReturnType = CustomType "NavigationPolygon", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_navpoly_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "SceneState", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [("GEN_EDIT_STATE_DISABLED",0),("GEN_EDIT_STATE_MAIN",2),("GEN_EDIT_STATE_INSTANCE",1)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_node_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_node_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "for_parent", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "get_node_owner_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_node_instance_placeholder", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_instance_placeholder", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_instance", _gmReturnType = CustomType "PackedScene", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_groups", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_property_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_property_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "prop_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_property_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "prop_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_connection_source", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_signal", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_target", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_method", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_connection_binds", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "GenEditState", _geValues = fromList [("GEN_EDIT_STATE_DISABLED",0),("GEN_EDIT_STATE_MAIN",2),("GEN_EDIT_STATE_INSTANCE",1)]}]},GodotClass {_gcName = "PackedScene", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("GEN_EDIT_STATE_DISABLED",0),("GEN_EDIT_STATE_MAIN",2),("GEN_EDIT_STATE_INSTANCE",1)], _gcProperties = [GodotProperty {_gpName = "_bundled", _gcType = CoreType "Dictionary", _gcGetter = "_get_bundled_scene", _gcSetter = "_set_bundled_scene", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "pack", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "instance", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "edit_state", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "can_instance", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_bundled_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_bundled_scene", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_state", _gmReturnType = CustomType "SceneState", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "GenEditState", _geValues = fromList [("GEN_EDIT_STATE_DISABLED",0),("GEN_EDIT_STATE_MAIN",2),("GEN_EDIT_STATE_INSTANCE",1)]}]},GodotClass {_gcName = "SceneTree", _gcBaseClass = "MainLoop", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("STRETCH_ASPECT_KEEP",1),("STRETCH_ASPECT_IGNORE",0),("GROUP_CALL_REALTIME",2),("GROUP_CALL_UNIQUE",4),("STRETCH_MODE_DISABLED",0),("STRETCH_ASPECT_KEEP_HEIGHT",3),("STRETCH_MODE_2D",1),("GROUP_CALL_REVERSE",1),("STRETCH_ASPECT_KEEP_WIDTH",2),("STRETCH_MODE_VIEWPORT",2),("GROUP_CALL_DEFAULT",0),("STRETCH_ASPECT_EXPAND",4)], _gcProperties = [GodotProperty {_gpName = "debug_collisions_hint", _gcType = PrimitiveType BoolType, _gcGetter = "is_debugging_collisions_hint", _gcSetter = "set_debug_collisions_hint", _gcIndex = -1},GodotProperty {_gpName = "debug_navigation_hint", _gcType = PrimitiveType BoolType, _gcGetter = "is_debugging_navigation_hint", _gcSetter = "set_debug_navigation_hint", _gcIndex = -1},GodotProperty {_gpName = "paused", _gcType = PrimitiveType BoolType, _gcGetter = "is_paused", _gcSetter = "set_pause", _gcIndex = -1},GodotProperty {_gpName = "refuse_new_network_connections", _gcType = PrimitiveType BoolType, _gcGetter = "is_refusing_new_network_connections", _gcSetter = "set_refuse_new_network_connections", _gcIndex = -1},GodotProperty {_gpName = "use_font_oversampling", _gcType = PrimitiveType BoolType, _gcGetter = "is_using_font_oversampling", _gcSetter = "set_use_font_oversampling", _gcIndex = -1},GodotProperty {_gpName = "edited_scene_root", _gcType = CustomType "Node", _gcGetter = "get_edited_scene_root", _gcSetter = "set_edited_scene_root", _gcIndex = -1},GodotProperty {_gpName = "current_scene", _gcType = CustomType "Node", _gcGetter = "get_current_scene", _gcSetter = "set_current_scene", _gcIndex = -1},GodotProperty {_gpName = "network_peer", _gcType = CustomType "NetworkedMultiplayerPeer", _gcGetter = "get_network_peer", _gcSetter = "set_network_peer", _gcIndex = -1},GodotProperty {_gpName = "root", _gcType = CustomType "Node", _gcGetter = "get_root", _gcSetter = "", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "connected_to_server", _gsArguments = []},GodotSignal {_gsName = "node_configuration_warning_changed", _gsArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "connection_failed", _gsArguments = []},GodotSignal {_gsName = "physics_frame", _gsArguments = []},GodotSignal {_gsName = "screen_resized", _gsArguments = []},GodotSignal {_gsName = "network_peer_disconnected", _gsArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "network_peer_connected", _gsArguments = [GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "node_removed", _gsArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "node_added", _gsArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "files_dropped", _gsArguments = [GodotArgument {_gaName = "files", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just ""},GodotArgument {_gaName = "screen", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "idle_frame", _gsArguments = []},GodotSignal {_gsName = "server_disconnected", _gsArguments = []},GodotSignal {_gsName = "tree_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "get_root", _gmReturnType = CustomType "Viewport", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_group", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_auto_accept_quit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_quit_on_go_back", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_debug_collisions_hint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_debugging_collisions_hint", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_debug_navigation_hint", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_debugging_navigation_hint", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_edited_scene_root", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_edited_scene_root", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_pause", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_paused", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_input_as_handled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_input_handled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "create_timer", _gmReturnType = CustomType "SceneTreeTimer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time_sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "pause_mode_process", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]},GodotMethod {_gmName = "get_node_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_frame", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "quit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_screen_stretch", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "aspect", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "minsize", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "shrink", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "queue_delete", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "obj", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "call_group_flags", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "notify_group_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "call_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "notification", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_group_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "call_flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "call_group", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "method", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "notify_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "notification", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_group", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_nodes_in_group", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "group", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_current_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "child_node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_scene", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "change_scene", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "change_scene_to", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "packed_scene", _gaType = CustomType "PackedScene", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reload_current_scene", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_change_scene", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_network_peer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "peer", _gaType = CustomType "NetworkedMultiplayerPeer", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_network_peer", _gmReturnType = CustomType "NetworkedMultiplayerPeer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_network_server", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_network_peer", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_network_connected_peers", _gmReturnType = CoreType "PoolIntArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_network_unique_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_rpc_sender_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_refuse_new_network_connections", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "refuse", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_refusing_new_network_connections", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_network_peer_connected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_network_peer_disconnected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_connected_to_server", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_connection_failed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_server_disconnected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_font_oversampling", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_using_font_oversampling", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "StretchAspect", _geValues = fromList [("STRETCH_ASPECT_KEEP",1),("STRETCH_ASPECT_IGNORE",0),("STRETCH_ASPECT_KEEP_HEIGHT",3),("STRETCH_ASPECT_KEEP_WIDTH",2),("STRETCH_ASPECT_EXPAND",4)]},GodotEnum {_geName = CustomType "GroupCallFlags", _geValues = fromList [("GROUP_CALL_REALTIME",2),("GROUP_CALL_UNIQUE",4),("GROUP_CALL_REVERSE",1),("GROUP_CALL_DEFAULT",0)]},GodotEnum {_geName = CustomType "StretchMode", _geValues = fromList [("STRETCH_MODE_DISABLED",0),("STRETCH_MODE_2D",1),("STRETCH_MODE_VIEWPORT",2)]}]},GodotClass {_gcName = "SceneTreeTimer", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "time_left", _gcType = PrimitiveType FloatType, _gcGetter = "get_time_left", _gcSetter = "set_time_left", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "timeout", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "set_time_left", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "time", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_time_left", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorPlugin", _gcBaseClass = "Node", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("CONTAINER_SPATIAL_EDITOR_BOTTOM",3),("DOCK_SLOT_LEFT_UR",2),("CONTAINER_CANVAS_EDITOR_SIDE",5),("DOCK_SLOT_LEFT_BL",1),("CONTAINER_SPATIAL_EDITOR_MENU",1),("DOCK_SLOT_RIGHT_BR",7),("DOCK_SLOT_RIGHT_BL",5),("CONTAINER_CANVAS_EDITOR_BOTTOM",6),("CONTAINER_PROPERTY_EDITOR_BOTTOM",7),("CONTAINER_TOOLBAR",0),("DOCK_SLOT_RIGHT_UL",4),("DOCK_SLOT_RIGHT_UR",6),("DOCK_SLOT_LEFT_UL",0),("CONTAINER_CANVAS_EDITOR_MENU",4),("CONTAINER_SPATIAL_EDITOR_SIDE",2),("DOCK_SLOT_LEFT_BR",3),("DOCK_SLOT_MAX",8)], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "main_screen_changed", _gsArguments = [GodotArgument {_gaName = "screen_name", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "scene_closed", _gsArguments = [GodotArgument {_gaName = "filepath", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "scene_changed", _gsArguments = [GodotArgument {_gaName = "scene_root", _gaType = CustomType "Node", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "forward_canvas_gui_input", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "forward_draw_over_viewport", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "overlay", _gaType = CustomType "Control", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "forward_force_draw_over_viewport", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "overlay", _gaType = CustomType "Control", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "forward_spatial_gui_input", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "camera", _gaType = CustomType "Camera", _gaDefaultValue = Nothing},GodotArgument {_gaName = "event", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "create_spatial_gizmo", _gmReturnType = CustomType "EditorSpatialGizmo", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "for_spatial", _gaType = CustomType "Spatial", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_plugin_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_plugin_icon", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "has_main_screen", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "visible", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "edit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "handles", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_state", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_state", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "state", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "save_external_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "apply_changes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_breakpoints", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_window_layout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layout", _gaType = CustomType "ConfigFile", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_window_layout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layout", _gaType = CustomType "ConfigFile", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_control_to_container", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "container", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_control_to_bottom_panel", _gmReturnType = CustomType "ToolButton", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_control_to_dock", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "slot", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_control_from_docks", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_control_from_bottom_panel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_control_from_container", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "container", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "control", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_tool_submenu_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "submenu", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_custom_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "base", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "script", _gaType = CustomType "Script", _gaDefaultValue = Nothing},GodotArgument {_gaName = "icon", _gaType = CustomType "Texture", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_custom_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "update_overlays", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_bottom_panel_item_visible", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "item", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "hide_bottom_panel", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_undo_redo", _gmReturnType = CustomType "UndoRedo", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "queue_save_layout", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_import_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "importer", _gaType = CustomType "EditorImportPlugin", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_import_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "importer", _gaType = CustomType "EditorImportPlugin", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_scene_import_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene_importer", _gaType = CustomType "EditorSceneImporter", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_scene_import_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene_importer", _gaType = CustomType "EditorSceneImporter", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_export_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exporter", _gaType = CustomType "EditorExportPlugin", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_export_plugin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "exporter", _gaType = CustomType "EditorExportPlugin", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_input_event_forwarding_always_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_force_draw_over_forwarding_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_editor_interface", _gmReturnType = CustomType "EditorInterface", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DockSlot", _geValues = fromList [("DOCK_SLOT_LEFT_UR",2),("DOCK_SLOT_LEFT_BL",1),("DOCK_SLOT_RIGHT_BR",7),("DOCK_SLOT_RIGHT_BL",5),("DOCK_SLOT_RIGHT_UL",4),("DOCK_SLOT_RIGHT_UR",6),("DOCK_SLOT_LEFT_UL",0),("DOCK_SLOT_LEFT_BR",3),("DOCK_SLOT_MAX",8)]},GodotEnum {_geName = CustomType "CustomControlContainer", _geValues = fromList [("CONTAINER_SPATIAL_EDITOR_BOTTOM",3),("CONTAINER_CANVAS_EDITOR_SIDE",5),("CONTAINER_SPATIAL_EDITOR_MENU",1),("CONTAINER_CANVAS_EDITOR_BOTTOM",6),("CONTAINER_PROPERTY_EDITOR_BOTTOM",7),("CONTAINER_TOOLBAR",0),("CONTAINER_CANVAS_EDITOR_MENU",4),("CONTAINER_SPATIAL_EDITOR_SIDE",2)]}]},GodotClass {_gcName = "EditorImportPlugin", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_importer_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_visible_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_preset_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_preset_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "preset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_recognized_extensions", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_import_options", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "preset", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_save_extension", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_resource_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_priority", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_import_order", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_option_visibility", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "option", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "options", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "import", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "source_file", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "save_path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "options", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing},GodotArgument {_gaName = "r_platform_variants", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "r_gen_files", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorScript", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_run", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_root_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_scene", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_editor_interface", _gmReturnType = CustomType "EditorInterface", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorSelection", _gcBaseClass = "Object", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "selection_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "_node_removed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_selected_nodes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_transformable_selected_nodes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_emit_change", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorFileDialog", _gcBaseClass = "ConfirmationDialog", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("ACCESS_RESOURCES",0),("DISPLAY_THUMBNAILS",0),("MODE_OPEN_FILES",1),("MODE_OPEN_FILE",0),("MODE_SAVE_FILE",4),("DISPLAY_LIST",1),("ACCESS_USERDATA",1),("ACCESS_FILESYSTEM",2),("MODE_OPEN_DIR",2),("MODE_OPEN_ANY",3)], _gcProperties = [GodotProperty {_gpName = "access", _gcType = PrimitiveType IntType, _gcGetter = "get_access", _gcSetter = "set_access", _gcIndex = -1},GodotProperty {_gpName = "display_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_display_mode", _gcSetter = "set_display_mode", _gcIndex = -1},GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_mode", _gcSetter = "set_mode", _gcIndex = -1},GodotProperty {_gpName = "current_dir", _gcType = CoreType "String", _gcGetter = "get_current_dir", _gcSetter = "set_current_dir", _gcIndex = -1},GodotProperty {_gpName = "current_file", _gcType = CoreType "String", _gcGetter = "get_current_file", _gcSetter = "set_current_file", _gcIndex = -1},GodotProperty {_gpName = "current_path", _gcType = CoreType "String", _gcGetter = "get_current_path", _gcSetter = "set_current_path", _gcIndex = -1},GodotProperty {_gpName = "show_hidden_files", _gcType = PrimitiveType BoolType, _gcGetter = "is_showing_hidden_files", _gcSetter = "set_show_hidden_files", _gcIndex = -1},GodotProperty {_gpName = "disable_overwrite_warning", _gcType = PrimitiveType BoolType, _gcGetter = "is_overwrite_warning_disabled", _gcSetter = "set_disable_overwrite_warning", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "files_selected", _gsArguments = [GodotArgument {_gaName = "paths", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "dir_selected", _gsArguments = [GodotArgument {_gaName = "dir", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "file_selected", _gsArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_item_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_multi_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_items_clear_selection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_item_list_item_rmb_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_item_list_rmb_clicked", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_item_menu_id_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_item_db_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_dir_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_file_entered", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_action_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_cancel_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_filter_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_save_confirm_pressed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "clear_filters", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "add_filter", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "filter", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_current_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dir", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_current_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_current_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_mode", _gmReturnType = EnumType "enum.EditorFileDialog::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_vbox", _gmReturnType = CustomType "VBoxContainer", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_access", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "access", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_access", _gmReturnType = EnumType "enum.EditorFileDialog::Access", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_show_hidden_files", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "show", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_showing_hidden_files", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_select_drive", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_make_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_make_dir_confirm", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_file_list", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_dir", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_thumbnail_done", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_display_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_display_mode", _gmReturnType = EnumType "enum.EditorFileDialog::DisplayMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_thumbnail_result", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_disable_overwrite_warning", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "disable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_overwrite_warning_disabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_recent_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_go_back", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_go_forward", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_go_up", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_favorite_toggled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_favorite_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_favorite_move_up", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_favorite_move_down", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "invalidate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "DisplayMode", _geValues = fromList [("DISPLAY_THUMBNAILS",0),("DISPLAY_LIST",1)]},GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_OPEN_FILES",1),("MODE_OPEN_FILE",0),("MODE_SAVE_FILE",4),("MODE_OPEN_DIR",2),("MODE_OPEN_ANY",3)]},GodotEnum {_geName = CustomType "Access", _geValues = fromList [("ACCESS_RESOURCES",0),("ACCESS_USERDATA",1),("ACCESS_FILESYSTEM",2)]}]},GodotClass {_gcName = "EditorSettings", _gcBaseClass = "Resource", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "settings_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "has_setting", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_setting", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_setting", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "erase", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_initial_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "update_current", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "property_can_revert", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "property_get_revert", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_property_info", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "info", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_settings_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_project_settings_dir", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_favorite_dirs", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dirs", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_favorite_dirs", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_recent_dirs", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "dirs", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_recent_dirs", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorSpatialGizmo", _gcBaseClass = "SpatialGizmo", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "redraw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_handle_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_handle_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_handle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "camera", _gaType = CustomType "Camera", _gaDefaultValue = Nothing},GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "commit_handle", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "restore", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "cancel", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_lines", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "lines", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing},GodotArgument {_gaName = "billboard", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "add_mesh", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mesh", _gaType = CustomType "ArrayMesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "billboard", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "skeleton", _gaType = CoreType "RID", _gaDefaultValue = Just "[RID]"}]},GodotMethod {_gmName = "add_collision_segments", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "segments", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_collision_triangles", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "triangles", _gaType = CustomType "TriangleMesh", _gaDefaultValue = Nothing},GodotArgument {_gaName = "bounds", _gaType = CoreType "AABB", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_unscaled_billboard", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "material", _gaType = CustomType "Material", _gaDefaultValue = Nothing},GodotArgument {_gaName = "default_scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "1"}]},GodotMethod {_gmName = "add_handles", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "handles", _gaType = CoreType "PoolVector3Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "billboard", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "secondary", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "set_spatial_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "node", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorResourcePreview", _gcBaseClass = "Node", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "preview_invalidated", _gsArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_preview_ready", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CustomType "Texture", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg3", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg4", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "queue_resource_preview", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver_func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "queue_edited_resource_preview", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "receiver_func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "userdata", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_preview_generator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "generator", _gaType = CustomType "EditorResourcePreviewGenerator", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_preview_generator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "generator", _gaType = CustomType "EditorResourcePreviewGenerator", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "check_for_invalidation", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorResourcePreviewGenerator", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "handles", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generate", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "from", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "generate_from_path", _gmReturnType = CustomType "Texture", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorFileSystem", _gcBaseClass = "Node", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "resources_reimported", _gsArguments = [GodotArgument {_gaName = "resources", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "sources_changed", _gsArguments = [GodotArgument {_gaName = "exist", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "filesystem_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "get_filesystem", _gmReturnType = CustomType "EditorFileSystemDirectory", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_scanning", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_scanning_progress", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "scan", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "scan_sources", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "update_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_filesystem_path", _gmReturnType = CustomType "EditorFileSystemDirectory", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorFileSystemDirectory", _gcBaseClass = "Object", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_subdir_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_subdir", _gmReturnType = CustomType "EditorFileSystemDirectory", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file_import_is_valid", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_parent", _gmReturnType = CustomType "EditorFileSystemDirectory", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "find_file_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "find_dir_index", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ScriptEditor", _gcBaseClass = "PanelContainer", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "editor_script_changed", _gsArguments = [GodotArgument {_gaName = "script", _gaType = CustomType "Script", _gaDefaultValue = Just ""}]},GodotSignal {_gsName = "script_close", _gsArguments = [GodotArgument {_gaName = "script", _gaType = CustomType "Script", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_file_dialog_action", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_tab_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_menu_option", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_close_current_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_close_discard_current_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_close_docs_tab", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_close_all_tabs", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_close_other_tabs", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_open_recent_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_editor_play", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_editor_pause", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_editor_stop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_add_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg2", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_reload_scripts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_resave_scripts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_res_saved_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_goto_script_line", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "Reference", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_goto_script_line2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_help_search", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_help_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_save_history", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_copy_script_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_breaked", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_show_debugger", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_debug_tooltip", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arg1", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_autosave_scripts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_editor_settings_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_script_names", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_tree_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_members_overview_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_help_overview_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_selected", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_created", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "Script", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_split_dragged", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_help_class_open", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_help_class_goto", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_request_help", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_history_forward", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_history_back", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_live_auto_reload_running_scripts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_unhandled_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_list_gui_input", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = CustomType "InputEvent", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_update_recent_scripts", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_drag_data_fw", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "can_drop_data_fw", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "drop_data_fw", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "point", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing},GodotArgument {_gaName = "data", _gaType = CoreType "Variant", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_current_script", _gmReturnType = CustomType "Script", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_open_scripts", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "open_script_create_dialog", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "base_path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorInterface", _gcBaseClass = "Node", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "inspect_object", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "object", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "for_property", _gaType = CoreType "String", _gaDefaultValue = Just ""}]},GodotMethod {_gmName = "get_selection", _gmReturnType = CustomType "EditorSelection", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_editor_settings", _gmReturnType = CustomType "EditorSettings", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_script_editor", _gmReturnType = CustomType "ScriptEditor", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_base_control", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "edit_resource", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "open_scene_from_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene_filepath", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "reload_scene_from_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene_filepath", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_open_scenes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_edited_scene_root", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_resource_previewer", _gmReturnType = CustomType "EditorResourcePreview", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_resource_filesystem", _gmReturnType = CustomType "EditorFileSystem", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_editor_viewport", _gmReturnType = CustomType "Control", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_mesh_previews", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "meshes", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "preview_size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "select_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "p_file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_selected_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_plugin_enabled", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "plugin", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_plugin_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "plugin", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "save_scene", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "save_scene_as", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "with_preview", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"}]}], _gcEnums = []},GodotClass {_gcName = "EditorExportPlugin", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_export_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "features", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_export_begin", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "features", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "is_debug", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_shared_object", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "tags", _gaType = CoreType "PoolStringArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "file", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing},GodotArgument {_gaName = "remap", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_ios_framework", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_ios_plist_content", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "plist_content", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_ios_linker_flags", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "flags", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_ios_bundle_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_ios_cpp_code", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "skip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorResourceConversionPlugin", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_convert", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_converts_to", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "EditorSceneImporter", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("IMPORT_MATERIALS_IN_INSTANCES",1024),("IMPORT_ANIMATION_FORCE_ALL_TRACKS_IN_ALL_CLIPS",16),("IMPORT_USE_COMPRESSION",2048),("IMPORT_FAIL_ON_MISSING_DEPENDENCIES",512),("IMPORT_ANIMATION",2),("IMPORT_SCENE",1),("IMPORT_ANIMATION_KEEP_VALUE_TRACKS",32),("IMPORT_ANIMATION_DETECT_LOOP",4),("IMPORT_ANIMATION_OPTIMIZE",8),("IMPORT_GENERATE_TANGENT_ARRAYS",256)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_get_import_flags", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_extensions", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_import_scene", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bake_fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_import_animation", _gmReturnType = CustomType "Animation", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bake_fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "import_scene_from_other_importer", _gmReturnType = CustomType "Node", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bake_fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "import_animation_from_other_importer", _gmReturnType = CustomType "Animation", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "flags", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "bake_fps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "EditorScenePostImport", _gcBaseClass = "Reference", _gcApiType = "tools", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "post_import", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scene", _gaType = CoreType "Object", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "JavaScript", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "eval", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "code", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "use_global_execution_context", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]}], _gcEnums = []},GodotClass {_gcName = "NetworkedMultiplayerENet", _gcBaseClass = "NetworkedMultiplayerPeer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("COMPRESS_NONE",0),("COMPRESS_RANGE_CODER",1),("COMPRESS_ZLIB",3),("COMPRESS_FASTLZ",2),("COMPRESS_ZSTD",4)], _gcProperties = [GodotProperty {_gpName = "compression_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_compression_mode", _gcSetter = "set_compression_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "create_server", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "max_clients", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "32"},GodotArgument {_gaName = "in_bandwidth", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "out_bandwidth", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "create_client", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ip", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "in_bandwidth", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "out_bandwidth", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "close_connection", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_compression_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_compression_mode", _gmReturnType = EnumType "enum.NetworkedMultiplayerENet::CompressionMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_bind_ip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "ip", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = [GodotEnum {_geName = CustomType "CompressionMode", _geValues = fromList [("COMPRESS_NONE",0),("COMPRESS_RANGE_CODER",1),("COMPRESS_ZLIB",3),("COMPRESS_FASTLZ",2),("COMPRESS_ZSTD",4)]}]},GodotClass {_gcName = "GDNativeLibrary", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "load_once", _gcType = PrimitiveType BoolType, _gcGetter = "should_load_once", _gcSetter = "set_load_once", _gcIndex = -1},GodotProperty {_gpName = "singleton", _gcType = PrimitiveType BoolType, _gcGetter = "is_singleton", _gcSetter = "set_singleton", _gcIndex = -1},GodotProperty {_gpName = "symbol_prefix", _gcType = CoreType "String", _gcGetter = "get_symbol_prefix", _gcSetter = "set_symbol_prefix", _gcIndex = -1},GodotProperty {_gpName = "reloadable", _gcType = PrimitiveType BoolType, _gcGetter = "is_reloadable", _gcSetter = "set_reloadable", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_config_file", _gmReturnType = CustomType "ConfigFile", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_library_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_current_dependencies", _gmReturnType = CoreType "PoolStringArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "should_load_once", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_singleton", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_symbol_prefix", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "is_reloadable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_load_once", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "load_once", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_singleton", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "singleton", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_symbol_prefix", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "symbol_prefix", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_reloadable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "reloadable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "GDNative", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "library", _gcType = CustomType "GDNativeLibrary", _gcGetter = "get_library", _gcSetter = "set_library", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_library", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "library", _gaType = CustomType "GDNativeLibrary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_library", _gmReturnType = CustomType "GDNativeLibrary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "initialize", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "terminate", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "call_native", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "calling_type", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "procedure_name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "arguments", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ARVRInterfaceGDNative", _gcBaseClass = "ARVRInterface", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "NativeScript", _gcBaseClass = "Script", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "class_name", _gcType = CoreType "String", _gcGetter = "get_class_name", _gcSetter = "set_class_name", _gcIndex = -1},GodotProperty {_gpName = "library", _gcType = CustomType "GDNativeLibrary", _gcGetter = "get_library", _gcSetter = "set_library", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_class_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "class_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_class_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_library", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "library", _gaType = CustomType "GDNativeLibrary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_library", _gmReturnType = CustomType "GDNativeLibrary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "new", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "PluginScript", _gcBaseClass = "Script", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "GDScript", _gcBaseClass = "Script", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "new", _gmReturnType = CoreType "Object", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_as_byte_code", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "GDScriptFunctionState", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "completed", _gsArguments = [GodotArgument {_gaName = "result", _gaType = CoreType "Variant", _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "resume", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "is_valid", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "extended_check", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "_signal_callback", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "GridMap", _gcBaseClass = "Spatial", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = False, _gcConstants = fromList [("INVALID_CELL_ITEM",-1)], _gcProperties = [GodotProperty {_gpName = "theme", _gcType = CustomType "MeshLibrary", _gcGetter = "get_theme", _gcSetter = "set_theme", _gcIndex = -1},GodotProperty {_gpName = "cell_size", _gcType = CoreType "Vector3", _gcGetter = "get_cell_size", _gcSetter = "set_cell_size", _gcIndex = -1},GodotProperty {_gpName = "cell_octant_size", _gcType = PrimitiveType IntType, _gcGetter = "get_octant_size", _gcSetter = "set_octant_size", _gcIndex = -1},GodotProperty {_gpName = "cell_center_x", _gcType = PrimitiveType BoolType, _gcGetter = "get_center_x", _gcSetter = "set_center_x", _gcIndex = -1},GodotProperty {_gpName = "cell_center_y", _gcType = PrimitiveType BoolType, _gcGetter = "get_center_y", _gcSetter = "set_center_y", _gcIndex = -1},GodotProperty {_gpName = "cell_center_z", _gcType = PrimitiveType BoolType, _gcGetter = "get_center_z", _gcSetter = "set_center_z", _gcIndex = -1},GodotProperty {_gpName = "cell_scale", _gcType = PrimitiveType FloatType, _gcGetter = "get_cell_scale", _gcSetter = "set_cell_scale", _gcIndex = -1},GodotProperty {_gpName = "collision_layer", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_layer", _gcSetter = "set_collision_layer", _gcIndex = -1},GodotProperty {_gpName = "collision_mask", _gcType = PrimitiveType IntType, _gcGetter = "get_collision_mask", _gcSetter = "set_collision_mask", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_collision_layer", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "layer", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mask", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_collision_mask_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_mask_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_collision_layer_bit", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_collision_layer_bit", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "bit", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_theme", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "theme", _gaType = CustomType "MeshLibrary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_theme", _gmReturnType = CustomType "MeshLibrary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_size", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_scale", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "scale", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_scale", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_octant_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_octant_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_cell_item", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "item", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "orientation", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "get_cell_item", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_cell_item_orientation", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "world_to_map", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pos", _gaType = CoreType "Vector3", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "map_to_world", _gmReturnType = CoreType "Vector3", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "x", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "y", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "z", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_update_octants_callback", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "resource_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_center_x", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_center_x", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_center_y", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_center_y", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_center_z", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_center_z", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_clip", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enabled", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "clipabove", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "True"},GodotArgument {_gaName = "floor", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "axis", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_used_cells", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_meshes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bake_meshes", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_bake_mesh_instance", _gmReturnType = CoreType "RID", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "clear_baked_meshes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "make_baked_meshes", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "gen_lightmap_uv", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "lightmap_uv_texel_size", _gaType = PrimitiveType FloatType, _gaDefaultValue = Just "0.1"}]}], _gcEnums = []},GodotClass {_gcName = "MobileVRInterface", _gcBaseClass = "ARVRInterface", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "iod", _gcType = PrimitiveType FloatType, _gcGetter = "get_iod", _gcSetter = "set_iod", _gcIndex = -1},GodotProperty {_gpName = "display_width", _gcType = PrimitiveType FloatType, _gcGetter = "get_display_width", _gcSetter = "set_display_width", _gcIndex = -1},GodotProperty {_gpName = "display_to_lens", _gcType = PrimitiveType FloatType, _gcGetter = "get_display_to_lens", _gcSetter = "set_display_to_lens", _gcIndex = -1},GodotProperty {_gpName = "oversample", _gcType = PrimitiveType FloatType, _gcGetter = "get_oversample", _gcSetter = "set_oversample", _gcIndex = -1},GodotProperty {_gpName = "k1", _gcType = PrimitiveType FloatType, _gcGetter = "get_k1", _gcSetter = "set_k1", _gcIndex = -1},GodotProperty {_gpName = "k2", _gcType = PrimitiveType FloatType, _gcGetter = "get_k2", _gcSetter = "set_k2", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_iod", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "iod", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_iod", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_display_width", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "display_width", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_display_width", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_display_to_lens", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "display_to_lens", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_display_to_lens", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_oversample", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "oversample", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_oversample", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_k1", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "k", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_k1", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_k2", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "k", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_k2", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "RegExMatch", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "subject", _gcType = CoreType "String", _gcGetter = "get_subject", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "names", _gcType = CoreType "Dictionary", _gcGetter = "get_names", _gcSetter = "", _gcIndex = -1},GodotProperty {_gpName = "strings", _gcType = CoreType "Array", _gcGetter = "get_strings", _gcSetter = "", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "get_subject", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_group_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_names", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_strings", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_string", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "Variant", _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "get_start", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "Variant", _gaDefaultValue = Just "0"}]},GodotMethod {_gmName = "get_end", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "Variant", _gaDefaultValue = Just "0"}]}], _gcEnums = []},GodotClass {_gcName = "RegEx", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "clear", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "compile", _gmReturnType = EnumType "enum.Error", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "pattern", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "search", _gmReturnType = CustomType "RegExMatch", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subject", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "end", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "search_all", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subject", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "end", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "sub", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "subject", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "replacement", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "all", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"},GodotArgument {_gaName = "offset", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "0"},GodotArgument {_gaName = "end", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "is_valid", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_pattern", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_group_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "get_names", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ResourceImporterOGGVorbis", _gcBaseClass = "ResourceImporter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "ResourceImporter", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "AudioStreamOGGVorbis", _gcBaseClass = "AudioStream", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "PoolByteArray", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1},GodotProperty {_gpName = "loop", _gcType = PrimitiveType BoolType, _gcGetter = "has_loop", _gcSetter = "set_loop", _gcIndex = -1},GodotProperty {_gpName = "loop_offset", _gcType = PrimitiveType FloatType, _gcGetter = "get_loop_offset", _gcSetter = "set_loop_offset", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "PoolByteArray", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "PoolByteArray", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_loop", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_loop_offset", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "seconds", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_loop_offset", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "ResourceImporterTheora", _gcBaseClass = "ResourceImporter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VideoStreamTheora", _gcBaseClass = "VideoStream", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "file", _gcType = CoreType "String", _gcGetter = "get_file", _gcSetter = "set_file", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScript", _gcBaseClass = "Script", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "data", _gcType = CoreType "Dictionary", _gcGetter = "_get_data", _gcSetter = "_set_data", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "node_ports_changed", _gsArguments = [GodotArgument {_gaName = "function", _gaType = CoreType "String", _gaDefaultValue = Just ""},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Just ""}]}], _gcMethods = [GodotMethod {_gmName = "_node_ports_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arg0", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_function", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_function", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_function", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_function", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "new_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_function_scroll", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "ofs", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_function_scroll", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "node", _gaType = CustomType "VisualScriptNode", _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Just "(0, 0)"}]},GodotMethod {_gmName = "remove_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_function_node_id", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node", _gmReturnType = CustomType "VisualScriptNode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_node", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_node_position", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "position", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_position", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "id", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "sequence_connect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_output", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "sequence_disconnect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_output", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_sequence_connection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_output", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "data_connect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "data_disconnect", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_data_connection", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "func", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "from_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_node", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "to_port", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_variable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "default_value", _gaType = CoreType "Variant", _gaDefaultValue = Just "Null"},GodotArgument {_gaName = "export", _gaType = PrimitiveType BoolType, _gaDefaultValue = Just "False"}]},GodotMethod {_gmName = "has_variable", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_variable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_variable_default_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_variable_default_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_variable_info", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_variable_info", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_variable_export", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_variable_export", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_variable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "new_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "add_custom_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "has_custom_signal", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_add_argument", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "argname", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Just "-1"}]},GodotMethod {_gmName = "custom_signal_set_argument_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_get_argument_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_set_argument_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "argname", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_get_argument_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_remove_argument", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_get_argument_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "custom_signal_swap_argument", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "argidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "withidx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_custom_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "rename_custom_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "new_name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "set_instance_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_set_data", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "data", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_data", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptNode", _gcBaseClass = "Resource", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "_default_input_values", _gcType = CoreType "Array", _gcGetter = "_get_default_input_values", _gcSetter = "_set_default_input_values", _gcIndex = -1}], _gcSignals = [GodotSignal {_gsName = "ports_changed", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "get_visual_script", _gmReturnType = CustomType "VisualScript", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_default_input_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "port_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_default_input_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "port_idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "ports_changed_notify", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_default_input_values", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "values", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_default_input_values", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptFunctionState", _gcBaseClass = "Reference", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "connect_to_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "obj", _gaType = CoreType "Object", _gaDefaultValue = Nothing},GodotArgument {_gaName = "signals", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "args", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "resume", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "args", _gaType = CoreType "Array", _gaDefaultValue = Just "Null"}]},GodotMethod {_gmName = "is_valid", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_signal_callback", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = True, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptFunction", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptOperator", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "operator", _gcType = PrimitiveType IntType, _gcGetter = "get_operator", _gcSetter = "set_operator", _gcIndex = -1},GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_typed", _gcSetter = "set_typed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_operator", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "op", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_operator", _gmReturnType = EnumType "enum.Variant::Operator", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_typed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_typed", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptVariableSet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "var_name", _gcType = CoreType "String", _gcGetter = "get_variable", _gcSetter = "set_variable", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_variable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_variable", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptVariableGet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "var_name", _gcType = CoreType "String", _gcGetter = "get_variable", _gcSetter = "set_variable", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_variable", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_variable", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptConstant", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_constant_type", _gcSetter = "set_constant_type", _gcIndex = -1},GodotProperty {_gpName = "value", _gcType = CoreType "Variant", _gcGetter = "get_constant_value", _gcSetter = "set_constant_value", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_constant_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_constant_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "value", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constant_value", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptIndexGet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptIndexSet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptGlobalConstant", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "constant", _gcType = PrimitiveType IntType, _gcGetter = "get_global_constant", _gcSetter = "set_global_constant", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_global_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_global_constant", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptClassConstant", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "constant", _gcType = CoreType "String", _gcGetter = "get_class_constant", _gcSetter = "set_class_constant", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_class_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_class_constant", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptMathConstant", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("MATH_CONSTANT_INF",6),("MATH_CONSTANT_MAX",8),("MATH_CONSTANT_HALF_PI",2),("MATH_CONSTANT_TAU",3),("MATH_CONSTANT_NAN",7),("MATH_CONSTANT_PI",1),("MATH_CONSTANT_ONE",0),("MATH_CONSTANT_SQRT2",5),("MATH_CONSTANT_E",4)], _gcProperties = [GodotProperty {_gpName = "constant", _gcType = PrimitiveType IntType, _gcGetter = "get_math_constant", _gcSetter = "set_math_constant", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_math_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "which", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_math_constant", _gmReturnType = EnumType "enum.VisualScriptMathConstant::MathConstant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "MathConstant", _geValues = fromList [("MATH_CONSTANT_INF",6),("MATH_CONSTANT_MAX",8),("MATH_CONSTANT_HALF_PI",2),("MATH_CONSTANT_TAU",3),("MATH_CONSTANT_NAN",7),("MATH_CONSTANT_PI",1),("MATH_CONSTANT_ONE",0),("MATH_CONSTANT_SQRT2",5),("MATH_CONSTANT_E",4)]}]},GodotClass {_gcName = "VisualScriptBasicTypeConstant", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "basic_type", _gcType = PrimitiveType IntType, _gcGetter = "get_basic_type", _gcSetter = "set_basic_type", _gcIndex = -1},GodotProperty {_gpName = "constant", _gcType = CoreType "String", _gcGetter = "get_basic_type_constant", _gcSetter = "set_basic_type_constant", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_basic_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_basic_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_basic_type_constant", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_basic_type_constant", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptEngineSingleton", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "constant", _gcType = CoreType "String", _gcGetter = "get_singleton", _gcSetter = "set_singleton", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_singleton", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_singleton", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptSceneNode", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "node_path", _gcType = CoreType "NodePath", _gcGetter = "get_node_path", _gcSetter = "set_node_path", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_node_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_node_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptSceneTree", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptResourcePath", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "path", _gcType = CoreType "String", _gcGetter = "get_resource_path", _gcSetter = "set_resource_path", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_resource_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_resource_path", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptSelf", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptCustomNode", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("STEP_PUSH_STACK_BIT",16777216),("START_MODE_RESUME_YIELD",2),("STEP_EXIT_FUNCTION_BIT",134217728),("STEP_YIELD_BIT",268435456),("STEP_NO_ADVANCE_BIT",67108864),("START_MODE_BEGIN_SEQUENCE",0),("START_MODE_CONTINUE_SEQUENCE",1),("STEP_GO_BACK_BIT",33554432)], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_get_output_sequence_port_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_has_input_sequence_port", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_output_sequence_port_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_input_value_port_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_output_value_port_count", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_input_value_port_type", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_input_value_port_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_output_value_port_type", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_output_value_port_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "idx", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_caption", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_text", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_category", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_get_working_memory_size", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_step", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "inputs", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "outputs", _gaType = CoreType "Array", _gaDefaultValue = Nothing},GodotArgument {_gaName = "start_mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing},GodotArgument {_gaName = "working_mem", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_script_changed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "StartMode", _geValues = fromList [("START_MODE_RESUME_YIELD",2),("START_MODE_BEGIN_SEQUENCE",0),("START_MODE_CONTINUE_SEQUENCE",1)]}]},GodotClass {_gcName = "VisualScriptSubCall", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "_subcall", _gmReturnType = CoreType "Variant", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "arguments", _gaType = CoreType "Variant", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "VisualScriptComment", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "title", _gcType = CoreType "String", _gcGetter = "get_title", _gcSetter = "set_title", _gcIndex = -1},GodotProperty {_gpName = "description", _gcType = CoreType "String", _gcGetter = "get_description", _gcSetter = "set_description", _gcIndex = -1},GodotProperty {_gpName = "size", _gcType = CoreType "Vector2", _gcGetter = "get_size", _gcSetter = "set_size", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_title", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "title", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_title", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_description", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "description", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_description", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_size", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "size", _gaType = CoreType "Vector2", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_size", _gmReturnType = CoreType "Vector2", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptConstructor", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_constructor_type", _gcSetter = "set_constructor_type", _gcIndex = -1},GodotProperty {_gpName = "constructor", _gcType = CoreType "Dictionary", _gcGetter = "get_constructor", _gcSetter = "set_constructor", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_constructor_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constructor_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_constructor", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "constructor", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_constructor", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptLocalVar", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "var_name", _gcType = CoreType "String", _gcGetter = "get_var_name", _gcSetter = "set_var_name", _gcIndex = -1},GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_var_type", _gcSetter = "set_var_type", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_var_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_var_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_var_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_var_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptLocalVarSet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "var_name", _gcType = CoreType "String", _gcGetter = "get_var_name", _gcSetter = "set_var_name", _gcIndex = -1},GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_var_type", _gcSetter = "set_var_type", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_var_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_var_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_var_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_var_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptInputAction", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("MODE_PRESSED",0),("MODE_JUST_PRESSED",2),("MODE_JUST_RELEASED",3),("MODE_RELEASED",1)], _gcProperties = [GodotProperty {_gpName = "action", _gcType = CoreType "String", _gcGetter = "get_action_name", _gcSetter = "set_action_name", _gcIndex = -1},GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_action_mode", _gcSetter = "set_action_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_action_name", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action_name", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_action_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_action_mode", _gmReturnType = EnumType "enum.VisualScriptInputAction::Mode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "Mode", _geValues = fromList [("MODE_PRESSED",0),("MODE_JUST_PRESSED",2),("MODE_JUST_RELEASED",3),("MODE_RELEASED",1)]}]},GodotClass {_gcName = "VisualScriptDeconstruct", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_deconstruct_type", _gcSetter = "set_deconstruct_type", _gcIndex = -1},GodotProperty {_gpName = "elem_cache", _gcType = CoreType "Array", _gcGetter = "_get_elem_cache", _gcSetter = "_set_elem_cache", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_deconstruct_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_deconstruct_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_elem_cache", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "_cache", _gaType = CoreType "Array", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_elem_cache", _gmReturnType = CoreType "Array", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptPreload", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "resource", _gcType = CustomType "Resource", _gcGetter = "get_preload", _gcSetter = "set_preload", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_preload", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "resource", _gaType = CustomType "Resource", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_preload", _gmReturnType = CustomType "Resource", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptTypeCast", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "base_script", _gcType = CoreType "String", _gcGetter = "get_base_script", _gcSetter = "set_base_script", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "path", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_script", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptFunctionCall", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("CALL_MODE_BASIC_TYPE",3),("RPC_UNRELIABLE_TO_ID",4),("CALL_MODE_NODE_PATH",1),("RPC_UNRELIABLE",2),("CALL_MODE_SELF",0),("RPC_RELIABLE_TO_ID",3),("CALL_MODE_INSTANCE",2),("CALL_MODE_SINGLETON",4),("RPC_DISABLED",0),("RPC_RELIABLE",1)], _gcProperties = [GodotProperty {_gpName = "call_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_call_mode", _gcSetter = "set_call_mode", _gcIndex = -1},GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "base_script", _gcType = CoreType "String", _gcGetter = "get_base_script", _gcSetter = "set_base_script", _gcIndex = -1},GodotProperty {_gpName = "singleton", _gcType = CoreType "String", _gcGetter = "get_singleton", _gcSetter = "set_singleton", _gcIndex = -1},GodotProperty {_gpName = "basic_type", _gcType = PrimitiveType IntType, _gcGetter = "get_basic_type", _gcSetter = "set_basic_type", _gcIndex = -1},GodotProperty {_gpName = "node_path", _gcType = CoreType "NodePath", _gcGetter = "get_base_path", _gcSetter = "set_base_path", _gcIndex = -1},GodotProperty {_gpName = "argument_cache", _gcType = CoreType "Dictionary", _gcGetter = "_get_argument_cache", _gcSetter = "_set_argument_cache", _gcIndex = -1},GodotProperty {_gpName = "function", _gcType = CoreType "String", _gcGetter = "get_function", _gcSetter = "set_function", _gcIndex = -1},GodotProperty {_gpName = "use_default_args", _gcType = PrimitiveType IntType, _gcGetter = "get_use_default_args", _gcSetter = "set_use_default_args", _gcIndex = -1},GodotProperty {_gpName = "validate", _gcType = PrimitiveType BoolType, _gcGetter = "get_validate", _gcSetter = "set_validate", _gcIndex = -1},GodotProperty {_gpName = "rpc_call_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_rpc_call_mode", _gcSetter = "set_rpc_call_mode", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_script", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_script", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_basic_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "basic_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_basic_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_singleton", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "singleton", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_singleton", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_function", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "function", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_function", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_call_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_call_mode", _gmReturnType = EnumType "enum.VisualScriptFunctionCall::CallMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_use_default_args", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "amount", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_use_default_args", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_argument_cache", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "argument_cache", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_argument_cache", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_rpc_call_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_rpc_call_mode", _gmReturnType = EnumType "enum.VisualScriptFunctionCall::RPCCallMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_validate", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_validate", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "RPCCallMode", _geValues = fromList [("RPC_UNRELIABLE_TO_ID",4),("RPC_UNRELIABLE",2),("RPC_RELIABLE_TO_ID",3),("RPC_DISABLED",0),("RPC_RELIABLE",1)]},GodotEnum {_geName = CustomType "CallMode", _geValues = fromList [("CALL_MODE_BASIC_TYPE",3),("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2),("CALL_MODE_SINGLETON",4)]}]},GodotClass {_gcName = "VisualScriptPropertySet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("CALL_MODE_BASIC_TYPE",3),("ASSIGN_OP_SHIFT_LEFT",6),("ASSIGN_OP_DIV",4),("ASSIGN_OP_MOD",5),("CALL_MODE_NODE_PATH",1),("ASSIGN_OP_BIT_OR",9),("ASSIGN_OP_SHIFT_RIGHT",7),("ASSIGN_OP_NONE",0),("ASSIGN_OP_ADD",1),("ASSIGN_OP_MUL",3),("ASSIGN_OP_SUB",2),("ASSIGN_OP_BIT_AND",8),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2),("ASSIGN_OP_BIT_XOR",10)], _gcProperties = [GodotProperty {_gpName = "set_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_call_mode", _gcSetter = "set_call_mode", _gcIndex = -1},GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "base_script", _gcType = CoreType "String", _gcGetter = "get_base_script", _gcSetter = "set_base_script", _gcIndex = -1},GodotProperty {_gpName = "type_cache", _gcType = PrimitiveType IntType, _gcGetter = "_get_type_cache", _gcSetter = "_set_type_cache", _gcIndex = -1},GodotProperty {_gpName = "basic_type", _gcType = PrimitiveType IntType, _gcGetter = "get_basic_type", _gcSetter = "set_basic_type", _gcIndex = -1},GodotProperty {_gpName = "node_path", _gcType = CoreType "NodePath", _gcGetter = "get_base_path", _gcSetter = "set_base_path", _gcIndex = -1},GodotProperty {_gpName = "property", _gcType = CoreType "String", _gcGetter = "get_property", _gcSetter = "set_property", _gcIndex = -1},GodotProperty {_gpName = "index", _gcType = CoreType "String", _gcGetter = "get_index", _gcSetter = "set_index", _gcIndex = -1},GodotProperty {_gpName = "assign_op", _gcType = PrimitiveType IntType, _gcGetter = "get_assign_op", _gcSetter = "set_assign_op", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_script", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_script", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_basic_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "basic_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_basic_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_type_cache", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type_cache", _gaType = CoreType "Dictionary", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_type_cache", _gmReturnType = CoreType "Dictionary", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_property", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_property", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_call_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_call_mode", _gmReturnType = EnumType "enum.VisualScriptPropertySet::CallMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_index", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_assign_op", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "assign_op", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_assign_op", _gmReturnType = EnumType "enum.VisualScriptPropertySet::AssignOp", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "AssignOp", _geValues = fromList [("ASSIGN_OP_SHIFT_LEFT",6),("ASSIGN_OP_DIV",4),("ASSIGN_OP_MOD",5),("ASSIGN_OP_BIT_OR",9),("ASSIGN_OP_SHIFT_RIGHT",7),("ASSIGN_OP_NONE",0),("ASSIGN_OP_ADD",1),("ASSIGN_OP_MUL",3),("ASSIGN_OP_SUB",2),("ASSIGN_OP_BIT_AND",8),("ASSIGN_OP_BIT_XOR",10)]},GodotEnum {_geName = CustomType "CallMode", _geValues = fromList [("CALL_MODE_BASIC_TYPE",3),("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2)]}]},GodotClass {_gcName = "VisualScriptPropertyGet", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2)], _gcProperties = [GodotProperty {_gpName = "set_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_call_mode", _gcSetter = "set_call_mode", _gcIndex = -1},GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "base_script", _gcType = CoreType "String", _gcGetter = "get_base_script", _gcSetter = "set_base_script", _gcIndex = -1},GodotProperty {_gpName = "type_cache", _gcType = PrimitiveType IntType, _gcGetter = "_get_type_cache", _gcSetter = "_set_type_cache", _gcIndex = -1},GodotProperty {_gpName = "basic_type", _gcType = PrimitiveType IntType, _gcGetter = "get_basic_type", _gcSetter = "set_basic_type", _gcIndex = -1},GodotProperty {_gpName = "node_path", _gcType = CoreType "NodePath", _gcGetter = "get_base_path", _gcSetter = "set_base_path", _gcIndex = -1},GodotProperty {_gpName = "property", _gcType = CoreType "String", _gcGetter = "get_property", _gcSetter = "set_property", _gcIndex = -1},GodotProperty {_gpName = "index", _gcType = CoreType "String", _gcGetter = "get_index", _gcSetter = "set_index", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_script", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_script", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_script", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_basic_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "basic_type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_basic_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "_set_type_cache", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type_cache", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "_get_type_cache", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = True, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_property", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "property", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_property", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_call_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_call_mode", _gmReturnType = EnumType "enum.VisualScriptPropertyGet::CallMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_index", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "index", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_index", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "CallMode", _geValues = fromList [("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2)]}]},GodotClass {_gcName = "VisualScriptEmitSignal", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "signal", _gcType = CoreType "String", _gcGetter = "get_signal", _gcSetter = "set_signal", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_signal", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptReturn", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "return_enabled", _gcType = PrimitiveType BoolType, _gcGetter = "is_return_value_enabled", _gcSetter = "set_enable_return_value", _gcIndex = -1},GodotProperty {_gpName = "return_type", _gcType = PrimitiveType IntType, _gcGetter = "get_return_type", _gcSetter = "set_return_type", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_return_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_return_type", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_enable_return_value", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "enable", _gaType = PrimitiveType BoolType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "is_return_value_enabled", _gmReturnType = PrimitiveType BoolType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptCondition", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptWhile", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptIterator", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptSequence", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "steps", _gcType = PrimitiveType IntType, _gcGetter = "get_steps", _gcSetter = "set_steps", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_steps", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "steps", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_steps", _gmReturnType = PrimitiveType IntType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptSwitch", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VisualScriptSelect", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "type", _gcType = PrimitiveType IntType, _gcGetter = "get_typed", _gcSetter = "set_typed", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_typed", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "type", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_typed", _gmReturnType = EnumType "enum.Variant::Type", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "VisualScriptYield", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("YIELD_FRAME",1),("YIELD_PHYSICS_FRAME",2),("YIELD_WAIT",3)], _gcProperties = [GodotProperty {_gpName = "mode", _gcType = PrimitiveType IntType, _gcGetter = "get_yield_mode", _gcSetter = "set_yield_mode", _gcIndex = -1},GodotProperty {_gpName = "wait_time", _gcType = PrimitiveType FloatType, _gcGetter = "get_wait_time", _gcSetter = "set_wait_time", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_yield_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_yield_mode", _gmReturnType = EnumType "enum.VisualScriptYield::YieldMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_wait_time", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "sec", _gaType = PrimitiveType FloatType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_wait_time", _gmReturnType = PrimitiveType FloatType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "YieldMode", _geValues = fromList [("YIELD_FRAME",1),("YIELD_PHYSICS_FRAME",2),("YIELD_WAIT",3)]}]},GodotClass {_gcName = "VisualScriptYieldSignal", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2)], _gcProperties = [GodotProperty {_gpName = "call_mode", _gcType = PrimitiveType IntType, _gcGetter = "get_call_mode", _gcSetter = "set_call_mode", _gcIndex = -1},GodotProperty {_gpName = "base_type", _gcType = CoreType "String", _gcGetter = "get_base_type", _gcSetter = "set_base_type", _gcIndex = -1},GodotProperty {_gpName = "node_path", _gcType = CoreType "NodePath", _gcGetter = "get_base_path", _gcSetter = "set_base_path", _gcIndex = -1},GodotProperty {_gpName = "signal", _gcType = CoreType "String", _gcGetter = "get_signal", _gcSetter = "set_signal", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_base_type", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_type", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_type", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_signal", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "signal", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_signal", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_call_mode", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "mode", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_call_mode", _gmReturnType = EnumType "enum.VisualScriptYieldSignal::CallMode", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []},GodotMethod {_gmName = "set_base_path", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "base_path", _gaType = CoreType "NodePath", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_base_path", _gmReturnType = CoreType "NodePath", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = True, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "CallMode", _geValues = fromList [("CALL_MODE_NODE_PATH",1),("CALL_MODE_SELF",0),("CALL_MODE_INSTANCE",2)]}]},GodotClass {_gcName = "VisualScriptBuiltinFunc", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [("MATH_RAD2DEG",37),("MATH_TAN",2),("MATH_DEG2RAD",36),("MATH_LERP",26),("MATH_ISINF",22),("MATH_ATAN2",9),("TYPE_EXISTS",52),("MATH_WRAPF",43),("MATH_ATAN",8),("MATH_COSH",4),("MATH_SEED",34),("TYPE_CONVERT",50),("LOGIC_MIN",45),("MATH_STEPIFY",25),("COLORN",62),("MATH_SQRT",10),("TEXT_PRINT",55),("MATH_DB2LINEAR",39),("MATH_RAND",31),("FUNC_FUNCREF",49),("LOGIC_NEAREST_PO2",47),("OBJ_WEAKREF",48),("MATH_CARTESIAN2POLAR",41),("MATH_POLAR2CARTESIAN",40),("MATH_ISNAN",21),("MATH_CEIL",14),("MATH_SIGN",17),("MATH_TANH",5),("MATH_RANDOM",33),("MATH_RANGE_LERP",28),("MATH_FMOD",11),("MATH_DECIMALS",24),("VAR_TO_BYTES",60),("MATH_ABS",16),("TEXT_STR",54),("BYTES_TO_VAR",61),("MATH_FLOOR",13),("TEXT_PRINTRAW",57),("MATH_POW",18),("LOGIC_CLAMP",46),("MATH_EXP",20),("TEXT_CHAR",53),("MATH_RANDOMIZE",30),("MATH_ASIN",6),("FUNC_MAX",63),("LOGIC_MAX",44),("MATH_EASE",23),("MATH_ROUND",15),("MATH_RANDF",32),("MATH_DECTIME",29),("MATH_COS",1),("MATH_SIN",0),("VAR_TO_STR",58),("MATH_SINH",3),("STR_TO_VAR",59),("MATH_INVERSE_LERP",27),("MATH_FPOSMOD",12),("MATH_WRAP",42),("MATH_LOG",19),("TYPE_OF",51),("TEXT_PRINTERR",56),("MATH_LINEAR2DB",38),("MATH_ACOS",7),("MATH_RANDSEED",35)], _gcProperties = [GodotProperty {_gpName = "function", _gcType = PrimitiveType IntType, _gcGetter = "get_func", _gcSetter = "set_func", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_func", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "which", _gaType = PrimitiveType IntType, _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_func", _gmReturnType = EnumType "enum.VisualScriptBuiltinFunc::BuiltinFunc", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = [GodotEnum {_geName = CustomType "BuiltinFunc", _geValues = fromList [("MATH_RAD2DEG",37),("MATH_TAN",2),("MATH_DEG2RAD",36),("MATH_LERP",26),("MATH_ISINF",22),("MATH_ATAN2",9),("TYPE_EXISTS",52),("MATH_WRAPF",43),("MATH_ATAN",8),("MATH_COSH",4),("MATH_SEED",34),("TYPE_CONVERT",50),("LOGIC_MIN",45),("MATH_STEPIFY",25),("COLORN",62),("MATH_SQRT",10),("TEXT_PRINT",55),("MATH_DB2LINEAR",39),("MATH_RAND",31),("FUNC_FUNCREF",49),("LOGIC_NEAREST_PO2",47),("OBJ_WEAKREF",48),("MATH_CARTESIAN2POLAR",41),("MATH_POLAR2CARTESIAN",40),("MATH_ISNAN",21),("MATH_CEIL",14),("MATH_SIGN",17),("MATH_TANH",5),("MATH_RANDOM",33),("MATH_RANGE_LERP",28),("MATH_FMOD",11),("MATH_DECIMALS",24),("VAR_TO_BYTES",60),("MATH_ABS",16),("TEXT_STR",54),("BYTES_TO_VAR",61),("MATH_FLOOR",13),("TEXT_PRINTRAW",57),("MATH_POW",18),("LOGIC_CLAMP",46),("MATH_EXP",20),("TEXT_CHAR",53),("MATH_RANDOMIZE",30),("MATH_ASIN",6),("FUNC_MAX",63),("LOGIC_MAX",44),("MATH_EASE",23),("MATH_ROUND",15),("MATH_RANDF",32),("MATH_DECTIME",29),("MATH_COS",1),("MATH_SIN",0),("VAR_TO_STR",58),("MATH_SINH",3),("STR_TO_VAR",59),("MATH_INVERSE_LERP",27),("MATH_FPOSMOD",12),("MATH_WRAP",42),("MATH_LOG",19),("TYPE_OF",51),("TEXT_PRINTERR",56),("MATH_LINEAR2DB",38),("MATH_ACOS",7),("MATH_RANDSEED",35)]}]},GodotClass {_gcName = "VisualScriptExpression", _gcBaseClass = "VisualScriptNode", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Physics2DDirectBodyStateSW", _gcBaseClass = "Physics2DDirectBodyState", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "_VisualScriptEditor", _gcBaseClass = "Object", _gcApiType = "core", _gcSingleton = True, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [GodotSignal {_gsName = "custom_nodes_updated", _gsArguments = []}], _gcMethods = [GodotMethod {_gmName = "add_custom_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "category", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "script", _gaType = CustomType "Script", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "remove_custom_node", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "name", _gaType = CoreType "String", _gaDefaultValue = Nothing},GodotArgument {_gaName = "category", _gaType = CoreType "String", _gaDefaultValue = Nothing}]}], _gcEnums = []},GodotClass {_gcName = "ResourceImporterWebm", _gcBaseClass = "ResourceImporter", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "VideoStreamWebm", _gcBaseClass = "VideoStream", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = True, _gcIsReference = True, _gcConstants = fromList [], _gcProperties = [GodotProperty {_gpName = "file", _gcType = CoreType "String", _gcGetter = "get_file", _gcSetter = "set_file", _gcIndex = -1}], _gcSignals = [], _gcMethods = [GodotMethod {_gmName = "set_file", _gmReturnType = PrimitiveType VoidType, _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = [GodotArgument {_gaName = "file", _gaType = CoreType "String", _gaDefaultValue = Nothing}]},GodotMethod {_gmName = "get_file", _gmReturnType = CoreType "String", _gmIsEditor = False, _gmIsNoscript = False, _gmIsConst = False, _gmIsReverse = False, _gmIsVirtual = False, _gmHasVarargs = False, _gmIsFromScript = False, _gmArguments = []}], _gcEnums = []},GodotClass {_gcName = "BulletPhysicsServer", _gcBaseClass = "PhysicsServer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "BulletPhysicsDirectBodyState", _gcBaseClass = "PhysicsDirectBodyState", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []},GodotClass {_gcName = "Physics2DServerSW", _gcBaseClass = "Physics2DServer", _gcApiType = "core", _gcSingleton = False, _gcInstanciable = False, _gcIsReference = False, _gcConstants = fromList [], _gcProperties = [], _gcSignals = [], _gcMethods = [], _gcEnums = []}]
Godot.Core.GodotGraphNode
Godot.Core.GodotAudioStreamSample
Godot.Core.GodotVisualScriptResourcePath
Godot.Core.GodotWorld2D
Godot.Core.GodotMeshLibrary
Godot.Core.GodotInputEventAction
Godot.Core.GodotPopupPanel
Godot.Core.GodotGIProbeData
Godot.Tools.GodotEditorExportPlugin
Godot.Core.GodotCapsuleShape2D
Godot.Core.GodotHScrollBar
Godot.Core.GodotVBoxContainer
Godot.Core.GodotConfigFile
Godot.Core.GodotSpatialGizmo
Godot.Core.GodotGIProbe
Godot.Core.GodotViewport
Godot.Core.GodotPhysicsShapeQueryParameters
Godot.Core.GodotIP_Unix
Godot.Core.GodotPhysics2DTestMotionResult
Godot.Core.GodotGridMap
Godot.Core.GodotGDScript
Godot.Core.GodotAtlasTexture
Godot.Core.GodotProgressBar
Godot.Core.Godot_ResourceLoader
Godot.Core.GodotAudioEffectDelay
Godot.Core.GodotVisualScriptSequence
Godot.Core.GodotNavigation2D
Godot.Core.GodotCenterContainer
Godot.Core.GodotAudioEffectPhaser
Godot.Core.GodotStyleBoxLine
Godot.Core.GodotAudioEffectAmplify
Godot.Core.GodotTouchScreenButton
Godot.Core.GodotBulletPhysicsDirectBodyState
Godot.Core.GodotGridContainer
Godot.Core.GodotRigidBody2D
Godot.Core.GodotScript
Godot.Core.Godot_ClassDB
Godot.Core.GodotRayCast
Godot.Core.GodotFuncRef
Godot.Tools.GodotEditorFileDialog
Godot.Core.GodotNavigationPolygonInstance
Godot.Core.GodotAudioEffectPitchShift
Godot.Core.GodotWorldEnvironment
Godot.Core.GodotConfirmationDialog
Godot.Core.GodotControl
Godot.Core.GodotAudioStreamRandomPitch
Godot.Core.GodotLineShape2D
Godot.Core.GodotVisualScriptSelf
Godot.Core.GodotNetworkedMultiplayerPeer
Godot.Core.GodotPackedDataContainer
Godot.Core.GodotTimer
Godot.Core.GodotNetworkedMultiplayerENet
Godot.Core.GodotBoneAttachment
Godot.Core.GodotImage
Godot.Core.GodotTexture
Godot.Core.GodotArea
Godot.Core.GodotShaderMaterial
Godot.Core.GodotPrimitiveMesh
Godot.Core.GodotWorld
Godot.Core.GodotVisualScriptPropertyGet
Godot.Core.GodotNinePatchRect
Godot.Tools.GodotEditorResourceConversionPlugin
Godot.Core.GodotPopup
Godot.Core.GodotAudioStream
Godot.Core.GodotGDNative
Godot.Core.GodotTextureProgress
Godot.Core.GodotMeshInstance
Godot.Core.GodotPhysics2DShapeQueryParameters
Godot.Core.GodotVisualScriptEngineSingleton
Godot.Core.GodotSpatial
Godot.Core.GodotBoxContainer
Godot.Core.GodotAudioEffectCompressor
Godot.Core.GodotBoxShape
Godot.Core.GodotCubeMesh
Godot.Core.GodotInputMap
Godot.Core.GodotInterpolatedCamera
Godot.Core.GodotNavigation
Godot.Core.GodotARVRServer
Godot.Tools.GodotEditorResourcePreviewGenerator
Godot.Core.GodotCapsuleShape
Godot.Core.GodotResourceImporterWebm
Godot.Core.GodotInputEventKey
Godot.Core.GodotHSplitContainer
Godot.Core.GodotSeparator
Godot.Core.GodotEnvironment
Godot.Core.GodotVisualScriptMathConstant
Godot.Core.GodotRegEx
Godot.Core.GodotVisualScriptSceneNode
Godot.Core.GodotAudioEffectEQ
Godot.Core.GodotCanvasItem
Godot.Core.Godot_Geometry
Godot.Core.GodotPhysicsBody2D
Godot.Core.GodotGDNativeLibrary
Godot.Core.Godot_Semaphore
Godot.Core.GodotRayShape
Godot.Core.GodotOptionButton
Godot.Core.GodotInputEventMouseMotion
Godot.Core.GodotInputEventMouseButton
Godot.Core.GodotPath
Godot.Core.GodotTCP_Server
Godot.Core.GodotInputEventGesture
Godot.Core.GodotSlider
Godot.Core.GodotVisualInstance
Godot.Core.GodotVisualScriptSubCall
Godot.Core.GodotTween
Godot.Tools.GodotEditorSceneImporter
Godot.Core.GodotVideoStream
Godot.Core.GodotKinematicBody2D
Godot.Core.GodotStaticBody
Godot.Core.GodotNode
Godot.Core.GodotRemoteTransform
Godot.Core.GodotVideoStreamTheora
Godot.Core.GodotGraphEdit
Godot.Core.GodotCurveTexture
Godot.Core.GodotTileMap
Godot.Tools.GodotEditorPlugin
Godot.Core.GodotVisualScriptEmitSignal
Godot.Core.GodotProjectSettings
Godot.Core.GodotPerformance
Godot.Core.GodotLight2D
Godot.Core.GodotNavigationMeshInstance
Godot.Core.GodotBulletPhysicsServer
Godot.Core.GodotAudioBusLayout
Godot.Core.GodotCheckButton
Godot.Core.GodotCurve3D
Godot.Core.GodotCanvasLayer
Godot.Core.GodotMaterial
Godot.Core.GodotKinematicBody
Godot.Core.GodotMultiMeshInstance
Godot.Core.GodotVisualScriptVariableGet
Godot.Core.GodotVSlider
Godot.Core.GodotPath2D
Godot.Core.GodotBitMap
Godot.Core.GodotTreeItem
Godot.Core.GodotBakedLightmap
Godot.Core.GodotStreamTexture
Godot.Core.GodotResourceInteractiveLoader
Godot.Core.GodotRayShape2D
Godot.Core.GodotJavaScript
Godot.Core.GodotColorPicker
Godot.Core.GodotHingeJoint
Godot.Core.GodotPhysicsBody
Godot.Core.GodotVisualScriptIndexGet
Godot.Core.GodotVisualScriptClassConstant
Godot.Core.GodotVisualScriptInputAction
Godot.Core.GodotVisualScriptSelect
Godot.Core.GodotGeometryInstance
Godot.Core.GodotBakedLightmapData
Godot.Core.GodotVisualScriptLocalVar
Godot.Core.GodotVSeparator
Godot.Core.GodotProxyTexture
Godot.Core.GodotImmediateGeometry
Godot.Tools.GodotEditorFileSystemDirectory
Godot.Core.GodotYSort
Godot.Core.GodotAnimationTreePlayer
Godot.Core.GodotSliderJoint
Godot.Core.GodotRichTextLabel
Godot.Core.GodotInputEventScreenTouch
Godot.Core.GodotReference
Godot.Core.Godot_OS
Godot.Core.GodotViewportTexture
Godot.Core.GodotAudioEffectEQ21
Godot.Core.GodotGradient
Godot.Core.GodotPCKPacker
Godot.Core.Godot_Directory
Godot.Core.GodotTree
Godot.Core.GodotVisualScriptYield
Godot.Core.GodotConcavePolygonShape2D
Godot.Core.GodotJoint
Godot.Core.GodotGlobalConstants
Godot.Core.GodotAnimatedSprite
Godot.Core.GodotNavigationPolygon
Godot.Core.GodotStreamPeerBuffer
Godot.Core.GodotVisualScriptPropertySet
Godot.Core.GodotPackedScene
Godot.Core.GodotDynamicFont
Godot.Core.GodotARVRAnchor
Godot.Core.GodotGrooveJoint2D
Godot.Core.GodotToolButton
Godot.Core.GodotInput
Godot.Core.GodotFileDialog
Godot.Core.GodotPacketPeerStream
Godot.Core.GodotButton
Godot.Core.GodotXMLParser
Godot.Core.GodotVisualScriptTypeCast
Godot.Core.GodotLinkButton
Godot.Tools.GodotEditorScript
Godot.Tools.GodotScriptEditor
Godot.Core.GodotPluginScript
Godot.Core.GodotSprite3D
Godot.Core.GodotSpotLight
Godot.Core.GodotTileSet
Godot.Core.GodotInputEventMagnifyGesture
Godot.Core.GodotDirectionalLight
Godot.Core.GodotPhysicsServer
Godot.Core.GodotCapsuleMesh
Godot.Core.GodotPrismMesh
Godot.Core.GodotDynamicFontData
Godot.Core.GodotIP
Godot.Core.Godot_Engine
Godot.Core.GodotVisualServer
Godot.Core.GodotHTTPRequest
Godot.Core.GodotHTTPClient
Godot.Tools.GodotEditorResourcePreview
Godot.Core.GodotVisualScriptExpression
Godot.Core.GodotSpatialMaterial
Godot.Core.GodotSceneState
Godot.Core.GodotPopupMenu
Godot.Core.GodotCylinderMesh
Godot.Core.GodotSprite
Godot.Core.GodotGDScriptFunctionState
Godot.Core.GodotSkeleton
Godot.Core.GodotWeakRef
Godot.Core.GodotAnimatedSprite3D
Godot.Core.GodotShader
Godot.Core.GodotArea2D
Godot.Core.GodotRigidBody
Godot.Core.GodotMarginContainer
Godot.Core.GodotAudioEffectStereoEnhance
Godot.Core.GodotVisualScriptIterator
Godot.Core.GodotRayCast2D
Godot.Core.GodotAudioEffect
Godot.Core.GodotTextEdit
Godot.Core.GodotAudioEffectLowShelfFilter
Godot.Core.GodotCollisionPolygon2D
Godot.Core.GodotResourceImporterOGGVorbis
Godot.Core.GodotConeTwistJoint
Godot.Core.GodotVisibilityNotifier2D
Godot.Tools.GodotEditorInterface
Godot.Core.GodotParticlesMaterial
Godot.Tools.GodotEditorSettings
Godot.Core.GodotWindowDialog
Godot.Core.GodotAudioEffectLowPassFilter
Godot.Core.GodotGeneric6DOFJoint
Godot.Core.GodotVisualScriptBuiltinFunc
Godot.Core.GodotUndoRedo
Godot.Core.GodotJSONParseResult
Godot.Core.GodotInputEventWithModifiers
Godot.Core.GodotResourcePreloader
Godot.Core.GodotScrollBar
Godot.Core.GodotTabs
Godot.Core.GodotAudioEffectEQ10
Godot.Core.GodotPhysics2DServerSW
Godot.Methods
Godot.Core.GodotPathFollow
Godot.Core.GodotVisualScriptWhile
Godot.Core.GodotProceduralSky
Godot.Core.GodotConvexPolygonShape2D
Godot.Core.GodotVisualScriptIndexSet
Godot.Core.GodotStyleBoxEmpty
Godot.Core.Godot_JSON
Godot.Core.GodotOccluderPolygon2D
Godot.Core.GodotRange
Godot.Core.GodotTextureRect
Godot.Core.GodotAudioEffectNotchFilter
Godot.Core.GodotSceneTreeTimer
Godot.Core.GodotMainLoop
Godot.Core.GodotVisualScriptBasicTypeConstant
Godot.Core.GodotParticles
Godot.Core.GodotAudioEffectPanner
Godot.Core.GodotPosition2D
Godot.Core.GodotCamera2D
Godot.Core.GodotPhysicsShapeQueryResult
Godot.Core.GodotVisualScriptVariableSet
Godot.Core.GodotAudioStreamPlayer2D
Godot.Core.GodotPhysics2DDirectBodyState
Godot.Core.GodotSpriteFrames
Godot.Core.GodotCurve
Godot.Core.GodotVisualScriptDeconstruct
Godot.Core.GodotCollisionShape2D
Godot.Core.GodotCanvasModulate
Godot.Core.GodotShape
Godot.Core.GodotPinJoint2D
Godot.Core.GodotContainer
Godot.Core.GodotItemList
Godot.Core.GodotSphereMesh
Godot.Core.GodotPolygon2D
Godot.Core.GodotVisualScriptPreload
Godot.Core.GodotConvexPolygonShape
Godot.Core.GodotSegmentShape2D
Godot.Core.GodotPathFollow2D
Godot.Core.GodotLargeTexture
Godot.Core.GodotHBoxContainer
Godot.Core.GodotPopupDialog
Godot.Core.GodotInputEvent
Godot.Tools.GodotEditorScenePostImport
Godot.Core.GodotMultiMesh
Godot.Core.GodotCollisionPolygon
Godot.Core.GodotInputEventPanGesture
Godot.Core.GodotArrayMesh
Godot.Core.GodotARVRInterface
Godot.Core.GodotQuadMesh
Godot.Core.GodotVideoPlayer
Godot.Tools.GodotEditorFileSystem
Godot.Core.GodotStreamPeerSSL
Godot.Core.GodotProximityGroup
Godot.Core.GodotResource
Godot.Core.GodotInstancePlaceholder
Godot.Core.GodotVisibilityNotifier
Godot.Core.GodotLineEdit
Godot.Core.GodotScrollContainer
Godot.Core.GodotAudioEffectDistortion
Godot.Core.GodotPacketPeer
Godot.Core.GodotStyleBox
Godot.Core.GodotVScrollBar
Godot.Core.GodotPhysicsDirectSpaceState
Godot.Core.GodotSpatialVelocityTracker
Godot.Core.GodotVisibilityEnabler
Godot.Core.GodotCollisionObject2D
Godot.Core.GodotInputEventJoypadMotion
Godot.Core.GodotSurfaceTool
Godot.Core.GodotStyleBoxTexture
Godot.Core.GodotCubeMap
Godot.Core.GodotResourceImporterTheora
Godot.Core.GodotColorPickerButton
Godot.Core.GodotParallaxBackground
Godot.Core.Godot_VisualScriptEditor
Godot.Tools.GodotEditorSpatialGizmo
Godot.Core.GodotColorRect
Godot.Core.GodotTriangleMesh
Godot.Core.GodotHSeparator
Godot.Core.GodotAnimationPlayer
Godot.Tools.GodotEditorImportPlugin
Godot.Core.GodotSplitContainer
Godot.Core.GodotObject
Godot.Core.GodotAudioStreamPlayback
Godot.Core.GodotAStar
Godot.Core.GodotAudioEffectBandLimitFilter
Godot.Core.GodotLightOccluder2D
Godot.Core.GodotHSlider
Godot.Core.GodotAudioEffectReverb
Godot.Core.GodotVisualScriptConstant
Godot.Core.GodotReflectionProbe
Godot.Core.GodotKinematicCollision
Godot.Core.GodotMenuButton
Godot.Core.GodotInputEventJoypadButton
Godot.Core.GodotInputDefault
Godot.Core.GodotStyleBoxFlat
Godot.Core.GodotPlaneMesh
Godot.Core.GodotJoint2D
Godot.Core.GodotSceneTree
Godot.Core.GodotParallaxLayer
Godot.Core.Godot_Marshalls
Godot.Core.GodotVisualScriptCustomNode
Godot.Core.GodotAcceptDialog
Godot.Core.GodotVehicleBody
Godot.Core.GodotVisualScriptComment
Godot.Core.GodotImageTexture
Godot.Core.GodotPhysics2DServer
Godot.Core.GodotBitmapFont
Godot.Core.GodotRectangleShape2D
Godot.Core.GodotResourceImporter
Godot.Core.GodotDampedSpringJoint2D
Godot.Core.GodotEncodedObjectAsID
Godot.Core.GodotVisualScriptYieldSignal
Godot.Core.GodotARVRInterfaceGDNative
Godot.Core.GodotShortCut
Godot.Core.GodotVisualScriptCondition
Godot.Core.GodotVideoStreamWebm
Godot.Core.GodotTabContainer
Godot.Core.GodotConcavePolygonShape
Godot.Core.GodotLine2D
Godot.Core.GodotReferenceRect
Godot.Core.GodotMeshDataTool
Godot.Core.GodotFont
Godot.Core.GodotPacketPeerUDP
Godot.Core.GodotCollisionObject
Godot.Core.GodotCheckBox
Godot.Core.GodotVisualScript
Godot.Core.GodotARVRPositionalTracker
Godot.Core.GodotVisualScriptNode
Godot.Core.GodotAudioEffectHighShelfFilter
Godot.Core.GodotAudioServer
Godot.Core.GodotAudioEffectLimiter
Godot.Core.GodotKinematicCollision2D
Godot.Core.GodotVisualScriptConstructor
Godot.Core.GodotVehicleWheel
Godot.Core.GodotPhysics2DDirectBodyStateSW
Godot.Core.GodotAudioEffectEQ6
Godot.Core.GodotTranslation
Godot.Core.GodotMesh
Godot.Core.GodotARVROrigin
Godot.Core.GodotViewportContainer
Godot.Core.GodotPhysics2DDirectSpaceState
Godot.Core.GodotCircleShape2D
Godot.Core.GodotARVRController
Godot.Core.GodotSpriteBase3D
Godot.Core.GodotVisualScriptOperator
Godot.Core.GodotPolygonPathFinder
Godot.Core.GodotOmniLight
Godot.Core.GodotInputEventMouse
Godot.Core.GodotBaseButton
Godot.Core.GodotVisibilityEnabler2D
Godot.Core.GodotVisualScriptSceneTree
Godot.Core.GodotVSplitContainer
Godot.Core.GodotVisualScriptFunctionCall
Godot.Core.GodotLight
Godot.Core.GodotVisualScriptGlobalConstant
Godot.Core.GodotRemoteTransform2D
Godot.Core.GodotAudioStreamOGGVorbis
Godot.Core.GodotPackedDataContainerRef
Godot.Core.GodotNode2D
Godot.Core.GodotStaticBody2D
Godot.Core.GodotLabel
Godot.Core.GodotAudioStreamPlayer3D
Godot.Core.GodotTranslationServer
Godot.Core.GodotAnimation
Godot.Core.GodotVisualScriptFunctionState
Godot.Core.GodotPosition3D
Godot.Core.GodotAudioEffectHighPassFilter
Godot.Core.GodotBackBufferCopy
Godot.Core.GodotARVRCamera
Godot.Core.GodotStreamPeer
Godot.Core.GodotListener
Godot.Core.GodotInputEventScreenDrag
Godot.Core.GodotNativeScript
Godot.Core.GodotRegExMatch
Godot.Core.Godot_Mutex
Godot.Core.Godot_ResourceSaver
Godot.Core.GodotSphereShape
Godot.Core.GodotPanoramaSky
Godot.Core.GodotCanvasItemMaterial
Godot.Core.GodotPanel
Godot.Core.GodotShape2D
Godot.Core.GodotPanelContainer
Godot.Core.GodotNavigationMesh
Godot.Core.GodotAudioEffectBandPassFilter
Godot.Core.GodotStreamPeerTCP
Godot.Core.GodotPlaneShape
Godot.Core.GodotVisualScriptFunction
Godot.Core.GodotAudioStreamPlayer
Godot.Core.GodotCurve2D
Godot.Core.GodotVisualScriptSwitch
Godot.Core.GodotAudioEffectChorus
Godot.Core.GodotAudioEffectFilter
Godot.Core.GodotCamera
Godot.Core.GodotMobileVRInterface
Godot.Tools.GodotEditorSelection
Godot.Core.GodotParticles2D
Godot.Core.GodotVisualScriptLocalVarSet
Godot.Core.GodotPhysics2DShapeQueryResult
Godot.Core.GodotButtonGroup
Godot.Core.GodotSky
Godot.Core.GodotTextureButton
Godot.Core.GodotSpinBox
Godot.Core.Godot_File
Godot.Core.GodotTheme
Godot.Core.GodotPinJoint
Godot.Core.GodotGradientTexture
Godot.Core.Godot_Thread
Godot.Core.GodotVisualScriptReturn
Godot.Core.GodotCollisionShape
Godot.Core.GodotPHashTranslation
Godot.Core.GodotPhysicsDirectBodyState
Godot.Api
